


Based on the provided feature descriptions and target encoding, here's the Python function for the horse colic surgery prediction:

```python
def predict(X: dict):
    nodes = 6 * [None]
    
    # Convert pain levels to severity scale
    severe_pain = [2, 5]  # continuous severe pain or intermittent severe pain
    moderate_pain = [4]   # intermittent mild pain
    
    # Node conditions
    nodes[0] = X["pain"] in severe_pain  # Is pain severe?
    nodes[1] = X["abdominal_distension"] in [1, 3]  # moderate or severe distension
    nodes[2] = X["pulse"] > 80
    nodes[3] = X["packed_cell_volume"] > 45
    nodes[4] = X["peristalsis"] == 1  # absent
    nodes[5] = X["capillary_refill_time"] == 0  # more than 3 seconds

    # Decision tree logic
    if nodes[0]:  # Severe pain
        if nodes[3]:  # High packed cell volume
            prediction = 1  # surgical
        else:
            if nodes[4]:  # Absent peristalsis
                prediction = 1  # surgical
            else:
                if nodes[5]:  # Poor capillary refill
                    prediction = 1  # surgical
                else:
                    prediction = 0  # non-surgical
    else:  # Not severe pain
        if nodes[1]:  # Significant abdominal distension
            if nodes[2]:  # High pulse
                prediction = 1  # surgical
            else:
                prediction = 0  # non-surgical
        else:
            prediction = 0  # non-surgical

    return prediction, nodes
```

This implementation:
1. Takes a dictionary of features as input
2. Creates a list of 6 boolean nodes representing the key decision points
3. Evaluates conditions based on clinical thresholds
4. Returns both the prediction (0 = no surgery, 1 = surgery) and the node values

The thresholds are set based on clinical relevance: