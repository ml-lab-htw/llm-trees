Here is a decision tree classifier with a maximum depth of 4, based on the provided features and the target variable (`target: a horse colic lesion is surgical or not`):

```python
def predict(X: dict):
    # Initialize a list to store the truth values for the inner nodes
    nodes = 4 * [None]
    
    # Node 0: Check for packed_cell_volume
    nodes[0] = X["packed_cell_volume"] > 45
    
    if nodes[0]:
        # Node 1: Check for abdominal_distension
        nodes[1] = X["abdominal_distension"] == 1  # moderate distension
        
        if nodes[1]:
            # Node 2: Check for pain level
            nodes[2] = X["pain"] >= 4  # intermittent mild pain or severe pain
            
            if nodes[2]:
                # Node 3: Check for mucous_membranes
                nodes[3] = X["mucous_membranes"] == 3  # dark cyanotic
                
                if nodes[3]:
                    prediction = 1  # Surgery
                else:
                    prediction = 1  # Surgery
            else:
                prediction = 0  # No surgery
        else:
            # Node 2: Check for respiratory_rate
            nodes[2] = X["respiratory_rate"] > 35
            
            if nodes[2]:
                prediction = 1  # Surgery
            else:
                prediction = 0  # No surgery
    else:
        # Node 1: Check for nasogastric_reflux
        nodes[1] = X["nasogastric_reflux"] == 0  # more than 1 liter
        
        if nodes[1]:
            # Node 2: Check for pulse
            nodes[2] = X["pulse"] > 90
            
            if nodes[2]:
                # Node 3: Check for peristalsis
                nodes[3] = X["peristalsis"] == 1  # absent peristalsis
                
                if nodes[3]:
                    prediction = 1  # Surgery
                else:
                    prediction = 0  # No surgery
            else:
                prediction = 0  # No surgery
        else:
            # Node 2: Check for abdominocentesis_appearance
            nodes[2] = X["abdominocentesis_appearance"] == 3  # serosanguinous
            
            if nodes[2]:
                prediction = 1  # Surgery
            else:
                prediction = 0  # No surgery
    
    return prediction, nodes
```

### Explanation:
- The decision tree has a maximum depth of 4, and each node represents a condition based on one of the given features.
- The decision path is based on different conditions, and the final prediction (`0 = no surgery`, `1 = surgery`) is made at the leaf nodes.
- The `nodes` list contains the truth values (`1` if the condition is satisfied, `0` otherwise) of the inner nodes, which can be used for further analysis or debugging.

### Example:
```python
X_example = {
    "packed_cell_volume": 50,
    "abdominal_distension": 1,
    "pain": 4,
    "mucous_membranes": 3,
    "respiratory_rate": 36,
    "nasogastric_reflux": 0,
    "pulse": 100,
    "peristalsis": 1,
    "abdominocentesis_appearance": 3
}

prediction, nodes = predict(X_example)
print(f"Prediction: {prediction}, Nodes: {nodes}")
```

This will output the prediction (whether surgery is needed or not) along with the list of truth values for each inner node.