Let's build a decision tree classifier with a maximum depth of 5 based on the given features and target. The target variable is whether a horse colic lesion requires surgery or not (`target`: 0 = no surgery, 1 = surgery).

Here is the decision tree formatted as a Python function:

```python
def predict(X: dict):
    nodes = 5 * [None]
    
    nodes[0] = X["surgery"] == 2  # Is surgery needed?
    nodes[1] = X["rectal_temperature"] > 38.5  # Does the horse have a fever?
    nodes[2] = X["pain"] > 2  # Is the pain continuous or severe?
    nodes[3] = X["peristalsis"] < 3  # Is peristalsis abnormal (absent or hypermotile)?
    nodes[4] = X["abdominal_distension"] > 2  # Is there severe abdominal distension?

    if nodes[0]:  # If surgery is needed
        if nodes[1]:  # If horse has a fever
            if nodes[2]:  # If pain is severe
                if nodes[3]:  # If peristalsis is abnormal
                    if nodes[4]:  # If abdominal distension is severe
                        prediction = 1  # Surgery required
                    else:
                        prediction = 0  # No surgery required
                else:
                    prediction = 1  # Surgery required
            else:
                prediction = 0  # No surgery required
        else:
            if nodes[3]:  # If peristalsis is abnormal
                prediction = 1  # Surgery required
            else:
                prediction = 0  # No surgery required
    else:
        prediction = 0  # No surgery required

    return prediction, nodes
```

### Explanation:
- **Node 0**: We check if surgery is needed (`surgery == 2`). This is the root node.
- **Node 1**: We check if the horse has a fever (`rectal_temperature > 38.5`).
- **Node 2**: We evaluate the severity of pain (`pain > 2`) to see if it's continuous or severe.
- **Node 3**: We check if peristalsis is abnormal (`peristalsis < 3`), which could indicate gastrointestinal issues.
- **Node 4**: We evaluate whether there is severe abdominal distension (`abdominal_distension > 2`).

### Example usage:
```python
# Example input feature dictionary
X = {
    "surgery": 2,
    "Age": 0,
    "rectal_temperature": 39.0,
    "pulse": 72,
    "respiratory_rate": 16,
    "temp_extremities": 3,
    "peripheral_pulse": 3,
    "mucous_membranes": 4,
    "capillary_refill_time": 1,
    "pain": 3,
    "peristalsis": 2,
    "abdominal_distension": 3,
    "nasogastric_tube": 1,
    "nasogastric_reflux": 1,
    "nasogastric_reflux_PH": 5.2,
    "rectal_examination": 4,
    "abdomen": 4,
    "packed_cell_volume": 45,
    "total_protein": 7.1,
    "abdominocentesis_appearance": 1,
    "abdomcentesis_total_protein": 3.5,
    "outcome": 3
}

# Predict if surgery is required
prediction, nodes = predict(X)
print("Prediction:", prediction)
print("Nodes:", nodes)
```

This function evaluates the conditions in the decision tree and returns whether surgery is required (`prediction`) and the list of node evaluations (`nodes`) where each element is `1` (condition satisfied) or `0` (condition not satisfied).