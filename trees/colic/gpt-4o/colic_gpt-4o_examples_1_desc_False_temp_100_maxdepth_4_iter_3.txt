Below is a decision tree classifier with a maximum depth of 4, based on the features you provided:

```python
def predict(X: dict):
    nodes = 4 * [None]
    
    # Inner node conditions
    nodes[0] = X["nasogastric_reflux"] == 0  # Nasogastric Reflux more than 1 liter?
    nodes[1] = X["pain"] == 2               # Continuous severe pain?
    nodes[2] = X["rectal_temperature"] < 37  # Rectal temperature below normal?
    nodes[3] = X["abdominal_distension"] == 1  # Moderate abdominal distension?
    
    # Decision logic
    if nodes[0]:
        if nodes[1]:
            if nodes[2]:
                if nodes[3]:
                    prediction = 1  # Surgery required
                else:
                    prediction = 0  # No surgery
            else:
                if nodes[3]:
                    prediction = 1  # Surgery required
                else:
                    prediction = 0  # No surgery
        else:
            if nodes[2]:
                prediction = 0  # No surgery
            else:
                prediction = 1  # Surgery required
    else:
        if nodes[1]:
            if nodes[2]:
                prediction = 1  # Surgery required
            else:
                prediction = 0  # No surgery
        else:
            prediction = 0  # No surgery
    
    return prediction, nodes
```

### Explanation of the decision tree:

1. **Node 0**: Checks if the horse has nasogastric reflux greater than 1 liter (`nasogastric_reflux == 0`). If this is true, it proceeds to node 1, otherwise, it goes to the else block.
   
2. **Node 1**: Checks if the horse is experiencing continuous severe pain (`pain == 2`). If true, it moves to node 2, otherwise, it moves to the else block.
   
3. **Node 2**: Checks if the horse's rectal temperature is below normal (`rectal_temperature < 37`). If true, it proceeds to node 3, otherwise, it moves to the else block.
   
4. **Node 3**: Checks if there is moderate abdominal distension (`abdominal_distension == 1`). Based on this, the final prediction is made.

### How to Use:

- **Input**: The function expects a dictionary `X` where the keys are the feature names (e.g., `"nasogastric_reflux"`, `"pain"`, etc.) and the values are the corresponding feature values.
  
- **Output**: The function returns:
  - `prediction`: 1 if surgery is required, 0 if no surgery is required.
  - `nodes`: A list of boolean values representing whether the condition at each node was satisfied (`True` or `False`).

### Example Usage:
```python
X = {
    "nasogastric_reflux": 0,
    "pain": 2,
    "rectal_temperature": 36.5,
    "abdominal_distension": 1
}

prediction, nodes = predict(X)
print(f"Prediction: {prediction}")  # Output: 1 (surgery required)
print(f"Node conditions: {nodes}")  # Output: [True, True, True, True]
```

This decision tree is designed based on the most important features related to the diagnosis of whether surgery is required for horse colic lesions.