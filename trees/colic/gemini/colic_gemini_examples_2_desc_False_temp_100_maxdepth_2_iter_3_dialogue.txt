


```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = int(X["pain"] in [2, 5])  # Moderate/Severe pain
    nodes[1] = int(X["capillary_refill_time"] == 0)  # CRT >= 3 seconds

    if nodes[0]: 
        prediction = 1  # Surgical
    else:
        if nodes[1]:
            prediction = 1  # Surgical
        else:
            prediction = 0  # Non-Surgical

    return prediction, nodes 
```

**Explanation:**

1. **Initialization:**
   - `nodes = 2 * [None]`: Creates a list called `nodes` with two elements, both initially set to `None`. This list will store the truth values (0 or 1) of the conditions at each inner node of our decision tree.

2. **Node 0 - Degree of Pain:**
   - `nodes[0] = int(X["pain"] in [2, 5])`: 
      - `X["pain"] in [2, 5]`: Checks if the value of the "pain" feature in the input dictionary `X` is either 2 ("continuous severe pain") or 5 ("intermittent severe pain"). 
      - `int(...)`: Converts the result of the condition (True or False) to an integer (1 for True, 0 for False).
      - This line essentially encodes whether the horse is experiencing moderate to severe pain.

3. **Node 1 - Capillary Refill Time (CRT):**
   - `nodes[1] = int(X["capillary_refill_time"] == 0)` 
      - `X["capillary_refill_time"] == 0`:  Checks if the "capillary_refill_time" in `X` is equal to 0 (meaning CRT >= 3 seconds).
      - `int(...)`:  Converts the True/False result to 1/0.
      - This encodes whether the horse has a prolonged CRT.

4. **Prediction Logic:**
   - The `if` and `else` statements implement the decision logic of the tree:
     - **`if nodes[0]:`**: If the horse has moderate/severe pain (Node 0 is True), we classify it as surgical (`prediction = 1`), regardless of CRT.
     - **`else:`**:  If pain is not severe, we move to Node 1 (CRT):
       - **`if nodes[1]:`**: If CRT is prolonged, classify as surgical (`prediction = 1`).
       - **`else:`**: If CRT is normal, classify as non-surgical (`prediction = 0`).

5. **Return:**
   - `return prediction, nodes`: The function returns the final prediction (0 or 1) and the `nodes` list containing the truth values of the inner nodes.

**Example Usage:**

```python
horse_data = {"pain": 5, "capillary_refill_time": 1}  
prediction, nodes = predict(horse_data) 
print(f"Prediction: {prediction}, Nodes: {nodes}")
```

This would output: `Prediction: 1, Nodes: [1, 0]`, indicating a surgical prediction, with the horse having severe pain (Node 0 = True) but normal CRT (Node 1 = False). 
