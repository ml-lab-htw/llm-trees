


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First split on "WC/TA" (Working Capital/Total Assets)
    nodes[0] = X['WC/TA'] <= 0.05
    
    if nodes[0]:  # If WC/TA <= 0.05
        # Second split on "EBIT/TA" (Earnings Before Interest and Tax/Total Assets)
        nodes[1] = X['EBIT/TA'] <= 0.02
        
        if nodes[1]:  # If EBIT/TA <= 0.02
            prediction = 1  # Bankrupt (Yes)
        else:  # EBIT/TA > 0.02
            prediction = 0  # Not Bankrupt (No)
    else:  # WC/TA > 0.05
        prediction = 0  # Not Bankrupt (No)

    return prediction, nodes
```

### Explanation of the Function:
1. **Input**: The function takes a dictionary `X` as input, where the keys are the feature names (e.g., `'WC/TA'`, `'EBIT/TA'`) and the values are the corresponding numerical values of those features for a given company.
2. **Nodes**: A list `nodes` is used to store the truth values of the conditions at each inner node of the decision tree.
   - `nodes[0]`: Checks if **Working Capital/Total Assets (WC/TA)** is less than or equal to 0.05.
   - `nodes[1]`: If the condition in `nodes[0]` is satisfied, it further checks if **Earnings Before Interest and Tax/Total Assets (EBIT/TA)** is less than or equal to 0.02.
3. **Decision Logic**:
   - If **WC/TA ≤ 0.05** and **EBIT/TA ≤ 0.02**, the company is predicted as **Bankrupt (1)**.
   - If **WC/TA ≤ 0.05** but **EBIT/TA > 0.02**, the company is predicted as **Not Bankrupt (0)**.
   - If **WC/TA > 0.05**, the company is predicted as **Not Bankrupt (0)** regardless of the value of **EBIT/TA**.
4. **Output**:
   - The function returns two things:
     - **`prediction`**: Whether the company is predicted to have gone bankrupt (`1`) or not (`0`).
     - **`nodes`**: A list of truth values (`1` or `0`) indicating whether the conditions at each node were satisfied.

