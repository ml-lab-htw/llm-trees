Here’s a decision tree with a maximum depth of 1 for the Features and target variable (whether a company went bankrupt or not). I’ll use the most important feature based on general business knowledge (for example, the **Working Capital/Total Assets (WC/TA)** ratio is often a critical indicator of a company's liquidity and risk of bankruptcy).

```python
def predict(X: dict):
    nodes = 1 * [None]
    nodes[0] = X["WC/TA"] <= 0.1  # Arbitrary threshold for Working Capital/Total Assets
    
    if nodes[0]:
      prediction = 1  # Company likely went bankrupt
    else:
      prediction = 0  # Company likely did not go bankrupt
    return prediction, nodes
```

### Explanation:
- **Feature used**: **WC/TA** (Working Capital/Total Assets) is a commonly used financial ratio to assess a company's liquidity. If this value is low (e.g., less than or equal to 0.1), the company may have liquidity problems and could be at risk of bankruptcy.
- **Threshold**: I used 0.1 as a simple threshold to make a prediction. If the company's **WC/TA** is less than or equal to 0.1, it is predicted to have gone bankrupt.
- **Prediction**:
  - If the condition is true (WC/TA ≤ 0.1), the prediction is **1** (company went bankrupt).
  - If the condition is false (WC/TA > 0.1), the prediction is **0** (company did not go bankrupt).
