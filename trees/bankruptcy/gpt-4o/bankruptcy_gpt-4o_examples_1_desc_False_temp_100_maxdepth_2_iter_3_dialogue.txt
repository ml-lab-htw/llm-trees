


```python
def predict(X: dict):
    nodes = 2 * [None]

    # Node 0: WC/TA <= 0.05
    nodes[0] = X["WC/TA"] <= 0.05

    if nodes[0]:
        # Node 1: EBIT/TA <= 0.00
        nodes[1] = X["EBIT/TA"] <= 0.00
        if nodes[1]:
            prediction = 1  # Bankrupt
        else:
            prediction = 0  # Not Bankrupt
    else:
        # Node 1: BVE/BVL <= 1.0
        nodes[1] = X["BVE/BVL"] <= 1.0
        if nodes[1]:
            prediction = 1  # Bankrupt
        else:
            prediction = 0  # Not Bankrupt

    return prediction, nodes
```

### Explanation:
1. **`nodes[0]`:** This corresponds to the decision at the first node, where we check if `WC/TA` (Working Capital/Total Assets) is less than or equal to 0.05.
2. **`nodes[1]`:** This corresponds to the decision at the second level, where the logic depends on the first decision:
   - If `WC/TA <= 0.05`, we check `EBIT/TA` (Earnings Before Interest and Tax/Total Assets). If it's less than or equal to 0.00, the company is classified as **bankrupt** (1).
   - If `WC/TA > 0.05`, we check `BVE/BVL` (Book Value of Equity/Book Value of Liabilities). If it's less than or equal to 1.0, the company is classified as **bankrupt** (1), otherwise **not bankrupt** (0).

The function returns a tuple with the prediction and a list of boolean values representing whether the conditions at each decision node were satisfied.