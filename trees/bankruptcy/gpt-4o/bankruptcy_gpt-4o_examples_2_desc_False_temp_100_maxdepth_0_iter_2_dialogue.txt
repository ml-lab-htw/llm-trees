


To convert the given decision tree into a Python function, we'll follow these steps:
1. Create a list to store the Boolean result of each node's condition.
2. Implement the decision tree logic using `if` statements.
3. Return the prediction and the list of node conditions.

Here is the implementation:

```python
def predict(X: dict):
    nodes = 5 * [None]  # Initialize a list to track inner node conditions

    nodes[0] = X["EBIT/TA"] <= 0.03
    nodes[1] = X["WC/TA"] <= -0.05
    nodes[2] = X["RE/TA"] <= 0.15
    nodes[3] = X["S/TA"] <= 0.20
    nodes[4] = X["BVE/BVL"] <= 1.00

    if nodes[0]:  # EBIT/TA <= 0.03
        if nodes[1]:  # WC/TA <= -0.05
            prediction = 1  # Bankrupt
        else:  # WC/TA > -0.05
            if nodes[2]:  # RE/TA <= 0.15
                prediction = 1  # Bankrupt
            else:  # RE/TA > 0.15
                prediction = 0  # Not Bankrupt
    else:  # EBIT/TA > 0.03
        if nodes[3]:  # S/TA <= 0.20
            prediction = 1  # Bankrupt
        else:  # S/TA > 0.20
            if nodes[4]:  # BVE/BVL <= 1.00
                prediction = 1  # Bankrupt
            else:  # BVE/BVL > 1.00
                prediction = 0  # Not Bankrupt

    return prediction, nodes

# Example usage:
sample_input = {
    'WC/TA': -0.1,
    'RE/TA': 0.2,
    'EBIT/TA': 0.04,
    'S/TA': 0.25,
    'BVE/BVL': 1.5
}

result = predict(sample_input)
print('Prediction:', result[0])  # Output: Prediction: 0 (Not Bankrupt)
print('Node Conditions:', result[1])  # Output: Node Conditions: [False, None, None, False, False]
```

In this implementation:
- The function `predict` takes a dictionary `X` containing the financial ratios.
- `nodes` is a list to store the truth value of each decision node.
- We check each condition sequentially, storing the result in `nodes`.
- Based on the conditions, the function determines whether the company is classified as "Bankrupt" (`1`) or "Not Bankrupt" (`0`).

Feel free to test the function with different input values to see how the predictions and node conditions change.