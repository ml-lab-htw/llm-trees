


Let's convert the hypothetical decision tree for predicting company bankruptcy into a Python function. This function will take a dictionary of feature values and return a single prediction as well as a list of truth values representing the conditions at each node.

Here's the function:

```python
def predict(X: dict):
    nodes = 5 * [None]

    # Define the conditions for each node
    nodes[0] = X["WC/TA"] <= 0.05
    nodes[1] = not nodes[0] and X["EBIT/TA"] <= 0.03
    nodes[2] = not nodes[0] and not nodes[1] and X["RE/TA"] <= 0.10
    nodes[3] = not nodes[0] and not nodes[1] and not nodes[2] and X["BVE/BVL"] <= 1.50
    nodes[4] = not nodes[0] and not nodes[1] and not nodes[2] and not nodes[3]

    # Determine the prediction based on the conditions
    if nodes[0]:
        prediction = 1
    elif nodes[1]:
        prediction = 1
    elif nodes[2]:
        prediction = 1
    elif nodes[3]:
        prediction = 1
    elif nodes[4]:
        prediction = 0
    return prediction, nodes

# Example usage:
X_example = {
    'WC/TA': 0.04,
    'RE/TA': 0.08,
    'EBIT/TA': 0.02,
    'S/TA': 1.0,
    'BVE/BVL': 1.8
}

prediction, node_conditions = predict(X_example)
print("Prediction:", prediction)
print("Node Conditions:", node_conditions)
```

The `nodes` list stores the truth values for each node condition. The decisions are cascaded such that the result of each node influences the evaluations of subsequent nodes.

Note:
1. `nodes[0]` checks if Working Capital/Total Assets (WC/TA) is less than or equal to 0.05.
2. `nodes[1]` checks (if `nodes[0]` is false) for Earnings Before Interest and Tax/Total Assets (EBIT/TA) less than or equal to 0.03.
3. `nodes[2]` checks (if `nodes[0]` and `nodes[1]` are false) for Retained Earnings/Total Assets (RE/TA) less than or equal to 0.10.
4. `nodes[3]` checks (if `nodes[0]`, `nodes[1]`, and `nodes[2] `are false) for Book Value of Equity/Book Value of Liabilities (BVE/BVL) less than or equal to 1.50.
5. `nodes[4]` checks if none of the previous conditions are met, leading to "Not Bankrupt".

The function returns the prediction and the truth values of the conditions at each node. This provides a full path of the decision-making process for each prediction.