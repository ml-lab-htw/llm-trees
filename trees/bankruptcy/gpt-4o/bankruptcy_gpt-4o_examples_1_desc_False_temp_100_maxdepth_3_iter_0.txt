Based on the Features and the target variable provided, here's a decision tree function with a maximum depth of 3. The function will make a prediction on whether a company went bankrupt (target: 0 = no, 1 = yes) based on the most important features.

### Features:
- **WC/TA**: Working Capital/Total Assets
- **RE/TA**: Retained Earnings/Total Assets
- **EBIT/TA**: Earnings Before Interest and Tax/Total Assets
- **S/TA**: Sales/Total Assets
- **BVE/BVL**: Book Value of Equity/Book Value of Liabilities

### Target variable:
- **target**: Company went bankrupt or not (0 = no, 1 = yes)

### Decision Tree Function:
```python
def predict(X: dict):
    nodes = 3 * [None]
    
    # Decision nodes
    nodes[0] = X["WC/TA"] <= 0.05   # Example threshold, companies with WC/TA <= 0.05 might indicate liquidity issues
    nodes[1] = X["EBIT/TA"] <= 0.1  # EBIT/TA <= 0.1 could be a signal of poor profitability
    nodes[2] = X["RE/TA"] <= 0.0    # Negative retained earnings could indicate accumulated losses
    
    # Decision logic
    if nodes[0]:
        prediction = 1  # High risk of bankruptcy if WC/TA is low
    else:
        if nodes[1]:
            if nodes[2]:
                prediction = 1  # Higher bankruptcy risk if EBIT/TA is low and RE/TA is negative
            else:
                prediction = 0  # Safe if EBIT/TA is low but RE/TA is positive
        else:
            prediction = 0  # Generally safe if EBIT/TA is high, less likelihood of bankruptcy

    return prediction, nodes
```

### Explanation:
- **Node 0:** Checks if the company's **WC/TA** (Working Capital/Total Assets) is less than or equal to 0.05. If this is true, the company is predicted to be at high risk of bankruptcy (prediction = 1).
- **Node 1:** If **WC/TA** is greater than 0.05, we check **EBIT/TA** (Earnings Before Interest and Tax/Total Assets). If EBIT/TA is low (≤ 0.1), it could indicate poor profitability and a higher risk of bankruptcy.
- **Node 2:** If **EBIT/TA** is low, we check **RE/TA** (Retained Earnings/Total Assets). If RE/TA is negative (≤ 0.0), the company might have accumulated losses, which further increases the bankruptcy risk (prediction = 1). If RE/TA is positive, the company is likely to be in a better financial situation (prediction = 0).
- If **EBIT/TA** is greater than 0.1, the company is predicted to be safe from bankruptcy (prediction = 0).

### Example Usage:
```python
X = {
    "WC/TA": 0.04,
    "RE/TA": -0.1,
    "EBIT/TA": 0.08,
    "S/TA": 1.2,
    "BVE/BVL": 0.5
}

prediction, nodes = predict(X)
print(f"Prediction: {prediction}, Nodes: {nodes}")
```

In this example, the function will evaluate the conditions in the decision tree and return a prediction (0 = no bankruptcy, 1 = bankruptcy) along with a list of truth values for the inner nodes based on the input data.
