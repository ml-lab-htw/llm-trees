


```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = int(X["EBIT/TA"] <= 0.05)  # Node 0: Is EBIT/TA <= 0.05?
    nodes[1] = int(X["RE/TA"] <= 0.10)    # Node 1: Is RE/TA <= 0.10?
    
    if nodes[0]:
        # If Node 0 condition is True (EBIT/TA <= 0.05), predict Bankrupt (1)
        prediction = 1
    else:
        if nodes[1]:
            # If Node 1 condition is True (RE/TA <= 0.10), predict Bankrupt (1)
            prediction = 1
        else:
            # If Node 1 condition is False (RE/TA > 0.10), predict Not Bankrupt (0)
            prediction = 0

    return prediction, nodes
```

**Explanation:**

- **Nodes List:** The `nodes` list keeps track of whether each condition in the decision tree is satisfied (`1`) or not (`0`).
  - `nodes[0]` corresponds to the first split: `EBIT/TA <= 0.05`
  - `nodes[1]` corresponds to the second split: `RE/TA <= 0.10`

- **Prediction Logic:**
  - If **Earnings Before Interest and Tax / Total Assets (EBIT/TA)** is **less than or equal to 5% (0.05)**:
    - The company is predicted to **have gone bankrupt** (`prediction = 1`).
  - Else, if **Retained Earnings / Total Assets (RE/TA)** is **less than or equal to 10% (0.10)**:
    - The company is predicted to **have gone bankrupt** (`prediction = 1`).
  - Else:
    - The company is predicted to **have not gone bankrupt** (`prediction = 0`).

**Usage Example:**

```python
# Example input feature dictionary
X_sample = {
    "WC/TA": 0.08,
    "RE/TA": 0.12,
    "EBIT/TA": 0.06,
    "S/TA": 0.85,
    "BVE/BVL": 1.5
}

# Call the predict function
prediction, nodes = predict(X_sample)

print(f"Prediction: {prediction}")  # Output: Prediction: 0 (Not Bankrupt)
print(f"Nodes: {nodes}")            # Output: Nodes: [0, 1]
```

**Note:**

- Ensure that the feature values in the input dictionary `X` use the exact keys provided:
  - `"WC/TA"`, `"RE/TA"`, `"EBIT/TA"`, `"S/TA"`, `"BVE/BVL"`
- The function evaluates both conditions and returns the prediction along with the evaluation of each node.
- The `nodes` list provides a transparent view of the decision path taken for the prediction.