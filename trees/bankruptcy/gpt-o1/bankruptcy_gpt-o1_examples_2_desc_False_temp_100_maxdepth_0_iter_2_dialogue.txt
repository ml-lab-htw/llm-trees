


```python
def predict(X: dict):
    nodes = [None] * 3  # Initialize a list to store truth values of the inner nodes

    # Compute the truth values of the inner nodes
    nodes[0] = X['EBIT/TA'] <= 0.05
    nodes[1] = X['RE/TA'] <= -0.02
    nodes[2] = X['WC/TA'] <= 0.15

    # Navigate the decision tree based on the truth values
    if nodes[0]:  # If Earnings Before Interest and Tax / Total Assets <= 0.05
        if nodes[1]:  # If Retained Earnings / Total Assets <= -0.02
            prediction = 1  # Company went bankrupt
        else:  # Retained Earnings / Total Assets > -0.02
            prediction = 0  # Company did not go bankrupt
    else:  # Earnings Before Interest and Tax / Total Assets > 0.05
        if nodes[2]:  # If Working Capital / Total Assets <= 0.15
            prediction = 1  # Company went bankrupt
        else:  # Working Capital / Total Assets > 0.15
            prediction = 0  # Company did not go bankrupt

    return prediction, nodes
```

**Explanation:**

- We start by initializing a list `nodes` to store the truth values of the inner nodes in the decision tree.
- We compute the truth values for each node based on the input features:
  - `nodes[0]`: Checks if `EBIT/TA` is less than or equal to 0.05.
  - `nodes[1]`: Checks if `RE/TA` is less than or equal to -0.02.
  - `nodes[2]`: Checks if `WC/TA` is less than or equal to 0.15.
- We then navigate through the decision tree using nested `if` statements, making decisions based on the truth values stored in `nodes`.
- Finally, we return the prediction (0 for not bankrupt, 1 for bankrupt) along with the list of truth values of the inner nodes.

**Usage Example:**

```python
# Example input features
X_example = {
    'WC/TA': 0.10,
    'RE/TA': -0.03,
    'EBIT/TA': 0.04,
    'S/TA': 1.2,
    'BVE/BVL': 0.5
}

prediction, nodes = predict(X_example)
print(f"Prediction: {'Bankrupt' if prediction == 1 else 'Not Bankrupt'}")
print(f"Inner Nodes Truth Values: {nodes}")
```

**Output:**

```
Prediction: Bankrupt
Inner Nodes Truth Values: [True, True, True]
```

This function allows you to input a dictionary `X` with the specified feature keys and returns both the prediction and the truth values of the inner nodes, enabling you to trace the decision-making process of the classifier.