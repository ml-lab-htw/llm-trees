


Sure! Based on the decision tree we previously constructed, here's the Python function formatted according to your specifications.

**Features:**

- **'WC/TA'**: Working Capital / Total Assets
- **'RE/TA'**: Retained Earnings / Total Assets
- **'EBIT/TA'**: Earnings Before Interest and Tax / Total Assets
- **'S/TA'**: Sales / Total Assets
- **'BVE/BVL'**: Book Value of Equity / Book Value of Liabilities

**Target Variable:**

- **company went bankrupt or not**: (0 = no, 1 = yes)

**Python Function:**

```python
def predict(X: dict):
    nodes = 3 * [None]
    nodes[0] = int(X['EBIT/TA'] <= 0.0)
    nodes[1] = int(X['RE/TA'] <= 0.2)
    nodes[2] = int(X['WC/TA'] <= 0.1)

    if nodes[0]:
        prediction = 1  # Bankrupt
    else:
        if nodes[1]:
            prediction = 1  # Bankrupt
        else:
            if nodes[2]:
                prediction = 1  # Bankrupt
            else:
                prediction = 0  # Not Bankrupt
    return prediction, nodes
```

**Explanation:**

- **nodes[0]** corresponds to the condition **'EBIT/TA' ≤ 0.0**.
  - **1** if the company's Earnings Before Interest and Tax relative to Total Assets is non-positive (indicating potential unprofitability).
  - **0** otherwise.

- **nodes[1]** corresponds to the condition **'RE/TA' ≤ 0.2**.
  - **1** if the Retained Earnings relative to Total Assets is low (suggesting limited reinvested profits).
  - **0** otherwise.

- **nodes[2]** corresponds to the condition **'WC/TA' ≤ 0.1**.
  - **1** if the Working Capital relative to Total Assets is low (indicating potential liquidity issues).
  - **0** otherwise.

**Usage Example:**

```python
# Example input features for a company
company_data = {
    'WC/TA': 0.15,
    'RE/TA': 0.25,
    'EBIT/TA': 0.05,
    'S/TA': 0.8,
    'BVE/BVL': 1.2
}

# Predict bankruptcy status
prediction, nodes = predict(company_data)

print("Prediction (0 = Not Bankrupt, 1 = Bankrupt):", prediction)
print("Node Conditions:", nodes)
```

**Output:**

```
Prediction (0 = Not Bankrupt, 1 = Bankrupt): 0
Node Conditions: [0, 0, 0]
```

In this example:

- **'EBIT/TA' > 0.0**, so **nodes[0] = 0**.
- **'RE/TA' > 0.2**, so **nodes[1] = 0**.
- **'WC/TA' > 0.1**, so **nodes[2] = 0**.
- Since none of the conditions for bankruptcy are met, the company is predicted as **Not Bankrupt**.

**Note:** The `nodes` list provides a trace of the decision path, with each entry representing whether a condition in the decision tree was satisfied (`1`) or not (`0`).