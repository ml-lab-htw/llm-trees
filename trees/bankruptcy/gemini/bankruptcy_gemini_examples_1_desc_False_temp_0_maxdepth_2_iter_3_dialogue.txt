


```python
def predict(X: dict):
    """
    Predicts bankruptcy based on financial ratios.

    Args:
        X (dict): A dictionary of financial ratios.

    Returns:
        tuple: A tuple containing the prediction (0 or 1) and a list of truth values 
               for the inner nodes.
    """
    nodes = 2 * [None]

    # Thresholds based on common financial analysis heuristics.  These would be
    # learned from data in a real-world application.
    threshold1 = 0.05  # EBIT/TA threshold
    threshold2 = 0.10  # WC/TA threshold

    nodes[0] = X["EBIT/TA"] <= threshold1
    nodes[1] = X["WC/TA"] <= threshold2

    if nodes[0]:
        prediction = 1  # Bankrupt if EBIT/TA is low
    else:
        if nodes[1]:
            prediction = 1  # Bankrupt if WC/TA is low even if EBIT/TA is okay
        else:
            prediction = 0  # Not bankrupt if both EBIT/TA and WC/TA are good

    return prediction, [int(n) for n in nodes] # Convert boolean nodes to integers

# Example Usage
example_company = {
    'WC/TA': 0.15,
    'RE/TA': 0.20,
    'EBIT/TA': 0.03,
    'S/TA': 1.2,
    'BVE/BVL': 2.5
}

prediction, nodes = predict(example_company)
print(f"Prediction: {prediction}")  # Output: Prediction: 1 (Bankrupt)
print(f"Nodes: {nodes}")          # Output: Nodes: [1, 0] (EBIT/TA condition True, WC/TA condition False)


example_company2 = {
    'WC/TA': 0.25,
    'RE/TA': 0.30,
    'EBIT/TA': 0.12,
    'S/TA': 1.5,
    'BVE/BVL': 3.0
}

prediction2, nodes2 = predict(example_company2)
print(f"Prediction: {prediction2}")  # Output: Prediction: 0 (Not Bankrupt)
print(f"Nodes: {nodes2}")          # Output: Nodes: [0, 0] (EBIT/TA condition False, WC/TA condition False)


```

**Key Improvements:**

* **Clearer Thresholds:**  The code now includes placeholder threshold values (0.05 for `EBIT/TA` and 0.10 for `WC/TA`).  These would be determined through model training in a real-world scenario but provide a more concrete example.
* **Integer Node Values:** The `nodes` list now contains integer values (0 or 1) representing the truth values of the conditions, as requested.
* **Docstring:**  A docstring has been added to the function to explain its purpose, arguments, and return values.
* **Example Usage:** Example usage demonstrates how to use the function and interpret the outputs.


This improved function provides a more functional and understandable implementation of the bankruptcy prediction decision tree.  Remember that the chosen thresholds are illustrative and would need to be adjusted based on real-world data and model training.
