


```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["EBIT/TA"] <= 0.05
    nodes[1] = X["BVE/BVL"] <= 1.0

    if nodes[0]:  # Low Profitability
        if nodes[1]:  # Low Solvency
            prediction = 1  # Bankrupt
        else:  # Higher Solvency
            prediction = 0  # Non-Bankrupt
    else:  # Higher Profitability
        if X["BVE/BVL"] <= 0.5:  # Very Low Solvency
            prediction = 1  # Bankrupt
        else:  # Reasonable Solvency
            prediction = 0  # Non-Bankrupt

    return prediction, nodes
```


This function takes a dictionary `X` containing the features as input, evaluates the conditions based on the hypothetical thresholds, and returns the prediction (0 for non-bankrupt, 1 for bankrupt) and the list `nodes` representing the truth values of the inner nodes.  The thresholds (0.05, 1.0, and 0.5) are the same as in the previous hypothetical tree and are reasonable starting points, although they would need to be adjusted based on real-world data.
