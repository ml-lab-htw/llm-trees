


```python
def predict(X: dict):
    nodes = 4 * [None]  # Initialize list to store truth values of inner nodes

    nodes[0] = X['WC/TA'] <= 0.10  # Working Capital/Total Assets threshold
    nodes[1] = X['RE/TA'] <= -0.05  # Retained Earnings/Total Assets threshold
    nodes[2] = X['EBIT/TA'] <= 0.02  # EBIT/Total Assets threshold
    nodes[3] = X['EBIT/TA'] <= 0.00  # Another EBIT/TA threshold for the other branch


    if nodes[0]:  # Low Working Capital
        if nodes[1]:  # Low Retained Earnings
            prediction = 1  # Bankrupt
        else:  # Higher Retained Earnings
            if nodes[2]: # Low EBIT
                prediction = 1  # Bankrupt
            else: # Higher EBIT
                prediction = 0  # Non-Bankrupt
    else:  # Higher Working Capital
        if nodes[3]: # Low EBIT
            prediction = 1  # Bankrupt
        else: # Higher EBIT
            prediction = 0  # Non-Bankrupt


    return prediction, nodes

```


This function takes a dictionary `X` representing the features of a company as input.  It uses the defined thresholds to evaluate the conditions at each node of the decision tree and assigns truth values (1 or 0) to the `nodes` list. The `prediction` is determined based on the path taken through the tree, and the function returns both the `prediction` and the `nodes` list. This structure mirrors the requested format and functionality while representing the logic of the previously described decision tree.  Remember that the chosen thresholds are examples and would ideally be learned from a training dataset.
