


```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X['EBIT/TA'] <= 0.05
    nodes[1] = X['BVE/BVL'] <= 1.0

    if nodes[0]:
        prediction = 1  # Bankrupt
    else:
        if nodes[1]:
            prediction = 1  # Bankrupt
        else:
            prediction = 0  # Non-Bankrupt

    return prediction, nodes

```


This function takes a dictionary `X` representing the feature values for a single company. The keys of the dictionary correspond to the feature names ('WC/TA', 'RE/TA', 'EBIT/TA', 'S/TA', 'BVE/BVL').  It returns the predicted bankruptcy status (0 or 1) and a list `nodes` containing the truth values of the decision nodes.


Remember:  This function uses pre-defined thresholds (0.05 and 1.0) which are not based on any data analysis.  In a real-world application, you would train a decision tree model on a dataset to learn these thresholds from the data. This is just a demonstration of the function structure based on your request.
