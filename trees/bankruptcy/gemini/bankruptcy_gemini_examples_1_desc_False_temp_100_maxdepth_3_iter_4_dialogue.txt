


```python
def predict(X: dict):
    nodes = 2 * [None]

    nodes[0] = X['EBIT/TA'] <= 0.05
    nodes[1] = X['WC/TA'] <= 0.10 if nodes[0] else X['BVE/BVL'] <= 1.0

    if nodes[0]:
        if nodes[1]:  # Low EBIT/TA and low WC/TA
            prediction = 1  # Bankrupt
        else:         # Low EBIT/TA but decent WC/TA
            prediction = 0  # Not Bankrupt (Risky)
    else:
        if nodes[1]: # Decent EBIT/TA but low BVE/BVL
            prediction = 1 # Bankrupt (High Leverage)
        else:         # Decent EBIT/TA and decent BVE/BVL
            prediction = 0  # Not Bankrupt

    return prediction, nodes
```


This function directly implements the decision tree logic outlined previously, using the provided feature names and the 0/1 encoding for bankruptcy prediction.  It also returns the list `nodes` representing the truth values of the inner nodes' conditions, as requested.  The chosen thresholds (0.05, 0.10, 1.0) remain as reasonable examples but should ideally be determined from data analysis if available. Remember that without real data and training, this function represents a simplified hypothetical model.
