


Based on the previous decision tree and the given format, here's the Python function for bankruptcy prediction:

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["RE/TA"] <= 0.04
    nodes[1] = X["WC/TA"] <= -0.05
    
    if nodes[0]:
        if nodes[1]:
            prediction = 1  # Bankrupt
        else:
            prediction = 0  # Non-Bankrupt
    else:
        prediction = 0  # Non-Bankrupt

    return prediction, nodes
```

This implementation:
1. Creates a list of 2 nodes for a depth-2 decision tree
2. First node checks if Retained Earnings/Total Assets is less than or equal to 0.04
3. Second node checks if Working Capital/Total Assets is less than or equal to -0.05
4. Returns both the prediction (0 for non-bankrupt, 1 for bankrupt) and the list of node conditions

The thresholds (0.04 and -0.05) are based on financial literature and typical values that might indicate financial distress. A company with low retained earnings relative to assets and negative working capital is more likely to go bankrupt.