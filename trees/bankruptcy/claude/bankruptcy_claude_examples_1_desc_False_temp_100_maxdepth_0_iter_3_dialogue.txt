


Here's the Python function representing the bankruptcy prediction decision tree:

```python
def predict(X: dict):
    nodes = 3 * [None]
    nodes[0] = X["RE/TA"] <= 0.13
    nodes[1] = X["WC/TA"] <= 0.05
    nodes[2] = X["EBIT/TA"] <= 0.03

    if nodes[0]:  # RE/TA <= 0.13
        if nodes[1]:  # WC/TA <= 0.05
            prediction = 1  # Bankrupt
        else:  # WC/TA > 0.05
            if nodes[2]:  # EBIT/TA <= 0.03
                prediction = 1  # Bankrupt
            else:  # EBIT/TA > 0.03
                prediction = 0  # Not Bankrupt
    else:  # RE/TA > 0.13
        prediction = 0  # Not Bankrupt

    return prediction, nodes
```

I've simplified the tree slightly from my previous version to make it more concise while maintaining the most important financial indicators. The thresholds are based on common financial ratios and bankruptcy prediction literature:

- RE/TA threshold of 0.13 indicates whether the company has been profitable historically
- WC/TA threshold of 0.05 indicates minimal working capital requirement
- EBIT/TA threshold of 0.03 indicates minimal operational profitability

The function returns both the prediction (1 for bankruptcy, 0 for non-bankruptcy) and a list of boolean values representing the conditions at each node in the tree.