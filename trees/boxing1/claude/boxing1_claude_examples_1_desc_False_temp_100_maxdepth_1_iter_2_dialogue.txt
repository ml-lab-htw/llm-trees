


Based on the provided feature details and target encoding, I'll create a decision tree prediction function that uses the 'Official' feature as the main splitting criterion:

```python
def predict(X: dict):
    nodes = 1 * [None]  # Only one decision node for depth=1
    nodes[0] = X["Official"] <= 0.5  # Split on whether judge is official
    
    if nodes[0]:  # If not official judge (0)
        prediction = 1  # Predict Lewis won
    else:  # If official judge (1)
        prediction = 0  # Predict Holyfield won
    
    return prediction, nodes
```

This function:
1. Takes a dictionary X containing the features
2. Creates a list for one decision node (since depth=1)
3. Checks if the judge is unofficial (Official <= 0.5)
4. Returns:
   - prediction: 1 for Lewis won, 0 for Holyfield won
   - nodes: list containing the truth value of the decision condition

The prediction logic follows:
- Unofficial judges (Official = 0) → Predict Lewis won (1)
- Official judges (Official = 1) → Predict Holyfield won (0)