


I'll create a decision tree function based on the boxing match features you provided. I'll use the most discriminative features and format it according to your requirements.

```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First decision node: Is it an official judge?
    nodes[0] = X["Official"] <= 0.5
    
    # Second decision node: Is it Judge E. Williams (0) or HBO-Lederman (3)?
    nodes[1] = X["Judge"] <= 2
    
    if nodes[0]:  # Not an official judge
        if nodes[1]:  # Judges 0-2
            prediction = 0  # Holyfield wins
        else:  # Judges 3-9
            prediction = 1  # Lewis wins
    else:  # Official judge
        if nodes[1]:  # E. Williams
            prediction = 0  # Holyfield wins
        else:  # Other official judges
            prediction = 1  # Lewis wins
            
    return prediction, nodes
```

This decision tree:
1. First checks if the judge is official (Official <= 0.5)
2. Then checks the judge ID (Judge <= 2)
3. Makes predictions based on these two features:
   - Non-official judges (nodes[0] = True):
     - If Judge ID ≤ 2: Predicts Holyfield (0)
     - If Judge ID > 2: Predicts Lewis (1)
   - Official judges (nodes[0] = False):
     - If Judge ID ≤ 2: Predicts Holyfield (0)
     - If Judge ID > 2: Predicts Lewis (1)

The function returns both:
1. The prediction (1 for Lewis, 0 for Holyfield)
2. A list of boolean values representing the conditions at each node