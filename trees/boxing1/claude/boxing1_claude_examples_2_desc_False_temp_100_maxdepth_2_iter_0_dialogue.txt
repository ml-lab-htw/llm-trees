


Based on the decision tree I provided earlier and the format you've requested, here's the Python function that implements the decision tree classifier for predicting which boxer (Lewis or Holyfield) won each round:

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["Judge"] <= 2  # E. Williams, L. O'Connell, S. Christodoulu
    nodes[1] = X["Round"] <= 6 if nodes[0] else X["Official"] <= 0
    
    if nodes[0]:
        if nodes[1]:
            prediction = 0  # Holyfield
        else:
            prediction = 1  # Lewis
    else:
        if nodes[1]:
            prediction = 1  # Lewis
        else:
            prediction = 0  # Holyfield

    return prediction, nodes
```

Explanation:

1. The function takes a dictionary `X` as input, containing the features.

2. We create a list `nodes` to store the boolean results of each decision node.

3. The first node checks if the Judge is one of the official judges (E. Williams, L. O'Connell, or S. Christodoulu). These are encoded as 0, 1, and 2 respectively.

4. The second node depends on the result of the first node:
   - If the first node is True (official judge), we check if the Round is 6 or earlier.
   - If the first node is False (non-official judge), we check if the judge is not an official scorer for the match.

5. Based on these conditions, we make the final prediction:
   - For official judges (nodes[0] is True):
     - If it's Round 6 or earlier, Holyfield wins (0)
     - If it's after Round 6, Lewis wins (1)
   - For non-official judges (nodes[0] is False):
     - If they're not an official scorer, Lewis wins (1)
     - If they are an official scorer, Holyfield wins (0)

6. The function returns the prediction (1 for Lewis, 0 for Holy