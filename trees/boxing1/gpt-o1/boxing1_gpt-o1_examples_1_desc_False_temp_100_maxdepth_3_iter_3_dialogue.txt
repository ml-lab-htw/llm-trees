


Certainly! Based on the decision tree previously provided and the specific feature keys and target variable encoding you've specified, here is a Python function that predicts which boxer won each round. The function returns the prediction (1 for **Lewis**, 0 for **Holyfield**) and a list representing the truth values of the inner nodes in the decision tree.

```python
def predict(X: dict):
    # Initialize a list to store truth values of the inner nodes
    nodes = [None] * 2  # We have two inner nodes in the tree

    # Inner Node 0: Check if the judge is an official judge
    nodes[0] = int(X['Official'] == 1)  # 1 if official judge, else 0

    # Inner Node 1: Check if the round number is less than or equal to 6
    nodes[1] = int(X['Round'] <= 6)     # 1 if Round <= 6, else 0

    # Decision-making based on the decision tree
    if nodes[0]:  # If Official == Yes (1)
        if nodes[1]:  # If Round <= 6
            prediction = 0  # Holyfield
        else:         # If Round > 6
            prediction = 1  # Lewis
    else:           # If Official == No (0)
        prediction = 1  # Lewis

    return prediction, nodes
```

### How to Use the Function:

- **Input**: A dictionary `X` with keys `'Judge'`, `'Official'`, and `'Round'`.
  - `'Judge'`: An integer from 0 to 9 representing the judge.
  - `'Official'`: 1 if the judge is an official judge, 0 otherwise.
  - `'Round'`: An integer from 1 to 12 representing the round number.
- **Output**:
  - `prediction`: 1 if **Lewis** won the round, 0 if **Holyfield** won.
  - `nodes`: A list of integers (1 or 0) representing whether each condition in the inner nodes is satisfied.
