


Here is the Python function for your decision tree classifier based on the boxing features you provided:

```python
def predict(X: dict):
    """
    Predicts the winner of a boxing round (1 = Lewis, 0 = Holyfield) based on the input features.

    Parameters:
    X (dict): A dictionary containing the features:
        - 'Judge': Judge (0 = E. Williams, 1 = L. O'Connell, 2 = S. Christodoulu, 3 = HBO-Lederman, 
          4 = Sportsticker, 5 = Boxing Times, 6 = Sportsline, 7 = Associated Press, 8 = ESPN, 9 = Boxing Monthly-Leach)
        - 'Official': Official judge (1 = Yes, 0 = No)
        - 'Round': Round number (1 to 12)

    Returns:
    tuple: A tuple containing:
        - prediction (int): The predicted winner (1 = Lewis, 0 = Holyfield)
        - nodes (list): A list of truth values for the inner nodes of the decision tree
    """
    nodes = 2 * [None]
    
    # Node 0: Check if the judge is HBO-Lederman
    nodes[0] = X["Judge"] == 3
    
    # Node 1: Check if the judge is an official judge
    nodes[1] = X["Official"] == 1
    
    if nodes[0]:  # If Judge is HBO-Lederman
        prediction = 1  # Lewis wins
    else:  # If Judge is not HBO-Lederman
        if nodes[1]:  # If the judge is an official judge
            prediction = 0  # Holyfield wins
        else:  # If the judge is not an official judge
            prediction = 1  # Lewis wins

    return prediction, nodes
```

### Explanation of the Code:
1. **Input Features**:
   - `Judge`: Encoded as integers (0 to 9) representing different judges.
   - `Official`: Encoded as 1 (Yes) or 0 (No) to indicate whether the judge is an official judge.
   - `Round`: The round number (1 to 12). This feature is not used in this decision tree because it was not deemed important for the splits.

2. **Nodes**:
   - `nodes[0]`: Checks if the judge is "HBO-Lederman" (encoded as `3`).
   - `nodes[1]`: Checks if the judge is an official judge (`Official == 1`).

3. **Decision Tree Logic**:
   - If the judge is "HBO-Lederman," the prediction is `1` (Lewis wins).
   - Otherwise, the tree checks if the judge is an official judge:
     - If yes, the prediction is `0` (Holyfield wins).
     - If no, the prediction is `1` (Lewis wins).

4. **Output**:
   - `prediction`: The predicted winner of the round (`1` for Lewis, `0` for Holyfield).
   - `nodes`: A list of truth values (`1` for True, `0` for False) representing whether the conditions at each inner node were satisfied.

### Example Usage:
```python
# Example input
X = {
    "Judge": 3,       # HBO-Lederman
    "Official": 1,    # Yes
    "Round": 5        # Round 5
}

# Make a prediction
prediction, nodes = predict(X)

print("Prediction:", prediction)  # Output: 1 (Lewis wins)
print("Nodes:", nodes)            # Output: [True, None]
```

### Example 2:
```python
# Example input
X = {
    "Judge": 1,       # L. O'Connell
    "Official": 1,    # Yes
    "Round": 8        # Round 8
}

# Make a prediction
prediction, nodes = predict(X)

print("Prediction:", prediction)  # Output: 0 (Holyfield wins)
print("Nodes:", nodes)            # Output: [False, True]
```