


Below is the Python function for the decision tree with a maximum depth of 2 based on the features and target variable you provided:

```python
def predict(X: dict):
    """
    Predicts which of the two boxing fighters (Lewis or Holyfield) won the round.

    Parameters:
    X (dict): A dictionary containing the feature values.
        - "Judge": int (0 to 9)
        - "Official": int (0 or 1)
        - "Round": int (1 to 12)

    Returns:
    tuple: A tuple containing:
        - prediction (int): 1 if Lewis won, 0 if Holyfield won.
        - nodes (list): A list of truth values for the inner nodes of the decision tree.
    """
    nodes = 2 * [None]
    
    # Inner node 1: Check if Judge is E. Williams (0)
    nodes[0] = X["Judge"] == 0
    
    # Inner node 2: Check if the judge is an official judge
    nodes[1] = X["Official"] == 1

    # Decision tree logic
    if nodes[0]:  # Judge is E. Williams
        prediction = 1  # Lewis wins
    else:  # Judge is not E. Williams
        if nodes[1]:  # Official judge
            prediction = 0  # Holyfield wins
        else:  # Not an official judge
            prediction = 1  # Lewis wins

    return prediction, nodes
```

### Explanation of the Function:
1. **Input**:
   - `X`: A dictionary where:
     - `"Judge"` is an integer (0 to 9) representing the judge.
     - `"Official"` is an integer (0 or 1) indicating whether the judge is an official judge.
     - `"Round"` is an integer (1 to 12), though it is not used in this specific decision tree as it was not deemed important for the classification.

2. **Nodes**:
   - `nodes[0]`: Checks if the judge is "E. Williams" (encoded as `0`).
   - `nodes[1]`: Checks if the judge is an official judge (`1`).

3. **Logic**:
   - If `nodes[0]` is `True` (i.e., the judge is "E. Williams"), the prediction is `1` (Lewis wins).
   - If `nodes[0]` is `False` (i.e., the judge is not "E. Williams"), the function checks `nodes[1]`:
     - If `nodes[1]` is `True` (i.e., the judge is an official judge), the prediction is `0` (Holyfield wins).
     - If `nodes[1]` is `False` (i.e., the judge is not an official judge), the prediction is `1` (Lewis wins).

4. **Output**:
   - `prediction`: The predicted winner of the round (`1` for Lewis, `0` for Holyfield).
   - `nodes`: A list of truth values for the inner nodes of the decision tree.

### Example Usage:
```python
# Example input
X = {
    "Judge": 0,       # E. Williams
    "Official": 1,    # Official judge
    "Round": 5        # Round 5
}

# Predict
prediction, nodes = predict(X)
print("Prediction:", prediction)  # Output: 1 (Lewis)
print("Nodes:", nodes)            # Output: [True, True]
```

### Additional Example:
```python
# Example input
X = {
    "Judge": 3,       # HBO-Lederman
    "Official": 0,    # Not an official judge
    "Round": 8        # Round 8
}

# Predict
prediction, nodes = predict(X)
print("Prediction:", prediction)  # Output: 1 (Lewis)
print("Nodes:", nodes)            # Output: [False, False]
```