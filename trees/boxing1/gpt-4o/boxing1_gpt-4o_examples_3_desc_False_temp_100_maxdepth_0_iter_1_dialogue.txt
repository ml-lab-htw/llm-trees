


Certainly! Below is the Python function that implements the decision tree classifier for predicting the winner between Lewis and Holyfield for each round:

```python
def predict(X: dict):
    nodes = [None] * 8
    nodes[0] = X["Official"] == 1

    if nodes[0]:  # Official judge
        if X["Judge"] == 0: # E. Williams
            nodes[1] = X["Round"] <= 6
        elif X["Judge"] == 1: # L. O'Connell
            nodes[1] = X["Round"] <= 4
        elif X["Judge"] == 2: # S. Christodoulu
            nodes[1] = X["Round"] <= 8
        else:
            nodes[1] = 0  # Placeholder for other official judges if needed
    else:  # Unofficial judge
        if X["Judge"] == 3:  # HBO-Lederman
            nodes[1] = X["Round"] <= 3
        elif X["Judge"] == 4:  # Sportsticker
            nodes[1] = X["Round"] <= 7
        elif X["Judge"] == 5:  # Boxing Times
            nodes[1] = X["Round"] <= 5
        elif X["Judge"] == 6:  # Sportsline
            nodes[1] = X["Round"] <= 6
        elif X["Judge"] == 7:  # Associated Press
            nodes[1] = X["Round"] <= 2
        elif X["Judge"] == 8:  # ESPN
            nodes[1] = X["Round"] <= 4
        elif X["Judge"] == 9:  # Boxing Monthly-Leach
            nodes[1] = X["Round"] <= 6
        else:
            nodes[1] = 1  # Placeholder for other unofficial judges if needed

    if nodes[0]:  # Official judge
        if X["Judge"] == 0:  # E. Williams
            if nodes[1]:
                prediction = 0  # Holyfield
            else:
                prediction = 1  # Lewis
        elif X["Judge"] == 1:  # L. O'Connell
            if nodes[1]:
                prediction = 0  # Holyfield
            else:
                prediction = 1  # Lewis
        elif X["Judge"] == 2:  # S. Christodoulu
            if nodes[1]:
                prediction = 1  # Lewis
            else:
                prediction = 0  # Holyfield
        else:
            prediction = 1  # Placeholder for other official judges if needed
    else:  # Unofficial judge
        if X["Judge"] == 3:  # HBO-Lederman
            if nodes[1]:
                prediction = 0  # Holyfield
            else:
                prediction = 1  # Lewis
        elif X["Judge"] == 4:  # Sportsticker
            if nodes[1]:
                prediction = 0  # Holyfield
            else:
                prediction = 1  # Lewis
        elif X["Judge"] == 5:  # Boxing Times
            if nodes[1]:
                prediction = 1  # Lewis
            else:
                prediction = 0  # Holyfield
        elif X["Judge"] == 6:  # Sportsline
            if nodes[1]:
                prediction = 1  # Lewis
            else:
                prediction = 0  # Holyfield
        elif X["Judge"] == 7:  # Associated Press
            if nodes[1]:
                prediction = 0  # Holyfield
            else:
                prediction = 1  # Lewis
        elif X["Judge"] == 8:  # ESPN
            if nodes[1]:
                prediction = 0  # Holyfield
            else:
                prediction = 1  # Lewis
        elif X["Judge"] == 9:  # Boxing Monthly-Leach
            if nodes[1]:
                prediction = 0  # Holyfield
            else:
                prediction = 1  # Lewis
        else:
            prediction = 0  # Placeholder for other unofficial judges if needed

    return prediction, nodes
```

In this function, based on the `Judge`, `Official`, and `Round`, the function creates a list `nodes` which stores the truth values for each condition check in the decision tree. The final prediction is based on the conditions checked (whether the conditions of the decision tree nodes are satisfied or not).

The function returns a tuple where the first element is the prediction (1 for Lewis, 0 for Holyfield), and the second element is the list `nodes` containing the truth values of the inner nodes in the decision tree. This should help in understanding which conditions were met for a particular prediction.
