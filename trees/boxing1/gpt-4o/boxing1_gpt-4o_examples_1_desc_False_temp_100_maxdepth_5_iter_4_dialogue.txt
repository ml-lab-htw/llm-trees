


```python
def predict(X: dict):
    nodes = 5 * [None]
    
    # Node 0: Judge == HBO-Lederman (3)
    nodes[0] = X["Judge"] == 3
    
    if nodes[0]:  # If Judge is HBO-Lederman
        # Node 1: Round <= 5
        nodes[1] = X["Round"] <= 5
        
        if nodes[1]:  # If the round is 5 or earlier
            prediction = 1  # Lewis wins
        else:  # Round > 5
            prediction = 0  # Holyfield wins
    else:  # Judge is not HBO-Lederman
        # Node 2: Judge == ESPN (8)
        nodes[2] = X["Judge"] == 8
        
        if nodes[2]:  # If Judge is ESPN
            # Node 3: Round <= 3
            nodes[3] = X["Round"] <= 3
            
            if nodes[3]:  # If the round is 3 or earlier
                prediction = 0  # Holyfield wins
            else:  # Round > 3
                # Node 4: Official judge (1 = Yes)
                nodes[4] = X["Official"] == 1
                
                if nodes[4]:  # If official judge
                    prediction = 1  # Lewis wins
                else:  # Non-official judge
                    prediction = 0  # Holyfield wins
        else:  # Judge is not ESPN
            # Additional branches for other judges would go here, but for simplicity, let's default:
            prediction = 0  # Default to Holyfield for other judges

    return prediction, nodes
```

### Explanation:
1. **Nodes 0-4**: These represent the conditions in each inner node of the decision tree.
   - `nodes[0]`: Checks if the judge is HBO-Lederman.
   - `nodes[1]`: If the judge is HBO-Lederman, checks if the round is 5 or earlier.
   - `nodes[2]`: If the judge is not HBO-Lederman, checks if the judge is ESPN.
   - `nodes[3]`: If the judge is ESPN, checks if the round is 3 or earlier.
   - `nodes[4]`: If the round is greater than 3 for ESPN, checks if the judge is official.

2. **Predictions**:
   - A prediction of `1` means Lewis won the round.
   - A prediction of `0` means Holyfield won the round.

3. **Return**:
   - The function returns both the predicted winner and a list of truth values for each internal node. The list allows you to see which conditions in the decision tree were satisfied (`1` for true, `0` for false).

This function uses the exact feature names and encoding provided and follows the decision tree logic based on the judges, rounds, and official status.