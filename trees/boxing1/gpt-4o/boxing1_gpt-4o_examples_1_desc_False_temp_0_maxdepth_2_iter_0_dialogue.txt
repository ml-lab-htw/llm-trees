


Here is the Python function for your decision tree classifier based on the features `['Judge', 'Official', 'Round']` and the target variable (1 = Lewis, 0 = Holyfield):

```python
def predict(X: dict):
    """
    Predicts the winner of a boxing round (1 = Lewis, 0 = Holyfield) based on the input features.

    Parameters:
    X (dict): A dictionary containing the features:
        - "Judge" (int): 0 = E. Williams, 1 = L. O'Connell, ..., 9 = Boxing Monthly-Leach
        - "Official" (int): 1 = Yes, 0 = No
        - "Round" (int): 1 to 12

    Returns:
    tuple: (prediction, nodes)
        - prediction (int): 1 = Lewis, 0 = Holyfield
        - nodes (list): Truth values of the inner nodes (1 if condition is satisfied, 0 otherwise)
    """
    nodes = 2 * [None]  # Initialize a list to store truth values of the inner nodes

    # Node 0: Check if Judge is E. Williams (0)
    nodes[0] = X["Judge"] == 0

    if nodes[0]:  # If Judge is E. Williams
        prediction = 1  # Lewis wins
    else:
        # Node 1: Check if the judge is an official judge
        nodes[1] = X["Official"] == 1

        if nodes[1]:  # If the judge is an official judge
            prediction = 0  # Holyfield wins
        else:  # If the judge is not an official judge
            prediction = 1  # Lewis wins

    return prediction, nodes
```

### Explanation of the Function:
1. **Input**: The function takes a dictionary `X` with the keys `Judge`, `Official`, and `Round`.
   - `Judge` is an integer representing the judge (0 = E. Williams, 1 = L. O'Connell, ..., 9 = Boxing Monthly-Leach).
   - `Official` is an integer (1 = Yes, 0 = No) indicating whether the judge is an official judge.
   - `Round` is an integer (1 to 12) representing the round number (not used in this decision tree).

2. **Nodes**:
   - `nodes[0]`: Checks if the judge is E. Williams (`X["Judge"] == 0`).
   - `nodes[1]`: Checks if the judge is an official judge (`X["Official"] == 1`).

3. **Decision Tree Logic**:
   - If `nodes[0]` is `True` (Judge is E. Williams), the prediction is `1` (Lewis wins).
   - Otherwise, the function evaluates `nodes[1]`:
     - If `nodes[1]` is `True` (Official judge), the prediction is `0` (Holyfield wins).
     - If `nodes[1]` is `False` (Not an official judge), the prediction is `1` (Lewis wins).

4. **Output**:
   - `prediction`: The predicted winner of the round (1 = Lewis, 0 = Holyfield).
   - `nodes`: A list of truth values for the inner nodes of the decision tree.

### Example Usage:
```python
# Example input
X = {
    "Judge": 0,       # E. Williams
    "Official": 1,    # Yes
    "Round": 5        # Round 5
}

# Predict the winner and get the truth values of the inner nodes
prediction, nodes = predict(X)

print("Prediction:", prediction)  # Output: 1 (Lewis)
print("Nodes:", nodes)            # Output: [True, None]
```

### Another Example:
```python
# Example input
X = {
    "Judge": 3,       # HBO-Lederman
    "Official": 0,    # No
    "Round": 8        # Round 8
}

# Predict the winner and get the truth values of the inner nodes
prediction, nodes = predict(X)

print("Prediction:", prediction)  # Output: 1 (Lewis)
print("Nodes:", nodes)            # Output: [False, False]
```