```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["Judge"] <= 4  # Split on Judge (somewhat arbitrary, but limits depth)
    nodes[1] = X["Round"] <= 6   # Split on Round (another reasonable split)

    if nodes[0]:
        if nodes[1]:
            prediction = 0  # Example prediction - no data to base this on
        else:
            prediction = 1
    else:
        prediction = 1  # Another example prediction

    return prediction, nodes
```

**Explanation and Justification:**

The goal is to create a decision tree of maximum depth 2 using the provided features without any training data. This means we need to make reasonable but ultimately arbitrary choices about split points.

1. **Feature Selection:**  We have three features: "Judge", "Official", and "Round".  "Judge" and "Round" seem more likely to influence the round outcome than "Official".  "Official" might be important in a real boxing scoring scenario, but without data, we can't determine its influence.

2. **Splitting:** We need two inner nodes for a depth of 2.  

    * **Node 1:** We choose "Judge" for the first split.  The split point `Judge <= 4` divides the judges somewhat arbitrarily. 

    * **Node 2:** For the second split, we use "Round".  `Round <= 6` divides the fight into the first and second halves, which is a reasonable assumption for a shift in momentum or tactics.


3. **Predictions (Leaf Nodes):**  Because we have no data, the predictions at the leaf nodes (0 and 1) are entirely placeholder values. In a real decision tree trained on data, these predictions would be determined based on the majority class within each leaf node's region.

**Important Note:**  This decision tree is *not* based on any actual boxing knowledge or data analysis. It fulfills the prompt's requirements to create a depth-2 tree using the given features and format, but its predictive accuracy is meaningless without training on real boxing data.  The choices made are illustrative of how a decision tree is structured, not how one should actually build a model for predicting fight outcomes. 
