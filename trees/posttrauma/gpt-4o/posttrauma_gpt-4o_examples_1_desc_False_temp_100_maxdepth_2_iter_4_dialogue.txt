


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # Node 1: If ISS category is moderate or major, we split
    nodes[0] = X["iss_category"] > 1  # iss_category: 1 = mild, 2 = moderate, 3 = major
    
    if nodes[0]:
        # Node 2: If EQ-5D-5L index score is low (<= 0.6), it's likely a bad outcome
        nodes[1] = X["eq5d_5l_index_score"] <= 0.6
        if nodes[1]:
            prediction = 1  # bad outcome
        else:
            prediction = 0  # good outcome
    else:
        # Node 2: If SF36 physical summary is low (<= 40), it's likely a bad outcome
        nodes[1] = X["sf36_physical_summary"] <= 40
        if nodes[1]:
            prediction = 1  # bad outcome
        else:
            prediction = 0  # good outcome
    
    return prediction, nodes
```

### Explanation:
1. **Node 1:** We first check the **injury severity score category** (`iss_category`). If the injury is **moderate or major** (i.e., `iss_category > 1`), we proceed with further assessment. This makes sense because more severe injuries are more likely to lead to worse outcomes.

2. **Node 2 (if `iss_category > 1`):** We then check the **EQ-5D-5L index score** (`eq5d_5l_index_score`). A score of **0.6 or lower** indicates poor health-related quality of life, which would likely predict a bad outcome at 6 months.

3. **Node 2 (if `iss_category == 1`):** For mild injuries, we instead look at the **SF-36 physical summary** (`sf36_physical_summary`). If this score is **40 or lower**, it indicates poor physical functioning, suggesting a bad outcome.

This decision tree uses just two levels and selects features that are highly relevant based on general knowledge about injury severity and quality of life following musculoskeletal trauma.