


```python
def predict(X: dict):
    nodes = 2 * [None]  # Since we have two decision nodes

    # Node 1: Checking if the injury severity score (ISS) is low (<= 9)
    nodes[0] = X["iss_score"] <= 9

    if nodes[0]:
        # Node 2: If ISS is low, check if the patient is working at baseline
        nodes[1] = X["working_at_baseline"] == 1  # 1 = working

        if nodes[1]:
            prediction = 0  # Good outcome (pain and disability outcome at 6 months = 0)
        else:
            prediction = 1  # Bad outcome (pain and disability outcome at 6 months = 1)
    
    else:
        # If ISS is high, predict bad outcome
        prediction = 1  # Bad outcome

    return prediction, nodes
```

### Explanation:
- **Node 1**: The first decision is based on the **injury severity score (iss_score)**. If the ISS is â‰¤ 9 (which generally indicates a mild to moderate injury), we move to the next condition.
- **Node 2**: If the ISS is low, we check whether the patient is **working at baseline**. Working at baseline is a positive indicator of function and recovery, so if the patient is working (encoded as 1), we predict a **good outcome** (0). If not working, we predict a **bad outcome** (1).
- If the ISS is higher than 9 (indicating a more severe injury), we directly predict a **bad outcome** (1).

This tree uses two important features: **iss_score** and **working_at_baseline**, and it captures a reasonable decision process based on common clinical understanding.