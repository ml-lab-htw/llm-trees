```python
def predict(X: dict) -> int:
    age = X.get("age", 0)
    bmi = X.get("bmi", 0)
    gender_birth = X.get("gender_birth", 0)
    ethnic_group = X.get("ethnic_group", 0)
    education_age = X.get("education_age", 0)
    working_at_baseline = X.get("working_at_baseline", 0)
    smoker = X.get("smoker", 0)
    days_in_hospital = X.get("days_in_hospital", 0)
    iss_score = X.get("iss_score", 0)
    iss_category = X.get("iss_category", 0)
    nb_of_fractures = X.get("nb_of_fractures", 0)
    penetrating_injury = X.get("penetrating_injury", 0)
    eq5d_5l_index_score = X.get("eq5d_5l_index_score", 0)
    eq5d_5l_q6_i2 = X.get("eq5d_5l_q6_i2", 0)
    sf36_mental_summary = X.get("sf36_mental_summary", 0)
    sf36_physical_summary = X.get("sf36_physical_summary", 0)
    hads_anx_score = X.get("hads_anx_score", 0)
    hads_dep_score = X.get("hads_dep_score", 0)
    tsk_11_total = X.get("tsk_11_total", 0)
    pseq_total = X.get("pseq_total", 0)
    ies_r_total = X.get("ies_r_total", 0)
    ies_r_avoidance = X.get("ies_r_avoidance", 0)
    ies_r_hyperarousal = X.get("ies_r_hyperarousal", 0)
    ies_r_intrusion = X.get("ies_r_intrusion", 0)
    bl_cpgs_intensity_average = X.get("bl_cpgs_intensity_average", 0)
    bl_cpgs_intensity_now = X.get("bl_cpgs_intensity_now", 0)
    bl_cpgs_intensity_worst = X.get("bl_cpgs_intensity_worst", 0)
    bl_cpgs_intensity_least = X.get("bl_cpgs_intensity_least", 0)
    pain_region_count = X.get("pain_region_count", 0)
    pe_total_percent_baseline = X.get("pe_total_percent_baseline", 0)
    paindetect_grand_total = X.get("paindetect_grand_total", 0)
    bl_sleep_24hrs = X.get("bl_sleep_24hrs", 0)
    bl_sleep_quality = X.get("bl_sleep_quality", 0)
    local_heat_average = X.get("local_heat_average", 0)
    remote_heat_average = X.get("remote_heat_average", 0)
    local_cold_average = X.get("local_cold_average", 0)
    remote_cold_average = X.get("remote_cold_average", 0)
    local_pressure_average = X.get("local_pressure_average", 0)
    remote_pressure_average = X.get("remote_pressure_average", 0)
    crp_test = X.get("crp_test", 0)


    return 0 if bl_cpgs_intensity_average + hads_dep_score + ies_r_total < 15 else 1
```
