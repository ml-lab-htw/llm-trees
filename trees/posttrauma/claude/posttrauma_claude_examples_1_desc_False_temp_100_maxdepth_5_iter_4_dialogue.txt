


Based on the provided features and target variable, I'll create a decision tree function that predicts pain and disability outcome (0 = good, 1 = bad) focusing on clinically relevant features. Here's the implementation:

```python
def predict(X: dict):
    nodes = 5 * [None]
    
    # Node 0: Pain intensity as primary predictor
    nodes[0] = X["bl_cpgs_intensity_worst"] <= 7.0
    
    # Node 1: Physical function/disability measure
    nodes[1] = X["sf36_physical_summary"] <= 30.0
    
    # Node 2: Psychological factor
    nodes[2] = X["pseq_total"] <= 35.0
    
    # Node 3: Pain sensitivity
    nodes[3] = X["local_pressure_average"] <= 300.0
    
    # Node 4: Injury severity
    nodes[4] = X["iss_score"] <= 9.0

    if nodes[0]:  # Lower pain intensity
        if nodes[1]:  # Lower physical function
            if nodes[2]:  # Lower pain self-efficacy
                prediction = 1  # Bad outcome
            else:
                if nodes[3]:  # Higher pain sensitivity
                    prediction = 1  # Bad outcome
                else:
                    prediction = 0  # Good outcome
        else:  # Higher physical function
            if nodes[4]:  # Less severe injury
                prediction = 0  # Good outcome
            else:
                prediction = 1  # Bad outcome
    else:  # Higher pain intensity
        if nodes[2]:  # Lower pain self-efficacy
            prediction = 1  # Bad outcome
        else:
            if nodes[3]:  # Higher pain sensitivity
                prediction = 1  # Bad outcome
            else:
                prediction = 0  # Good outcome

    return prediction, nodes
```

This decision tree:
1. First splits on worst pain intensity (key predictor of chronic pain)
2. Then considers physical function via SF-36
3. Evaluates pain self-efficacy (PSEQ) as a psychological factor
4. Considers pain