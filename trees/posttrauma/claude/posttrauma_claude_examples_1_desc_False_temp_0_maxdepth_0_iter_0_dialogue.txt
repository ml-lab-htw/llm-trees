


Based on the provided features and target variable, I'll create a decision tree function that predicts pain and disability outcome (0 = good, 1 = bad) at 6 months following musculoskeletal trauma. I'll focus on clinically relevant features and thresholds:

```python
def predict(X: dict):
    nodes = 6 * [None]
    
    # Key decision nodes based on clinical relevance
    nodes[0] = X["pain_region_count"] > 3
    nodes[1] = X["pseq_total"] <= 30
    nodes[2] = X["hads_dep_score"] > 8
    nodes[3] = X["sf36_physical_summary"] <= 25
    nodes[4] = X["bl_cpgs_intensity_worst"] > 7
    nodes[5] = X["iss_score"] > 15

    if nodes[0]:  # Multiple pain regions
        if nodes[1]:  # Low pain self-efficacy
            prediction = 1  # Bad outcome
        else:
            if nodes[2]:  # High depression score
                prediction = 1  # Bad outcome
            else:
                prediction = 0  # Good outcome
    else:  # Few pain regions
        if nodes[3]:  # Poor physical function
            if nodes[4]:  # High pain intensity
                prediction = 1  # Bad outcome
            else:
                if nodes[5]:  # High injury severity
                    prediction = 1  # Bad outcome
                else:
                    prediction = 0  # Good outcome
        else:
            prediction = 0  # Good outcome

    return prediction, nodes
```

This decision tree uses the following clinically relevant features and thresholds:
1. Number of pain regions (>3 regions indicates widespread pain)
2. Pain Self-Efficacy Questionnaire score (≤30 indicates low self-efficacy)
3. HADS Depression score (>8 indicates possible depression)
4. SF-36 Physical Summary score (≤25 indicates poor physical function)
5. Worst pain intensity (>7 indicates severe pain)
6. Injury Severity Score (>15 indicates