


Based on the provided features and target variable, I'll create a decision tree function that predicts pain and disability outcome (0 = good, 1 = bad) using clinically relevant features. Here's the implementation:

```python
def predict(X: dict):
    nodes = 4 * [None]
    
    # Node 0: Check PSEQ total score (higher scores indicate better self-efficacy)
    nodes[0] = X["pseq_total"] <= 35
    
    # Node 1: Check pain intensity
    nodes[1] = X["bl_cpgs_intensity_average"] > 6
    
    # Node 2: Check HADS depression score
    nodes[2] = X["hads_dep_score"] > 8
    
    # Node 3: Check pain extent
    nodes[3] = X["pe_total_percent_baseline"] > 15
    
    # Tree logic
    if nodes[0]:  # Low self-efficacy
        if nodes[1]:  # High pain intensity
            if nodes[2]:  # High depression
                prediction = 1  # Bad outcome
            else:  # Low depression
                if nodes[3]:  # High pain extent
                    prediction = 1  # Bad outcome
                else:  # Low pain extent
                    prediction = 0  # Good outcome
        else:  # Low pain intensity
            if nodes[2]:  # High depression
                prediction = 1  # Bad outcome
            else:  # Low depression
                prediction = 0  # Good outcome
    else:  # High self-efficacy
        if nodes[1]:  # High pain intensity
            if nodes[3]:  # High pain extent
                prediction = 1  # Bad outcome
            else:  # Low pain extent
                prediction = 0  # Good outcome
        else:  # Low pain intensity
            prediction = 0  # Good outcome
            
    return prediction, nodes
```

I selected these features and thresholds based on clinical relevance:
1. PSEQ total (pain self-efficacy): threshold of 35 (clinically meaningful cut-off)
2. Pain intensity average: threshold of 6 (moderate to