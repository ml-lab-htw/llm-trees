


Based on the provided feature descriptions and format, here's the decision tree classifier function for heart disease prediction:

```python
def predict(X: dict):
    nodes = 6 * [None]
    
    # First level: Check ST Depression (oldpeak)
    nodes[0] = X["oldpeak"] <= 1.5
    
    # Second level: Check Maximum Heart Rate
    nodes[1] = X["thalach"] > 150
    
    # Third level: Check Age and Number of Vessels
    nodes[2] = X["age"] <= 55
    nodes[3] = X["ca"] > 0
    
    # Fourth level: Check Chest Pain Type and Exercise Induced Angina
    nodes[4] = X["chest_pain"] == 3  # Typical angina
    nodes[5] = X["exang"] == 2  # yes
    
    if nodes[0]:  # oldpeak <= 1.5
        if nodes[1]:  # thalach > 150
            if nodes[2]:  # age <= 55
                prediction = 0  # No Heart Disease
            else:  # age > 55
                if nodes[4]:  # Typical angina
                    prediction = 0  # No Heart Disease
                else:  # Asymptomatic or other
                    prediction = 1  # Heart Disease
        else:  # thalach <= 150
            if nodes[3]:  # ca > 0
                prediction = 1  # Heart Disease
            else:  # ca = 0
                prediction = 0  # No Heart Disease
    else:  # oldpeak > 1.5
        if X["chest_pain"] == 0:  # Asymptomatic
            prediction = 1  # Heart Disease
        elif X["chest_pain"] == 3:  # Typical angina
            if nodes[5]:  # exang = yes
                prediction = 1  # Heart Disease
            else:  # exang = no
                prediction = 0  # No Heart Disease
        else:  # Other chest pain types
            prediction = 1  # Heart Disease
            

    return prediction, nodes

```
