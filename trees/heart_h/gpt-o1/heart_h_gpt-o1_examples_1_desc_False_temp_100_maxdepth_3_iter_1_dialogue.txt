


```python
def predict(X: dict):
    nodes = [None] * 3  # Initialize a list to store the truth values of inner nodes
    # Node 0: Check if Exercise Induced Angina is 'yes' (encoded as 2)
    nodes[0] = int(X['exang'] == 2)
    
    if nodes[0]:  # If Exercise Induced Angina is 'yes'
        # Node 1: Check if ST Depression Induced by Exercise Relative to Rest ('oldpeak') > 1.0
        nodes[1] = int(X['oldpeak'] > 1.0)
        nodes[2] = None  # Node 2 is not evaluated in this path
        if nodes[1]:
            prediction = 1  # Patient has heart disease (yes = 1)
        else:
            prediction = 0  # Patient does not have heart disease (no = 0)
    else:  # If Exercise Induced Angina is 'no' (encoded as 1)
        nodes[1] = None  # Node 1 is not evaluated in this path
        # Node 2: Check if Maximum Heart Rate Achieved ('thalach') > 140 bpm
        nodes[2] = int(X['thalach'] > 140)
        if nodes[2]:
            prediction = 0  # Patient does not have heart disease
        else:
            prediction = 1  # Patient has heart disease
    return prediction, nodes
```

**Explanation:**

- **Features Used:**
  - `'exang'`: Exercise Induced Angina (1 = no, 2 = yes)
  - `'oldpeak'`: ST Depression Induced by Exercise Relative to Rest (0 to 5)
  - `'thalach'`: Maximum Heart Rate Achieved (bpm)

- **Inner Nodes and Their Conditions:**
  1. **Node 0:** `X['exang'] == 2` (Checks if Exercise Induced Angina is 'yes')
  2. **Node 1:** `X['oldpeak'] > 1.0` (Evaluated only if Node 0 is True)
  3. **Node 2:** `X['thalach'] > 140` (Evaluated only if Node 0 is False)

- **Prediction Logic:**
  - If **Node 0** is **True** (`exang` is 'yes'):
    - Evaluate **Node 1**:
      - If **Node 1** is **True** (`oldpeak` > 1.0):
        - **Prediction:** Patient has heart disease (`1`)
      - Else:
        - **Prediction:** Patient does not have heart disease (`0`)
  - Else (`exang` is 'no'):
    - Evaluate **Node 2**:
      - If **Node 2** is **True** (`thalach` > 140):
        - **Prediction:** Patient does not have heart disease (`0`)
      - Else:
        - **Prediction:** Patient has heart disease (`1`)

- **Nodes List:**
  - Contains the truth values of the inner nodes:
    - `1` if the condition is satisfied
    - `0` if the condition is not satisfied
    - `None` if the node was not evaluated during the prediction

**Usage Example:**

Suppose you have a patient's data as follows:

```python
patient_data = {
    'age': 55,
    'sex': 'male',
    'chest_pain': 3,
    'trestbps': 140,
    'chol': 250,
    'fbs': 1,
    'restecg': 2,
    'thalach': 130,
    'exang': 2,       # Exercise Induced Angina: yes
    'oldpeak': 2.3,
    'slope': 2,
    'ca': 0,
    'thal': 3
}

prediction, nodes = predict(patient_data)
print(f"Prediction: {'Heart Disease' if prediction == 1 else 'No Heart Disease'}")
print(f"Inner Nodes Truth Values: {nodes}")
```

**Output:**

```
Prediction: Heart Disease
Inner Nodes Truth Values: [1, 1, None]
```

In this example:

- **Node 0:** `exang` is `2` ('yes'), so Node 0 is `1`.
- **Node 1:** `oldpeak` is `2.3` (> 1.0), so Node 1 is `1`.
- **Node 2:** Not evaluated, so it's `None`.

**Note:** Ensure that the input dictionary `X` uses the exact keys and encodings as specified.