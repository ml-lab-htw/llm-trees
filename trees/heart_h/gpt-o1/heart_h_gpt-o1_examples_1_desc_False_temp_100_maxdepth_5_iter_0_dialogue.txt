


Sure! Here is the decision tree formatted as a Python function, using the exact feature keys and encodings you've provided:

```python
def predict(X: dict):
    nodes = [0] * 7  # Initialize list of nodes with zeros

    # Node 0: Check if chest_pain is 'Asymptomatic' (encoded as 0)
    nodes[0] = 1 if X['chest_pain'] == 0 else 0

    # Node 1: Check if exang (Exercise Induced Angina) is 'yes' (encoded as 2)
    nodes[1] = 1 if X['exang'] == 2 else 0

    # Node 2: Check if oldpeak (ST Depression Induced by Exercise) > 1.5
    nodes[2] = 1 if X['oldpeak'] > 1.5 else 0

    # Node 3: Check if ca (Number of Major Vessels Colored by Fluoroscopy) > 0
    nodes[3] = 1 if X['ca'] > 0 else 0

    # Node 4: Check if thalach (Maximum Heart Rate Achieved) > 140 bpm
    nodes[4] = 1 if X['thalach'] > 140 else 0

    # Node 5: Check if age > 55 years
    nodes[5] = 1 if X['age'] > 55 else 0

    # Node 6: Check if trestbps (Resting Blood Pressure) > 130 mmHg
    nodes[6] = 1 if X['trestbps'] > 130 else 0

    # Decision logic
    if nodes[0]:
        # Chest pain is Asymptomatic
        if nodes[1]:
            # Exercise Induced Angina is yes
            if nodes[2]:
                # ST Depression > 1.5
                if nodes[3]:
                    # Number of Vessels > 0
                    prediction = 1  # Heart Disease
                else:
                    prediction = 0  # No Heart Disease
            else:
                prediction = 0  # No Heart Disease
        else:
            prediction = 0  # No Heart Disease
    else:
        # Chest pain is not Asymptomatic
        if nodes[4]:
            # Maximum Heart Rate > 140
            prediction = 0  # No Heart Disease
        else:
            if nodes[5]:
                # Age > 55
                if nodes[6]:
                    # Resting Blood Pressure > 130
                    prediction = 1  # Heart Disease
                else:
                    prediction = 0  # No Heart Disease
            else:
                prediction = 0  # No Heart Disease

    return prediction, nodes
```

**Explanation:**

- **Feature Encoding and Conditions:**
  - **Node 0:** Checks if `chest_pain` is **Asymptomatic** (`0`).
  - **Node 1:** Checks if `exang` (**Exercise Induced Angina**) is **yes** (`2`).
  - **Node 2:** Checks if `oldpeak` (**ST Depression Induced by Exercise**) is greater than `1.5`.
  - **Node 3:** Checks if `ca` (**Number of Major Vessels Colored by Fluoroscopy**) is greater than `0`.
  - **Node 4:** Checks if `thalach` (**Maximum Heart Rate Achieved** in bpm) is greater than `140`.
  - **Node 5:** Checks if `age` is greater than `55` years.
  - **Node 6:** Checks if `trestbps` (**Resting Blood Pressure** in mmHg) is greater than `130`.

- **Nodes List:**
  - The `nodes` list represents the truth values of the inner nodes.
  - Each entry is `1` if the condition is satisfied, and `0` otherwise.

- **Prediction Logic:**
  - The function follows the decision tree structure with nested `if` statements.
  - It returns `prediction`, which is `1` if the patient **has Heart Disease**, and `0` otherwise.

**Example Use Case:**

```python
# Example patient data
patient_data = {
    'age': 60,                # Patient's age in years
    'sex': 'male',            # Patient's sex (not used in the tree)
    'chest_pain': 0,          # Asymptomatic (0)
    'trestbps': 145,          # Resting Blood Pressure in mmHg
    'chol': 233,              # Serum Cholesterol in mg/dl (not used)
    'fbs': 1,                 # Fasting Blood Sugar (not used)
    'restecg': 2,             # Resting ECG Results (not used)
    'thalach': 150,           # Maximum Heart Rate Achieved
    'exang': 2,               # Exercise Induced Angina: yes (2)
    'oldpeak': 2.3,           # ST Depression Induced by Exercise
    'slope': 2,               # Slope (not used)
    'ca': 1,                  # Number of Major Vessels Colored by Fluoroscopy
    'thal': 3                 # Thalassemia (not used)
}

prediction, nodes = predict(patient_data)
print("Prediction:", "Heart Disease" if prediction == 1 else "No Heart Disease")
print("Nodes:", nodes)
```

**Output:**

```
Prediction: Heart Disease
Nodes: [1, 1, 1, 1, 1, 1, 1]
```

In this example:

- The patient has **Asymptomatic chest pain** (`chest_pain` = 0).
- **Exercise Induced Angina** is **yes** (`exang` = 2).
- **ST Depression** (`oldpeak`) is greater than 1.5.
- **Number of Vessels** (`ca`) is greater than 0.

Therefore, the model predicts that the patient **has Heart Disease**.

**Notes:**

- **Feature Keys and Encodings:**
  - Make sure that all feature values in `X` use the exact keys and encodings specified.
  - For categorical features, use the numerical encodings provided.

- **Function Structure:**
  - The function initializes a list `nodes` to keep track of which conditions are met.
  - It then evaluates each condition and assigns `1` or `0` to the corresponding index in `nodes`.
  - The nested `if` statements follow the structure of the decision tree.
  - Finally, the function returns the `prediction` and the `nodes` list.

**Understanding the Nodes:**

The `nodes` list represents the following conditions:

- **nodes[0]:** Is `chest_pain` Asymptomatic (0)?
- **nodes[1]:** Is `exang` yes (2)?
- **nodes[2]:** Is `oldpeak` > 1.5?
- **nodes[3]:** Is `ca` > 0?
- **nodes[4]:** Is `thalach` > 140?
- **nodes[5]:** Is `age` > 55?
- **nodes[6]:** Is `trestbps` > 130?

Each `1` in the list indicates that the condition is true for the patient.

**Threshold Values and Conditions:**

- **Meaningful Thresholds:** The thresholds like `oldpeak > 1.5`, `thalach > 140`, and `trestbps > 130` are meaningful values based on clinical data and common practices in diagnosing heart disease.

**Usage:**

- You can use this function to classify any patient by providing their data in the required format.
- This implementation allows you to not only get the prediction but also understand which conditions led to that prediction through the `nodes` list.

**Example with a Different Patient:**

```python
# Another patient data
patient_data = {
    'age': 50,
    'sex': 'female',
    'chest_pain': 1,          # Atypical angina
    'trestbps': 120,
    'chol': 210,
    'fbs': 1,
    'restecg': 2,
    'thalach': 155,
    'exang': 1,               # no
    'oldpeak': 0.5,
    'slope': 2,
    'ca': 0,
    'thal': 2
}

prediction, nodes = predict(patient_data)
print("Prediction:", "Heart Disease" if prediction == 1 else "No Heart Disease")
print("Nodes:", nodes)
```

**Output:**

```
Prediction: No Heart Disease
Nodes: [0, 0, 0, 0, 1, 0, 0]
```

In this case:

- The patient does **not** have Asymptomatic chest pain.
- Maximum Heart Rate (`thalach`) is greater than 140.
- The model predicts **No Heart Disease**.

---

Feel free to use and adapt this function for your dataset. Let me know if you need further assistance or have any questions!