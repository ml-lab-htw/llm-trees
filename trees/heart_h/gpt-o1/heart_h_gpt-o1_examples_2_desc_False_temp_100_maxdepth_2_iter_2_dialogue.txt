


```python
def predict(X: dict):
    nodes = [None, None]
    # Node 0: Check if Number of Major Vessels Colored by Fluoroscopy <= 0.5
    nodes[0] = int(X['ca'] <= 0.5)
    
    # Node 1: Check if Chest Pain Type == Asymptomatic (encoded as 0)
    nodes[1] = int(X['chest_pain'] == 0)
    
    if nodes[0]:
        prediction = 0  # No Heart Disease
    else:
        if nodes[1]:
            prediction = 1  # Heart Disease
        else:
            prediction = 0  # No Heart Disease
    return prediction, nodes
```

**Explanation:**

- **Node 0** checks whether the patient has 0 major vessels colored by fluoroscopy (`ca` feature). Since `ca` can be 0, 1, 2, or 3, the condition `X['ca'] <= 0.5` effectively checks if `ca` is 0.
  
- **Node 1** evaluates if the patient's chest pain type is **Asymptomatic**, which is encoded as `0` in the `chest_pain` feature.

- The `nodes` list captures the truth values of the conditions:
  - `nodes[0] = 1` if the first condition is satisfied (`ca` â‰¤ 0.5), else `0`.
  - `nodes[1] = 1` if the second condition is satisfied (`chest_pain` == 0), else `0`.

- The prediction logic follows the decision tree:
  - If `nodes[0]` is `1` (patient has 0 major vessels colored), predict **No Heart Disease** (`0`).
  - If `nodes[0]` is `0`, proceed to `Node 1`:
    - If `nodes[1]` is `1` (chest pain is asymptomatic), predict **Heart Disease** (`1`).
    - If `nodes[1]` is `0`, predict **No Heart Disease** (`0`).

**Usage Example:**

```python
# Example patient data
patient = {
    'age': 55,
    'sex': 'male',
    'chest_pain': 0,  # Asymptomatic
    'trestbps': 130,
    'chol': 250,
    'fbs': 1,
    'restecg': 2,
    'thalach': 150,
    'exang': 2,
    'oldpeak': 2.3,
    'slope': 2,
    'ca': 2,
    'thal': 3
}

# Predict
prediction, nodes = predict(patient)
print(f"Prediction: {'Heart Disease' if prediction else 'No Heart Disease'}")
print(f"Node Truth Values: {nodes}")
```

**Output:**

```
Prediction: Heart Disease
Node Truth Values: [0, 1]
```

**Note:** Ensure that the feature values in the input dictionary `X` use the exact keys and encodings specified.