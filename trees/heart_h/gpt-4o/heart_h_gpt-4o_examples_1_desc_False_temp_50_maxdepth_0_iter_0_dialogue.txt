


Here is the Python function for the decision tree we discussed earlier, formatted as requested. The function takes a dictionary `X` where the keys match the feature names exactly as specified, and it returns a prediction along with a list of truth values for the inner nodes.

```python
def predict(X: dict):
    # Initialize a list to store the truth values of the inner nodes
    nodes = 2 * [None]
    
    # Define the conditions for the decision tree
    nodes[0] = X["chest_pain"] == 0  # Chest Pain Type == Asymptomatic
    nodes[1] = X["thalach"] <= 140  # Maximum Heart Rate Achieved <= 140
    
    # Evaluate the decision tree logic
    if nodes[0]:  # First condition: Chest Pain Type == Asymptomatic
        prediction = 1  # Heart Disease (Yes)
    else:  # Chest Pain Type != Asymptomatic
        if nodes[1]:  # Second condition: Maximum Heart Rate Achieved <= 140
            prediction = 1  # Heart Disease (Yes)
        else:  # Maximum Heart Rate Achieved > 140
            prediction = 0  # Heart Disease (No)
    
    # Return the prediction and the truth values of the inner nodes
    return prediction, nodes
```

### Explanation:
1. **Input:** The function takes a dictionary `X` with the exact feature names as keys. For example:
   ```python
   X = {
       "age": 55,
       "sex": "male",
       "chest_pain": 0,
       "trestbps": 130,
       "chol": 250,
       "fbs": 1,
       "restecg": 2,
       "thalach": 120,
       "exang": 1,
       "oldpeak": 1.5,
       "slope": 2,
       "ca": 0,
       "thal": 3
   }
   ```

2. **Nodes:** The `nodes` list stores the truth values of the inner nodes:
   - `nodes[0]`: Whether the first condition (`chest_pain == 0`) is satisfied.
   - `nodes[1]`: Whether the second condition (`thalach <= 140`) is satisfied.

3. **Logic:** The decision tree logic is implemented using `if` statements. The first condition checks if the chest pain type is "Asymptomatic" (`chest_pain == 0`). If true, the prediction is `1` (Heart Disease: Yes). If false, the second condition checks if the maximum heart rate achieved (`thalach`) is less than or equal to 140. Based on this, the prediction is either `1` (Yes) or `0` (No).

4. **Output:** The function returns:
   - `prediction`: The predicted class (1 = Heart Disease, 0 = No Heart Disease).
   - `nodes`: A list of truth values for the inner nodes.

### Example Usage:
```python
X = {
    "age": 55,
    "sex": "male",
    "chest_pain": 1,  # Atypical angina
    "trestbps": 130,
    "chol": 250,
    "fbs": 1,
    "restecg": 2,
    "thalach": 120,  # Maximum Heart Rate Achieved
    "exang": 1,
    "oldpeak": 1.5,
    "slope": 2,
    "ca": 0,
    "thal": 3
}

prediction, nodes = predict(X)
print("Prediction:", prediction)  # Output: Prediction: 1
print("Nodes:", nodes)  # Output: Nodes: [False, True]
```