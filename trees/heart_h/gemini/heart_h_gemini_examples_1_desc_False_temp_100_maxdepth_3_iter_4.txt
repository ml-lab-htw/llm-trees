```python
def predict(X: dict):
    nodes = 3 * [None]
    nodes[0] = X["thalach"] <= 150  # Heart rate
    nodes[1] = X["oldpeak"] > 1.5  # ST depression
    nodes[2] = X["ca"] > 0  # Number of major vessels

    if nodes[0]:
        if nodes[1]:
            prediction = 1  # Likely heart disease
        else:
            if nodes[2]:
                prediction = 1 # Likely heart disease
            else:
                prediction = 0  # Likely no heart disease
    else:
        prediction = 0 # Likely no heart disease


    return prediction, nodes

```


This function uses a maximum depth of 3 and considers potentially relevant features. If the maximum heart rate achieved is less than or equal to 150, and ST depression is greater than 1.5 or there is blockage in major vessels, it predicts heart disease (1). Otherwise, if heart rate is higher, it predicts no heart disease (0).  This logic is based on general medical knowledge: lower heart rate combined with ST depression or blocked vessels can be an indicator of heart issues.  High heart rate is considered normal and thus will be in favor of no heart disease.

Remember: This tree is *not* trained on real data. It's a demonstration of how to construct a decision tree function based on provided features and a target variable with a specified structure.  Its accuracy is not guaranteed, and you should train a proper decision tree model on real data for accurate predictions in a real-world scenario.
