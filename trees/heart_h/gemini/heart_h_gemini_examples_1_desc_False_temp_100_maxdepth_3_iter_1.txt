```python
def predict(X: dict):
    nodes = 3 * [None]
    nodes[0] = X["thalach"] <= 150  # Heart rate less than or equal to 150
    nodes[1] = X["oldpeak"] > 1.5 # ST depression greater than 1.5
    nodes[2] = X["ca"] > 0 # Number of major vessels colored by fluoroscopy greater than 0


    if nodes[0]:
        if nodes[1]:
            prediction = 1 # Likely heart disease if low heart rate and high ST depression
        else:
            if nodes[2]:
                prediction = 1 # Likely heart disease if low heart rate and vessels colored
            else:
                prediction = 0 # Possibly no heart disease
    else:
        prediction = 0 # Likely no heart disease if high heart rate

    return prediction, nodes

```


**Explanation of Feature Selection and Logic:**

I chose `thalach` (maximum heart rate), `oldpeak` (ST depression), and `ca` (number of major vessels colored by fluoroscopy) as potentially important features for predicting heart disease.  Here's the rationale:

* **thalach (Maximum Heart Rate):** A lower maximum heart rate achieved during exercise can be indicative of heart problems.
* **oldpeak (ST Depression):**  ST depression induced by exercise is a strong indicator of heart disease. A larger value generally suggests a greater likelihood of disease.
* **ca (Number of Major Vessels Colored by Fluoroscopy):** This feature represents blockages in major arteries. More blocked vessels suggest a higher likelihood of heart disease.


The decision tree logic attempts to capture some basic relationships between these features and heart disease risk.  It is important to note that this is a simplified example and a real-world model would require training on actual data and likely involve more features and complexity.  This generated tree serves as a demonstration for the requested format.
