


```python
def predict(X: dict):
    nodes = 3 * [None]

    nodes[0] = X["chest_pain"] == 0  # Asymptomatic Chest Pain
    nodes[1] = X["oldpeak"] > 2.0      # ST Depression > 2.0
    nodes[2] = X["ca"] >= 1           # Number of Major Vessels >= 1


    if nodes[0]:  # Chest pain is asymptomatic
        if nodes[1]: # ST Depression > 2.0
            prediction = 1 # Heart Disease
        else:       # ST Depression <= 2.0
            if nodes[2]: # Number of vessels >= 1
                prediction = 1 # Heart Disease
            else:       # Number of vessels < 1
                prediction = 0 # No Heart Disease
    else:      # Chest pain is NOT asymptomatic
        if X["ca"] >= 2: # Number of vessels >= 2
            prediction = 1 # Heart Disease
        else:       # Number of vessels < 2
            if X["oldpeak"] > 1.0: #ST Depression > 1.0
                prediction = 1 # Heart Disease
            else:        #ST Depression <= 1.0
                prediction = 0 # No Heart Disease

    return prediction, nodes
```


This Python function directly implements the decision tree logic described earlier. It takes a dictionary `X` containing the patient's features as input.  The `nodes` list stores the boolean results of the conditions at each node, providing insights into the decision path.  The function returns both the prediction (0 or 1) and the `nodes` list.  Remember, the thresholds and feature choices are illustrative; a real-world model would be trained on data to learn these parameters.
