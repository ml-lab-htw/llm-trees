


```python
def predict(X: dict):
    nodes = 2 * [None]

    nodes[0] = X["chest_pain"] == 0  # Asymptomatic Chest Pain
    nodes[1] = X["oldpeak"] > 1.5  # ST Depression > 1.5 mm

    if nodes[0]:
        if nodes[1]:
            prediction = 1  # Heart Disease likely if Asymptomatic pain and high ST depression
        else:
            prediction = 0 # Less likely if asymptomatic but low ST depression
    else:
        if X["ca"] > 0: # Number of major vessels
            prediction = 1 # Heart disease likely if non-asymptomatic pain and blocked vessels
        else:
            prediction = 0 # Less likely with other types of pain and no blocked vessels


    return prediction, nodes

```


This function mirrors the decision tree logic described previously, using the specific feature names and encoding provided. The thresholds (1.5 for `oldpeak` and 0 for `ca`) are reasonable starting points based on medical context, but optimal values would be determined with a training dataset in a real-world application.  Remember this function is a simplified example and would need further refinement with real-world data and evaluation.
