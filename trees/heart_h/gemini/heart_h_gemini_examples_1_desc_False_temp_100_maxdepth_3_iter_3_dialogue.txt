


```python
def predict(X: dict):
    nodes = 3 * [None]  # Initialize list for truth values of inner nodes
    
    nodes[0] = X["chest_pain"] == 0 # Asymptomatic
    nodes[1] = X["oldpeak"] > 1.0
    nodes[2] = X["ca"] > 0

    if nodes[0]:  # Asymptomatic
        if nodes[1]:  # ST Depression > 1.0
            prediction = 1  # High Risk
        else:
            prediction = 0 # Medium risk (could also be 1, demonstrating risk stratification) #Medium Risk
    else: #  Typical angina / Atypical angina / Non-anginal pain
        if nodes[2]: # Number of Major Vessels > 0
            prediction = 1  # High Risk
        else:
            prediction = 0  # Low Risk
    
    return prediction, nodes

```


This function directly implements the demonstrative decision tree logic using the provided feature names and encodings. The `nodes` list tracks the truth values of the conditions at each inner node, as requested. Remember that this is a *demonstration* and a real-world application requires training on data to determine the best splits and thresholds.  The thresholds used here (1.0 for `oldpeak`) are examples and would likely be different in a trained model.
