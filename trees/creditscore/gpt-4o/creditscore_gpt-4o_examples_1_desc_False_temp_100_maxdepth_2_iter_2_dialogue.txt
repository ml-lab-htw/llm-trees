


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # Node 0: Check the condition for 'Derogatory.reports' <= 1
    nodes[0] = X["Derogatory.reports"] <= 1
    
    if nodes[0]:
        # Node 1: If 'Derogatory.reports' <= 1, check 'Income.per.dependent' > 3.0
        nodes[1] = X["Income.per.dependent"] > 3.0
        
        if nodes[1]:
            prediction = 1  # Application is accepted (1)
        else:
            prediction = 0  # Application is denied (0)
    else:
        # If 'Derogatory.reports' > 1, application is denied
        prediction = 0  # Application is denied (0)
    
    return prediction, nodes
```

### Explanation:
1. **Node 0**: Checks whether `Derogatory.reports` is less than or equal to 1. If this condition is met, the function proceeds to the next node.
2. **Node 1**: If the first condition is satisfied, it checks whether `Income.per.dependent` is greater than 3.0. If this condition is met, the function predicts that the application is accepted (`prediction = 1`). Otherwise, the application is denied (`prediction = 0`).
3. If the first condition (Node 0) is not satisfied (i.e., `Derogatory.reports > 1`), the function immediately denies the application (`prediction = 0`).

The function returns both the prediction (`0` for denied, `1` for accepted) and the list of truth values (`nodes`) representing whether the conditions at each node were satisfied.