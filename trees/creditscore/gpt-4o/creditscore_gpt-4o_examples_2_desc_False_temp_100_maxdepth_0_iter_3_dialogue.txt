


Based on your requirements and the decision tree described earlier, I will create a Python function that follows the given structure. The function will predict whether a credit application is accepted (1) or not (0), and it will also return a list of truth values for each of the decision nodes.

Below is the implementation of the function:

```python
def predict(X: dict):
    nodes = 5 * [None]
    nodes[0] = X["Derogatory.reports"] <= 0.50
    nodes[1] = X["Income.per.dependent"] > 4.00
    nodes[2] = X["Monthly.credit.card.exp"] <= 500
    nodes[3] = X["Derogatory.reports"] <= 1.00

    if nodes[0]:  # Derogatory.reports <= 0.50
        if nodes[1]:  # Income.per.dependent > 4.00
            if nodes[2]:  # Monthly.credit.card.exp <= 500
                prediction = 1  # Accepted
            else:
                if nodes[3]:  # Derogatory.reports <= 1.00
                    prediction = 1  # Accepted
                else:
                    prediction = 0  # Not Accepted
        else:
            prediction = 0  # Not Accepted
    else:
        prediction = 0  # Not Accepted
    
    return prediction, nodes

# Example usage:
X = {
    "Age": 35,
    "Income.per.dependent": 6.0,
    "Monthly.credit.card.exp": 450,
    "Own.home": 1,
    "Self.employed": 0,
    "Derogatory.reports": 0
}

prediction, nodes = predict(X)
print(f"Prediction: {'Accepted' if prediction == 1 else 'Not Accepted'}")
print(f"Decision Nodes: {nodes}")
```

### Explanation
1. **Nodes initialization**:
    - `nodes[0]`: Checks if `Derogatory.reports` is less than or equal to 0.50.
    - `nodes[1]`: Checks if `Income.per.dependent` is greater than 4.00.
    - `nodes[2]`: Checks if `Monthly.credit.card.exp` is less than or equal to $500.
    - `nodes[3]`: Checks if `Derogatory.reports` is less than or equal to 1.00.

2. **Decision tree logic**:
    - If the number of `Derogatory.reports` is more than 0.50 (i.e., `nodes[0]` is `False`), the application is not accepted.
    - If `Derogatory.reports` is 0.50 or less and `Income.per.dependent` is 4.00 or less, the application is not accepted.
    - If `Income.per.dependent` is greater than 4.00:
        - If `Monthly.credit.card.exp` is $500 or less, the application is accepted.
        - If `Monthly.credit.card.exp` is more than $500 but `Derogatory.reports` is 1.00 or less, the application is accepted.
        - Otherwise, the application is not accepted.

### Example usage
To test the function, we provide a sample input, and the function outputs the prediction and the list of decision nodes values. The example usage provided in the code demonstrates this.

This structure ensures the function closely follows your requirements and returns both the prediction and the truth values for each internal decision node, implemented according to the described decision tree logic.