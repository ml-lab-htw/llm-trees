


```python
def predict(X: dict):
    # Initialize a list to store the truth values of the inner nodes
    nodes = 2 * [None]

    # First decision node: "Derogatory.reports <= 1"
    nodes[0] = X['Derogatory.reports'] <= 1

    if nodes[0]:
        # Second decision node if Derogatory.reports <= 1: "Income.per.dependent > 3.5"
        nodes[1] = X['Income.per.dependent'] > 3.5
        
        if nodes[1]:
            prediction = 1  # Application accepted (1)
        else:
            prediction = 0  # Application rejected (0)
    else:
        # Second decision node if Derogatory.reports > 1: "Monthly.credit.card.exp <= 1000"
        nodes[1] = X['Monthly.credit.card.exp'] <= 1000
        
        if nodes[1]:
            prediction = 1  # Application accepted (1)
        else:
            prediction = 0  # Application rejected (0)

    return prediction, nodes
```

### Explanation:
- **nodes[0]**: Checks if the number of **Derogatory.reports** is less than or equal to 1, which is a key factor in determining creditworthiness.
- **nodes[1]**: For applicants with **Derogatory.reports <= 1**, it checks if the **Income.per.dependent** is greater than 3.5. For applicants with **Derogatory.reports > 1**, it checks if their **Monthly.credit.card.exp** is less than or equal to $1000.
- Based on these conditions, the function predicts whether the credit application is **accepted (1)** or **rejected (0)**.

This function returns both the **prediction** and a list of **truth values** representing whether the conditions of the inner nodes were satisfied or not.