Here's a decision tree of depth 3 based on the Features you've provided, built to predict whether a credit application is accepted or not (target: `0 = no`, `1 = yes`). The decision tree is structured to use the most important features that could reasonably influence this outcome.

```python
def predict(X: dict):
    nodes = 3 * [None]
    
    # First split based on the number of derogatory reports
    nodes[0] = X["Derogatory.reports"] <= 1
    
    if nodes[0]:
        # If derogatory reports are less than or equal to 1, check monthly credit card expenses
        nodes[1] = X["Monthly.credit.card.exp"] > 2000
        
        if nodes[1]:
            # If expenses are high, check income per dependent
            nodes[2] = X["Income.per.dependent"] > 4.5
            if nodes[2]:
                prediction = 1  # Likely to be accepted
            else:
                prediction = 0  # Not accepted
        else:
            prediction = 1  # Likely to be accepted if expenses are low
    else:
        # If derogatory reports are more than 1, check home ownership
        nodes[1] = X["Own.home"] == 1
        
        if nodes[1]:
            # If they own a home, check if they are self-employed
            nodes[2] = X["Self.employed"] == 1
            if nodes[2]:
                prediction = 0  # Not accepted if self-employed and derogatory reports are high
            else:
                prediction = 1  # Accepted if not self-employed but owns a home
        else:
            prediction = 0  # Not accepted if derogatory reports are high and no home ownership
    
    return prediction, nodes
```

### Explanation:
1. **Node 0**: The first split is based on the number of **Derogatory.reports**. If the applicant has 1 or fewer derogatory reports, they are more likely to be considered for credit.
2. **Node 1**: If derogatory reports are â‰¤ 1, we look at their **Monthly.credit.card.exp**. Higher expenses could indicate a riskier applicant.
3. **Node 2**: If expenses are high, we check **Income.per.dependent**. Higher income per dependent can mitigate the risk of high expenses.
4. If derogatory reports are > 1, the decision tree checks **Own.home**. Home ownership is a positive factor for credit approval.
5. If the applicant owns a home, we check **Self.employed**. Being self-employed coupled with derogatory reports may make the application riskier.

The decision tree makes a prediction (`0` for not accepted and `1` for accepted) based on these conditions.

### Example:
Suppose we pass the following feature values to the function:

```python
X = {
    "Age": 35,
    "Income.per.dependent": 5.0,
    "Monthly.credit.card.exp": 1800,
    "Own.home": 1,
    "Self.employed": 0,
    "Derogatory.reports": 0
}
```

Calling `predict(X)` would return:

```python
prediction, nodes = predict(X)
print(prediction)  # Output: 1 (application is accepted)
print(nodes)       # Output: [True, False, None] (truth values of the inner nodes)
```
