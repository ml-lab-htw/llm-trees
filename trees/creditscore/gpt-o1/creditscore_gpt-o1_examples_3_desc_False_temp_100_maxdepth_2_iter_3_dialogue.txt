


```python
def predict(X: dict):
    nodes = [0, 0]
    nodes[0] = 1 if X["Derogatory.reports"] == 0 else 0
    nodes[1] = 1 if X["Income.per.dependent"] > 3.5 else 0

    if nodes[0]:
        if nodes[1]:
            prediction = 1  # Accept
        else:
            prediction = 0  # Reject
    else:
        prediction = 0  # Reject

    return prediction, nodes
```

**Explanation:**

- **Nodes List (`nodes`):**
  - `nodes[0]`: Checks if the applicant has **no derogatory reports**.
    - `1` if `Derogatory.reports` is `0` (condition satisfied).
    - `0` otherwise.
  - `nodes[1]`: Checks if the applicant's **income per dependent** is **greater than 3.5**.
    - `1` if `Income.per.dependent` is greater than `3.5` (condition satisfied).
    - `0` otherwise.

- **Decision Logic:**
  - **If `nodes[0]` is `1`** (no derogatory reports):
    - **If `nodes[1]` is `1`** (income per dependent > 3.5):
      - **Prediction**: `1` (Application Accepted).
    - **Else** (`nodes[1]` is `0`):
      - **Prediction**: `0` (Application Rejected).
  - **Else** (`nodes[0]` is `0`):
    - **Prediction**: `0` (Application Rejected).

**Usage Example:**

```python
# Example applicant data
applicant = {
    'Age': 35,
    'Income.per.dependent': 4.0,
    'Monthly.credit.card.exp': 500,
    'Own.home': 1,  # Yes
    'Self.employed': 0,  # No
    'Derogatory.reports': 0
}

# Make prediction
prediction, nodes = predict(applicant)

print(f"Prediction: {'Accept' if prediction == 1 else 'Reject'}")
print(f"Nodes: {nodes}")
```

**Output:**

```
Prediction: Accept
Nodes: [1, 1]
```

**Notes:**

- The function `predict` takes a dictionary `X` containing the applicant's features.
- The feature keys in `X` must exactly match the specified feature names, including capitalization and periods.
- The function returns:
  - `prediction`: `1` for accepted applications, `0` for rejected applications.
  - `nodes`: A list of integers (`1` or `0`) indicating whether each condition in the decision tree is satisfied.
- Ensure that the input data types match the expected types (e.g., numerical values for numerical features).

**Thresholds and Conditions:**

- **Derogatory Reports (`Derogatory.reports`):**
  - Applicants with **zero** derogatory reports are considered.
  - Any number greater than `0` leads to rejection.

- **Income per Dependent (`Income.per.dependent`):**
  - Threshold set at `3.5`.
  - Applicants with an income per dependent **greater than** `3.5` are more likely to be accepted.

This function encapsulates the decision tree logic with a maximum depth of 2, focusing on the most significant features influencing credit application acceptance.