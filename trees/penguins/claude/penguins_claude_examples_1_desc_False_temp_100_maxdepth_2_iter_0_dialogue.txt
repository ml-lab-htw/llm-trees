


Based on the provided specifications, I'll create a function for the penguin species classification decision tree that returns both the prediction and the node conditions. I'll use realistic threshold values based on typical penguin measurements:

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["flipper_length_mm"] <= 205.0
    nodes[1] = X["culmen_length_mm"] <= 45.0
    
    if nodes[0]:  # flipper_length <= 205.0
        if nodes[1]:  # culmen_length <= 45.0
            prediction = 0  # Adelie
        else:
            prediction = 1  # Chinstrap
    else:  # flipper_length > 205.0
        prediction = 2  # Gentoo

    return prediction, nodes
```

This implementation:
- Uses the exact feature names provided
- Returns both the prediction (0 for Adelie, 1 for Chinstrap, 2 for Gentoo) and the node conditions
- Uses realistic threshold values:
  - 205.0 mm for flipper length (Gentoo penguins typically have longer flippers)
  - 45.0 mm for culmen length (helps distinguish between Adelie and Chinstrap)
- Has a maximum depth of 2
- Follows the format of the example provided