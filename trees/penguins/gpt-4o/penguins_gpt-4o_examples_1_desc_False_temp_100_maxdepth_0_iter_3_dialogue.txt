


```python
def predict(X: dict):
    # Initialize a list for tracking the truth values of the inner nodes
    nodes = 2 * [None]
    
    # Node 0: Check if the penguin is on Biscoe island (0 = Biscoe)
    nodes[0] = X["island"] == 0
    
    if nodes[0]:
        # If the penguin is on Biscoe island, predict Gentoo (2)
        prediction = 2
    else:
        # Node 1: Check if the culmen length is <= 40.0 mm
        nodes[1] = X["culmen_length_mm"] <= 40.0
        
        if nodes[1]:
            # If culmen length is <= 40.0 mm, predict Adelie (0)
            prediction = 0
        else:
            # If culmen length is > 40.0 mm, predict Chinstrap (1)
            prediction = 1
    
    return prediction, nodes
```

### Explanation:
- The `predict` function takes a dictionary `X` containing the features of a penguin.
- We initialized a list `nodes` to keep track of the truth values of the inner nodes (whether the condition is satisfied or not).
- **Node 0** checks if the penguin's `island` is Biscoe (`X["island"] == 0`). If true, the penguin is classified as **Gentoo** (species = 2).
- If **Node 0** is false (i.e., the penguin is not on Biscoe), the classifier moves to **Node 1**, where it checks if the penguin's `culmen_length_mm` is less than or equal to 40.0 mm.
  - If **Node 1** evaluates to true, the penguin is classified as **Adelie** (species = 0).
  - If **Node 1** evaluates to false, the penguin is classified as **Chinstrap** (species = 1).
  
This Python function will return both the prediction and a list of truth values representing whether the conditions in the inner nodes were satisfied.