


Here is the Python function for the penguin species decision tree, formatted as requested:

```python
def predict(X: dict):
    """
    Predicts the penguin species based on the input features using a decision tree of depth 2.

    Parameters:
        X (dict): A dictionary containing the following keys:
            - 'island' (int): 0 = Biscoe, 1 = Dream, 2 = Torgersen
            - 'culmen_length_mm' (float): Length of the culmen in mm
            - 'culmen_depth_mm' (float): Depth of the culmen in mm
            - 'flipper_length_mm' (float): Flipper length in mm
            - 'body_mass_g' (float): Body mass in grams
            - 'sex' (int): 0 = nan, 1 = female, 2 = male

    Returns:
        prediction (int): The predicted species (0 = Adelie, 1 = Chinstrap, 2 = Gentoo)
        nodes (list): A list representing the truth values of the inner nodes
    """
    nodes = 2 * [None]
    
    # Node 0: culmen_length_mm <= 45.0
    nodes[0] = X["culmen_length_mm"] <= 45.0
    
    if nodes[0]:
        # Node 1: If culmen_length_mm <= 45.0, classify as Chinstrap
        prediction = 1
    else:
        # Node 1: flipper_length_mm <= 210.0
        nodes[1] = X["flipper_length_mm"] <= 210.0
        
        if nodes[1]:
            # If flipper_length_mm <= 210.0, classify as Adelie
            prediction = 0
        else:
            # If flipper_length_mm > 210.0, classify as Gentoo
            prediction = 2

    return prediction, nodes
```

### Explanation of the Code:
1. **Input Features**: The function expects a dictionary `X` with the exact keys provided in the problem (`'island'`, `'culmen_length_mm'`, `'culmen_depth_mm'`, `'flipper_length_mm'`, `'body_mass_g'`, `'sex'`).
2. **Nodes List**: The list `nodes` keeps track of whether the conditions at the inner nodes of the decision tree are satisfied (`1` for True, `0` for False).
3. **Decision Logic**:
   - The first decision is based on `culmen_length_mm <= 45.0`. If True, the species is classified as Chinstrap (`1`).
   - If `culmen_length_mm > 45.0`, the next decision is based on `flipper_length_mm <= 210.0`. If True, the species is classified as Adelie (`0`), otherwise as Gentoo (`2`).
4. **Output**:
   - `prediction`: The predicted species (0 = Adelie, 1 = Chinstrap, 2 = Gentoo).
   - `nodes`: A list of truth values for the conditions at the inner nodes.

### Example Usage:
```python
# Example input
X = {
    "island": 1,                # Dream
    "culmen_length_mm": 46.0,   # Culmen length in mm
    "culmen_depth_mm": 17.0,    # Culmen depth in mm
    "flipper_length_mm": 215.0, # Flipper length in mm
    "body_mass_g": 5000,        # Body mass in grams
    "sex": 2                    # Male
}

# Predict the species
prediction, nodes = predict(X)
print("Prediction:", prediction)  # Output: 2 (Gentoo)
print("Nodes:", nodes)            # Output: [False, False]
```