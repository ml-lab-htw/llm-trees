


Based on your specifications and provided examples, let's create the function to predict the penguin species using the given features. Here's the function implementation:

```python
def predict_penguin(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["flipper_length_mm"] <= 206
    nodes[1] = (X["island"] == 2) if nodes[0] else (X["culmen_depth_mm"] <= 18)
    
    if nodes[0]:
        if nodes[1]:
            prediction = 0  # Adelie
        else:
            prediction = (0 if X["culmen_depth_mm"] <= 18 else 1)  # Adelie or Chinstrap based on culmen depth
    else:
        prediction = 2  # Gentoo

    return prediction, nodes

# Example usage:
example_features = {
    'island': 2,  # Torgersen
    'culmen_length_mm': 38.9,
    'culmen_depth_mm': 17.8,
    'flipper_length_mm': 181,
    'body_mass_g': 3750,
    'sex': 1  # female
}

prediction, nodes = predict_penguin(example_features)
print("Prediction:", prediction)
print("Nodes:", nodes)
```

Explanation:
- The first node checks if the flipper length is less than or equal to 206 mm.
- If the flipper length is less than or equal to 206 mm, we then check the island.
  - If the island is Torgersen (encoded as 2), the prediction is Adelie (0).
  - If the island is not Torgersen, the prediction proceeds to check the culmen depth:
    - If the culmen depth is less than or equal to 18 mm, predict Adelie (0).
    - Otherwise, predict Chinstrap (1).
- If the flipper length is greater than 206 mm, the prediction is Gentoo (2).

This function considers the given features and thresholds to predict the species and provides a list representing the truth values of the inner nodes.