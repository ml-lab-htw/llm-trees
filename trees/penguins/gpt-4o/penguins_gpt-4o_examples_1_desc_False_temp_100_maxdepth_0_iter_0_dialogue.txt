


```python
def predict(X: dict):
    # Initialize a list to store the truth values of the inner nodes
    nodes = 2 * [None]

    # First condition based on culmen length
    nodes[0] = X["culmen_length_mm"] <= 45.5

    if nodes[0]:
        # Second condition based on the island when culmen length <= 45.5
        nodes[1] = X["island"] == 2  # 2 corresponds to Torgersen Island
        if nodes[1]:
            prediction = 0  # Adelie (0)
        else:
            prediction = 1  # Chinstrap (1)
    else:
        # Second condition based on flipper length when culmen length > 45.5
        nodes[1] = X["flipper_length_mm"] <= 210
        if nodes[1]:
            prediction = 1  # Chinstrap (1)
        else:
            prediction = 2  # Gentoo (2)

    return prediction, nodes
```

### Explanation:
1. **nodes[0]**: This is the first split, where we check if the **culmen length** is less than or equal to 45.5 mm.
2. **nodes[1]** (if `nodes[0]` is `True`): We check if the penguin is on **Torgersen Island** (encoded as `2`) to classify it as **Adelie** (`0`). If the penguin is on another island, we classify it as **Chinstrap** (`1`).
3. **nodes[1]** (if `nodes[0]` is `False`): If the **culmen length** is greater than 45.5 mm, we use the **flipper length** to differentiate between **Chinstrap** (`1`) and **Gentoo** (`2`). Penguins with flipper lengths less than or equal to 210 mm are classified as Chinstrap, and those with flipper lengths greater than 210 mm are classified as Gentoo.

This function takes a dictionary `X` with the feature keys as inputs and returns the predicted penguin species along with the list of truth values for the inner nodes.