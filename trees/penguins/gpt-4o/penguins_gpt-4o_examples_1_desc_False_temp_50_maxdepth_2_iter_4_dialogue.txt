


Here is the Python function for the penguin species decision tree classifier, formatted as requested:

```python
def predict_penguin_species(X: dict):
    """
    Predict the penguin species based on the provided features using a decision tree classifier.

    Parameters:
    X (dict): A dictionary containing the following keys:
        - 'island' (0 = Biscoe / 1 = Dream / 2 = Torgersen)
        - 'culmen_length_mm' (float)
        - 'culmen_depth_mm' (float)
        - 'flipper_length_mm' (float)
        - 'body_mass_g' (float)
        - 'sex' (0 = nan / 1 = female / 2 = male)

    Returns:
    tuple:
        - prediction (int): The predicted species (0 = Adelie / 1 = Chinstrap / 2 = Gentoo)
        - nodes (list): A list of truth values (1 if the condition of the corresponding node is satisfied, 0 otherwise)
    """
    nodes = 2 * [None]
    
    # Node 0: flipper_length_mm <= 206.0
    nodes[0] = X["flipper_length_mm"] <= 206.0
    
    if nodes[0]:  # flipper_length_mm <= 206.0
        # Node 1: culmen_depth_mm <= 17.0
        nodes[1] = X["culmen_depth_mm"] <= 17.0
        if nodes[1]:  # culmen_depth_mm <= 17.0
            prediction = 1  # Chinstrap
        else:  # culmen_depth_mm > 17.0
            prediction = 0  # Adelie
    else:  # flipper_length_mm > 206.0
        # Node 1: body_mass_g <= 4500
        nodes[1] = X["body_mass_g"] <= 4500
        if nodes[1]:  # body_mass_g <= 4500
            prediction = 2  # Gentoo
        else:  # body_mass_g > 4500
            prediction = 2  # Gentoo

    return prediction, nodes
```

### Explanation of the Code:
1. **Input**: The function takes a dictionary `X` with the specified keys corresponding to the features of a penguin.
2. **Nodes**: A list `nodes` is used to store the truth values (1 or 0) of the conditions at each decision node.
3. **Tree Logic**:
   - The first decision is based on `flipper_length_mm` (threshold 206.0). If the flipper length is less than or equal to 206.0, the function checks `culmen_depth_mm` to classify between Adelie and Chinstrap penguins.
   - If the flipper length is greater than 206.0, the function checks `body_mass_g` to classify Gentoo penguins.
4. **Output**:
   - `prediction`: The predicted species (0 = Adelie, 1 = Chinstrap, 2 = Gentoo).
   - `nodes`: A list of truth values indicating whether the conditions at each node were satisfied.

### Example Usage:
```python
# Example input
penguin_features = {
    "island": 0,  # Biscoe
    "culmen_length_mm": 39.1,
    "culmen_depth_mm": 18.7,
    "flipper_length_mm": 181,
    "body_mass_g": 3750,
    "sex": 1  # female
}

# Predict species
prediction, nodes = predict_penguin_species(penguin_features)
print(f"Predicted species: {prediction} (0 = Adelie, 1 = Chinstrap, 2 = Gentoo)")
print(f"Decision nodes: {nodes}")
```

### Example Output:
```
Predicted species: 0 (0 = Adelie, 1 = Chinstrap, 2 = Gentoo)
Decision nodes: [1, 0]
```

This output indicates that the penguin is classified as an Adelie penguin, and the truth values of the decision nodes are `[1, 0]`, meaning the first condition (`flipper_length_mm <= 206.0`) was satisfied, but the second condition (`culmen_depth_mm <= 17.0`) was not.