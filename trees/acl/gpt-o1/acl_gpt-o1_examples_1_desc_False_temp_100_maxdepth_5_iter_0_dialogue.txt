


```python
def predict(X: dict):
    nodes = [None] * 5
    # Node 0: Is the Group surgical reconstruction? (Group == 2)
    nodes[0] = int(X["Group"] == 2)
    if nodes[0]:
        # Node 1: Is the baseline mean T2 value for deep cartilage layers > 50.0 ms?
        nodes[1] = int(X["ccMF.D.T2.Me"] > 50.0)
        if nodes[1]:
            prediction = 1  # Abnormal cartilage thickness change
        else:
            prediction = 0  # Normal cartilage thickness change
        # Nodes 2, 3, 4 are not used in this branch
        nodes[2] = 0
        nodes[3] = 0
        nodes[4] = 0
    else:
        # Node 2: Is the Lysholm score ≤ 80?
        nodes[2] = int(X["Lysholm"] <= 80)
        if nodes[2]:
            # Node 3: Is the external peak knee moment around y-axis > 30.0 Nm?
            nodes[3] = int(X["Knee_Moment_Y_Min_51_100_INJ"] > 30.0)
            if nodes[3]:
                prediction = 1  # Abnormal cartilage thickness change
            else:
                prediction = 0  # Normal cartilage thickness change
            # Node 4 is not used in this path
            nodes[1] = 0
            nodes[4] = 0
        else:
            # Node 4: Is Lysholm score > 80? (This is always True if Node 2 is False)
            nodes[4] = int(X["Lysholm"] > 80)
            prediction = 0  # Normal cartilage thickness change
            # Nodes 1 and 3 are not used in this path
            nodes[1] = 0
            nodes[3] = 0
    return prediction, nodes
```

**Explanation:**

- **Node 0:** Checks if the patient underwent **surgical reconstruction** (`Group == 2`).
  - **If True (1):**
    - **Node 1:** Checks if the **baseline mean T2 values for deep cartilage layers** (`ccMF.D.T2.Me`) is greater than **50.0 ms**.
      - **If True (1):** Prediction is **abnormal** (`1`).
      - **If False (0):** Prediction is **normal** (`0`).
    - **Nodes 2, 3, 4** are set to `0` as they are not used in this branch.
  - **If False (0):**
    - **Node 2:** Checks if the **Lysholm score** is less than or equal to **80**.
      - **If True (1):**
        - **Node 3:** Checks if the **external peak knee moment around y-axis** (`Knee_Moment_Y_Min_51_100_INJ`) is greater than **30.0 Nm**.
          - **If True (1):** Prediction is **abnormal** (`1`).
          - **If False (0):** Prediction is **normal** (`0`).
        - **Node 4** is set to `0` as it is not used in this path.
      - **If False (0):**
        - **Node 4:** Checks if the **Lysholm score** is greater than **80**.
          - **This condition will always be True (1)** here because if **Node 2** is False (`Lysholm > 80`).
        - Prediction is **normal** (`0`).
      - **Nodes 1 and 3** are set to `0` as they are not used in this path.

- **Nodes List:** Represents the truth values of the nodes:
  - `1` if the condition is **True**.
  - `0` if the condition is **False**.
  - **Unused nodes** in a particular path are set to `0`.

**Thresholds Used:**

- **Baseline mean T2 values for deep cartilage layers (`ccMF.D.T2.Me`):** **50.0 ms**
  - Higher values may indicate cartilage degeneration.
- **Lysholm score:** **80**
  - Scores ≤80 suggest more severe knee symptoms.
- **External peak knee moment around y-axis (`Knee_Moment_Y_Min_51_100_INJ`):** **30.0 Nm**
  - Higher moments may increase stress on the knee cartilage.

**Usage Example:**

```python
# Example input dictionary
X_example = {
    "Group": 1,  # Noncoper
    "Lysholm": 75,
    "ccMF.D.T2.Me": 45.0,
    "Knee_Moment_Y_Min_51_100_INJ": 35.0,
    # ... other features ...
}

# Get prediction and node values
prediction, nodes = predict(X_example)

print(f"Prediction: {'Abnormal' if prediction == 1 else 'Normal'}")
print(f"Nodes: {nodes}")
```

**Note:**
- The function assumes that all required keys are present in the input dictionary `X`.
- The thresholds are based on clinical insights and are hypothetical; in practice, they should be derived from data analysis.