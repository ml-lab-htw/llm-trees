


```python
def predict(X: dict):
    # Initialize a list to store the truth values of the inner nodes
    nodes = 2 * [None]
    
    # First node: Vote on aid to Nicaraguan contras
    # (2 = yes, 1 = no)
    nodes[0] = X["aid-to-nicaraguan-contras"] == 1

    # Second node: Vote on physician fee freeze
    # (2 = yes, 1 = no)
    nodes[1] = X["physician-fee-freeze"] == 1

    # Decision tree structure
    if nodes[0]:  # aid-to-nicaraguan-contras == no (Democrat leaning)
        prediction = 0  # Democrat
    else:  # aid-to-nicaraguan-contras == yes (Republican leaning)
        if nodes[1]:  # physician-fee-freeze == no (Democrat leaning)
            prediction = 0  # Democrat
        else:  # physician-fee-freeze == yes (Republican leaning)
            prediction = 1  # Republican

    return prediction, nodes
```

### Explanation:
- **Node 0** checks whether the vote on aid to Nicaraguan Contras was 'no' (value 1). If `True`, the prediction is Democrat (0).
- **Node 1** checks the vote on the physician fee freeze. If the vote on aid to Nicaraguan Contras was 'yes' (value 2), it further checks this feature:
  - If the vote on the physician fee freeze was 'no' (value 1), the prediction is still Democrat (0).
  - If the vote on the physician fee freeze was 'yes' (value 2), the prediction is Republican (1).

The `nodes` list stores the Boolean results of the inner node conditions for later examination.