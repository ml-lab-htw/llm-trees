


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First internal node: 'adoption-of-the-budget-resolution' <= 1.5 (i.e., 1 = no, 2 = yes)
    nodes[0] = X["adoption-of-the-budget-resolution"] <= 1.5
    
    # Second internal node: 'el-salvador-adi' <= 1.5 (i.e., 1 = no, 2 = yes)
    if nodes[0]:
        prediction = 0  # Democrat
    else:
        nodes[1] = X["el-salvador-adi"] <= 1.5
        if nodes[1]:
            prediction = 0  # Democrat
        else:
            prediction = 1  # Republican

    return prediction, nodes
```

### Explanation:
- **`nodes[0]`** checks the first internal node condition: whether the vote on the adoption of the budget resolution is "no" (encoded as 1) or "yes" (encoded as 2). If the vote is "no", the prediction is **Democrat** (encoded as 0). Otherwise, we proceed to the next condition.
- **`nodes[1]`** checks the second internal node: the vote on aid to El Salvador. If the vote is "no" (encoded as 1), the prediction is **Democrat** (encoded as 0). If it's "yes" (encoded as 2), the prediction is **Republican** (encoded as 1).

The function takes a dictionary `X` containing the features, evaluates the nodes, and returns both the predicted party affiliation and a list of truth values representing which conditions were met.