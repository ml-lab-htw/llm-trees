


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First decision based on Bilirubin level
    nodes[0] = X["BILIRUBIN"] <= 2.5
    
    if nodes[0]:
        # Second decision based on Prothrombin Time (PROTIME) when Bilirubin is low
        nodes[1] = X["PROTIME"] <= 12.5
        
        if nodes[1]:
            prediction = 1  # Survive
        else:
            prediction = 0  # Die
    else:
        # Second decision based on Age when Bilirubin is high
        nodes[1] = X["AGE"] <= 55
        
        if nodes[1]:
            prediction = 1  # Survive
        else:
            prediction = 0  # Die

    return prediction, nodes
``` 

### Explanation:
- **nodes[0]** checks the first condition (`BILIRUBIN <= 2.5`). If this condition is met, we move to the second condition based on **Prothrombin Time (PROTIME)**.
- If **BILIRUBIN > 2.5**, then the next condition is based on **Age**.
- The function outputs the predicted class (`1` for "Survive", `0` for "Die") along with a list of boolean values representing whether the conditions of the decision nodes were satisfied.

### Example Usage:
```python
X = {
    "AGE": 60,
    "SEX": 2,
    "STEROID": 1,
    "ANTIVIRALS": 0,
    "FATIGUE": 1,
    "MALAISE": 0,
    "ANOREXIA": 1,
    "LIVER BIG": 0,
    "LIVER FIRM": 1,
    "SPLEEN PALPABLE": 0,
    "SPIDERS": 0,
    "ASCITES": 0,
    "VARICES": 0,
    "BILIRUBIN": 3.0,
    "ALK PHOSPHATE": 85,
    "SGOT": 100,
    "ALBUMIN": 3.5,
    "PROTIME": 11.5,
    "HISTOLOGY": 0
}

prediction, nodes = predict(X)
print(f"Prediction: {prediction}, Nodes: {nodes}")
```

