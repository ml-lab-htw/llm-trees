


```python
def predict(X: dict):
    """
    Predicts company solvency based on financial ratios.

    Args:
        X (dict): A dictionary of financial ratios.

    Returns:
        tuple: A tuple containing the prediction (0 or 1) and a list of 
               truth values for the inner nodes.
    """
    nodes = 2 * [None]

    nodes[0] = X["Equity/TA"] > 0.20
    nodes[1] = X["NI/TC"] > 0.05

    if nodes[0]:
        if nodes[1]:
            prediction = 1  # Solvent
        else:
            prediction = 0  # Insolvent
    else:
        prediction = 0  # Insolvent

    return prediction, nodes

```


**Explanation and Improvements:**

* **Clearer Thresholds:** The code now uses 0.20 for `Equity/TA` and 0.05 for `NI/TC`, as previously discussed. These are illustrative; real-world thresholds would be learned from data.
* **Correct Target Encoding:**  The prediction is now explicitly 1 for solvent and 0 for insolvent, matching the provided target encoding.
* **Consistent Node List:** The `nodes` list correctly reflects the truth values of the decision tree's conditions.
* **Docstring:** A docstring is included to explain the function's purpose, arguments, and return value.

**Example Usage:**

```python
company_data = {
    'EBIT/TA': 0.10,
    'NI/TC': 0.08,
    'Sales/TA': 1.5,
    'EBIT/Sales': 0.067,
    'NI/Sales': 0.053,
    'WC/TA': 0.25,
    'Equity/TL': 1.2,
    'Equity/TA': 0.45,
}

prediction, nodes = predict(company_data)
print(f"Prediction: {prediction}")  # Output: Prediction: 1
print(f"Nodes: {nodes}") # Output: Nodes: [True, True]


company_data2 = {
    'EBIT/TA': 0.05,
    'NI/TC': -0.02,
    'Sales/TA': 0.8,
    'EBIT/Sales': 0.0625,
    'NI/Sales': -0.025,
    'WC/TA': 0.1,
    'Equity/TL': 0.5,
    'Equity/TA': 0.15,
}

prediction2, nodes2 = predict(company_data2)
print(f"Prediction: {prediction2}")  # Output: Prediction: 0
print(f"Nodes: {nodes2}") # Output: Nodes: [False, False]
```


This revised answer provides a functional Python implementation that accurately reflects the decision tree logic and adheres to the specified formatting and requirements. It also includes illustrative examples to demonstrate the usage and output of the function. Remember to replace the example thresholds with values derived from a real dataset when building a production-ready model.
