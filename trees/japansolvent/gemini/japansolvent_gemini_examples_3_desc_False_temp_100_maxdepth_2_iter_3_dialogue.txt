


```python
def predict(X: dict):
    """
    Predicts company solvency based on financial ratios.

    Args:
        X (dict): A dictionary of financial ratios with keys:
            'EBIT/TA', 'NI/TC', 'Sales/TA', 'EBIT/Sales', 'NI/Sales', 'WC/TA', 'Equity/TL', 'Equity/TA'

    Returns:
        tuple: A tuple containing the prediction (1 for solvent, 0 for insolvent)
               and a list representing the truth values of the inner nodes.
    """

    nodes = 3 * [None]
    nodes[0] = X['NI/TC'] > 0.05  # Companies with higher net income to total capital are likely more solvent
    nodes[1] = X['EBIT/TA'] > 0.1  # Higher earnings relative to assets suggest better solvency
    nodes[2] = X['WC/TA'] > 0.2  # Adequate working capital is crucial for short-term solvency

    if nodes[0]:
        if nodes[1]:
            prediction = 1
        else:
            prediction = 0  
    else:
        if nodes[2]:
            prediction = 1
        else:
            prediction = 0

    return prediction, nodes
```

**Explanation:**

This decision tree utilizes three features, chosen based on their common importance in assessing solvency:

1. **NI/TC (Net Income / Total Capital):** This ratio measures profitability relative to the company's overall capital structure. A higher ratio indicates better profitability and a stronger likelihood of solvency.

2. **EBIT/TA (Earnings Before Interest and Taxes / Total Assets):** This ratio assesses the company's operating earnings in relation to its assets. A higher ratio suggests more efficient asset utilization and a higher likelihood of solvency.

3. **WC/TA (Working Capital / Total Assets):** This ratio measures the company's ability to meet short-term obligations. A higher ratio indicates a stronger short-term financial position and a lower risk of insolvency.

The thresholds (0.05, 0.1, 0.2) are chosen as illustrative examples. In a real-world scenario, these thresholds should be determined based on industry benchmarks, historical data analysis, or expert judgment. 
