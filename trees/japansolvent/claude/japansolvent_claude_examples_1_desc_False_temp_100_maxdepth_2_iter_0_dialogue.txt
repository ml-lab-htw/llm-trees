


Based on the financial features and their descriptions, I'll create a prediction function for the decision tree I proposed earlier, using realistic threshold values:

```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First split on EBIT/TA (profitability threshold of 2.5%)
    nodes[0] = X["EBIT/TA"] <= 0.025
    
    # Second split on WC/TA (working capital threshold of -10%)
    nodes[1] = X["WC/TA"] <= -0.10
    
    if nodes[0]:  # Low profitability
        if nodes[1]:  # Poor working capital
            prediction = 0  # insolvent
        else:  # Acceptable working capital
            prediction = 1  # solvent
    else:  # Good profitability
        prediction = 1  # solvent
    
    return prediction, nodes
```

This function:
- Takes a dictionary of financial ratios as input
- Creates a list to store the boolean values of the decision nodes
- Uses realistic threshold values (2.5% for EBIT/TA and -10% for WC/TA)
- Returns both the prediction (1 for solvent, 0 for insolvent) and the list of node conditions
- Uses exactly the feature names provided in the list
- Makes decisions based on common financial analysis thresholds