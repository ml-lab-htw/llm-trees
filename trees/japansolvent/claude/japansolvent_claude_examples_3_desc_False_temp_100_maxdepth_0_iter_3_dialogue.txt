


Based on the decision tree I created earlier and the provided feature keys and target variable encoding, here's the Python function that implements the decision tree classifier for company solvency:

```python
def predict(X: dict):
    nodes = 5 * [None]
    nodes[0] = X["EBIT/TA"] <= 0.05
    nodes[1] = X["NI/TC"] <= 0.02
    nodes[2] = X["WC/TA"] <= 0.10
    nodes[3] = X["Equity/TA"] <= 0.30
    nodes[4] = X["Sales/TA"] <= 1.20

    if nodes[0]:
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            if nodes[2]:
                prediction = 0  # Insolvent
            else:
                prediction = 1  # Solvent
    else:
        if nodes[3]:
            if nodes[4]:
                prediction = 0  # Insolvent
            else:
                prediction = 1  # Solvent
        else:
            prediction = 1  # Solvent

    return prediction, nodes
```

This function takes a dictionary `X` containing the financial ratios as input. It then evaluates the decision tree nodes based on the given thresholds and returns a tuple containing:

1. The prediction: 1 for solvent, 0 for insolvent
2. A list of boolean values representing the truth values of the inner nodes (1 if the condition is satisfied, 0 otherwise)

The thresholds used in this function are based on the decision tree I created earlier, with some adjustments to make them more meaningful:

- EBIT/TA threshold: 0.05 (5% return on assets)
- NI/TC threshold: 0.02 (2% return on capital)
- WC/TA threshold: 0.10 (10% working capital to total assets ratio)
- Equity/TA threshold: 0.30 (30% equity to total assets ratio)
- Sales/TA threshold: 1.20 (asset turnover of