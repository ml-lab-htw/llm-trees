


Here's the Python function implementing the decision tree for company solvency prediction:

```python
def predict(X: dict):
    nodes = 3 * [None]
    
    # Node conditions
    nodes[0] = X['EBIT/TA'] <= 0.02
    nodes[1] = X['Equity/TA'] <= 0.30
    nodes[2] = X['WC/TA'] <= 0.15
    
    # Decision tree logic
    if nodes[0]:  # EBIT/TA <= 0.02
        if nodes[1]:  # Equity/TA <= 0.30
            prediction = 0  # Insolvent
        else:  # Equity/TA > 0.30
            if nodes[2]:  # WC/TA <= 0.15
                prediction = 0  # Insolvent
            else:  # WC/TA > 0.15
                prediction = 1  # Solvent
    else:  # EBIT/TA > 0.02
        prediction = 1  # Solvent
    
    return prediction, nodes
```

This implementation:
1. Uses the exact feature names provided
2. Has realistic threshold values based on financial ratios:
   - EBIT/TA threshold of 0.02 (2% return on assets)
   - Equity/TA threshold of 0.30 (30% equity ratio)
   - WC/TA threshold of 0.15 (15% working capital ratio)
3. Returns both the prediction (1 for solvent, 0 for insolvent) and a list of boolean values representing the condition results at each node
4. Uses a logical structure that follows common financial analysis principles

The tree first checks profitability (EBIT/TA), then financial structure (Equity/TA), and finally liquidity (WC/TA) to make its classification.