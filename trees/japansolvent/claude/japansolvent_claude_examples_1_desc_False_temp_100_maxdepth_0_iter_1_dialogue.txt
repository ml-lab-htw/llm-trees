


Based on the features and their financial meaning, I'll create a decision tree function with realistic threshold values:

```python
def predict(X: dict):
    nodes = 5 * [None]
    
    # First level: Check profitability
    nodes[0] = X["EBIT/TA"] <= 0.03
    
    # Second level: Check capital structure
    nodes[1] = X["Equity/TA"] <= 0.20
    
    # Third level: Check working capital
    nodes[2] = X["WC/TA"] <= 0.15
    
    # Fourth level: Check leverage
    nodes[3] = X["Equity/TL"] <= 0.40
    
    # Fifth level: Check profitability relative to capital
    nodes[4] = X["NI/TC"] <= 0.02

    if nodes[0]:  # EBIT/TA <= 0.03
        if nodes[1]:  # Equity/TA <= 0.20
            prediction = 0  # insolvent
        else:  # Equity/TA > 0.20
            if nodes[2]:  # WC/TA <= 0.15
                prediction = 0  # insolvent
            else:  # WC/TA > 0.15
                prediction = 1  # solvent
    else:  # EBIT/TA > 0.03
        if nodes[3]:  # Equity/TL <= 0.40
            if nodes[4]:  # NI/TC <= 0.02
                prediction = 0  # insolvent
            else:  # NI/TC > 0.02
                prediction = 1  # solvent
        else:  # Equity/TL > 0.40
            prediction = 1  # solvent

    return prediction, nodes
```

The thresholds are chosen based on typical financial ratio benchmarks:
- EBIT/TA: 0.03 (3% return on assets)
- Equity/TA: 0.20 (20% equity ratio)
- WC/TA: 