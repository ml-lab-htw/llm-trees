


```python
def predict(X: dict):
    # Initialize list for node conditions
    nodes = 4 * [None]
    
    # Define node conditions
    nodes[0] = X['EBIT/TA'] <= 0.02
    nodes[1] = X['WC/TA'] <= -0.10
    nodes[2] = X['Equity/TA'] <= 0.15
    nodes[3] = X['NI/TC'] <= 0.01
    
    # Decision tree logic
    if nodes[0]:  # EBIT/TA <= 0.02
        if nodes[1]:  # WC/TA <= -0.10
            prediction = 0  # Insolvent
        else:  # WC/TA > -0.10
            if nodes[2]:  # Equity/TA <= 0.15
                prediction = 0  # Insolvent
            else:  # Equity/TA > 0.15
                prediction = 1  # Solvent
    else:  # EBIT/TA > 0.02
        if nodes[3]:  # NI/TC <= 0.01
            prediction = 0  # Insolvent
        else:  # NI/TC > 0.01
            prediction = 1  # Solvent
            
    return prediction, nodes
```

The thresholds were chosen based on typical financial ratios:
- EBIT/TA threshold of 0.02 (2%) represents a minimal profitability level
- WC/TA threshold of -0.10 (-10%) indicates significant liquidity problems
- Equity/TA threshold of 0.15 (15%) represents a minimal equity cushion
- NI/TC threshold of 0.01 (1%) represents minimal return on capital

The function returns:
1. prediction: 1 for solvent, 0 for insolvent
2. nodes: list of boolean values indicating which conditions were met