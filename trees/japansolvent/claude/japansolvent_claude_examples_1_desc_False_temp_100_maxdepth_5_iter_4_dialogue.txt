


Based on the features and requirements, here's the prediction function for the solvency classification decision tree:

```python
def predict(X: dict):
    nodes = 5 * [None]  # Initialize list for 5 inner nodes
    
    # Decision nodes with financially meaningful thresholds
    nodes[0] = X['EBIT/TA'] <= 0.02      # Profitability threshold
    nodes[1] = X['WC/TA'] <= -0.05       # Working capital threshold
    nodes[2] = X['Equity/TA'] <= 0.20    # Capital structure threshold
    nodes[3] = X['Equity/TL'] <= 0.35    # Leverage threshold
    nodes[4] = X['NI/TC'] <= 0.01        # Return on capital threshold
    
    # Tree logic
    if nodes[0]:  # EBIT/TA <= 0.02
        if nodes[1]:  # WC/TA <= -0.05
            prediction = 0  # Insolvent
        else:  # WC/TA > -0.05
            if nodes[2]:  # Equity/TA <= 0.20
                prediction = 0  # Insolvent
            else:  # Equity/TA > 0.20
                prediction = 1  # Solvent
    else:  # EBIT/TA > 0.02
        if nodes[3]:  # Equity/TL <= 0.35
            if nodes[4]:  # NI/TC <= 0.01
                prediction = 0  # Insolvent
            else:  # NI/TC > 0.01
                prediction = 1  # Solvent
        else:  # Equity/TL > 0.35
            prediction = 1  # Solvent
            
    return prediction, nodes
```