


Thank you for the detailed instructions and examples. I'll create a Python function based on the decision tree I provided earlier, using the exact feature keys you've specified and the target variable encoding. Here's the function:

```python
def predict(X: dict):
    nodes = 3 * [None]
    nodes[0] = X["Equity/TA"] <= 0.30
    nodes[1] = X["WC/TA"] <= 0.10
    nodes[2] = X["EBIT/TA"] <= 0.05
    
    if nodes[0]:
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent
    else:
        if nodes[2]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent
    
    return prediction, nodes
```

This function:
1. Takes a dictionary `X` as input, where the keys are the feature names.
2. Creates a list `nodes` to store the truth values of the inner nodes.
3. Evaluates the conditions for each node and stores the results (True = 1, False = 0) in the `nodes` list.
4. Uses these conditions to navigate the decision tree and make a prediction.
5. Returns the prediction (1 for solvent, 0 for insolvent) and the list of node truth values.

The thresholds used in this function are:
- Equity/TA: 0.30 (30% equity to total assets ratio)
- WC/TA: 0.10 (10% working capital to total assets ratio)
- EBIT/TA: 0.05 (5% earnings before interest and taxes to total assets ratio)

These thresholds are chosen based on typical financial ratios that might indicate a company's solvency, but they can be adjusted based on more specific industry standards or historical data if available.