


Based on the provided feature names and the decision tree I created earlier, here's the Python function:

```python
def predict(X: dict):
    nodes = 5 * [None]
    nodes[0] = X['EBIT/TA'] <= 0.02
    nodes[1] = X['WC/TA'] <= -0.10
    nodes[2] = X['Equity/TA'] <= 0.15
    nodes[3] = X['Equity/TL'] <= 0.25
    nodes[4] = X['NI/TC'] <= 0.01
    
    if nodes[0]:  # EBIT/TA <= 0.02
        if nodes[1]:  # WC/TA <= -0.10
            prediction = 0  # Insolvent
        else:  # WC/TA > -0.10
            if nodes[2]:  # Equity/TA <= 0.15
                prediction = 0  # Insolvent
            else:  # Equity/TA > 0.15
                prediction = 1  # Solvent
    else:  # EBIT/TA > 0.02
        if nodes[3]:  # Equity/TL <= 0.25
            if nodes[4]:  # NI/TC <= 0.01
                prediction = 0  # Insolvent
            else:  # NI/TC > 0.01
                prediction = 1  # Solvent
        else:  # Equity/TL > 0.25
            prediction = 1  # Solvent
    
    return prediction, nodes
```

The thresholds I've used are based on common financial ratio analysis:
- EBIT/TA: 0.02 (2% return on assets)
- WC/TA: -0.10 (negative working capital ratio indicating liquidity problems)
- Equity/TA: 0.15 (15% equity ratio)
- Equity/TL: 0.25 (25% equity to liability ratio)
- NI/TC: 0.01 (1