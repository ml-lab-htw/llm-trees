


Based on the features and typical financial ratios, here's the Python function implementing the decision tree:

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["EBIT/TA"] <= 0.04  # First split on profitability
    nodes[1] = X["WC/TA"] <= 0.02    # Second split on working capital ratio
    
    if nodes[0]:  # Low profitability
        if nodes[1]:  # Low working capital
            prediction = 0  # Insolvent
        else:  # Adequate working capital
            prediction = 1  # Solvent
    else:  # High profitability
        prediction = 1  # Solvent

    return prediction, nodes
```

The thresholds are chosen based on typical financial benchmarks:
- EBIT/TA threshold of 0.04 (4%) represents a minimal acceptable profitability level
- WC/TA threshold of 0.02 (2%) represents a minimal acceptable working capital ratio

The function takes a dictionary of features as input, evaluates the conditions at each node, and returns both:
1. The final prediction (1 for solvent, 0 for insolvent)
2. A list of boolean values representing whether each condition was met