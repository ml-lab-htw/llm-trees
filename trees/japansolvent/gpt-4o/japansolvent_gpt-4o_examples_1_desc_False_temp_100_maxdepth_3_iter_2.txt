Here is a decision tree with a maximum depth of 3, using the most important features based on potential relevance to solvency prediction:

```python
def predict(X: dict):
    nodes = 3 * [None]
    
    # Node 1: Check if the company's Equity/Total Liabilities is more than 1.0
    nodes[0] = X["Equity/TL"] > 1.0
    
    if nodes[0]:
        # Node 2: If the company has more equity than liabilities, check if Sales/Total Assets is greater than 0.3
        nodes[1] = X["Sales/TA"] > 0.3
        
        if nodes[1]:
            # Node 3: If Sales/Total Assets is healthy, check if EBIT/Sales is greater than 0.1 (indicating profitability)
            nodes[2] = X["EBIT/Sales"] > 0.1
            if nodes[2]:
                prediction = 1  # Solvent
            else:
                prediction = 0  # Insolvent
        else:
            prediction = 0  # Insolvent
    else:
        # Node 2: If the company has more liabilities, check if Working Capital/Total Assets is greater than 0.05
        nodes[1] = X["WC/TA"] > 0.05
        
        if nodes[1]:
            # Node 3: If Working Capital is positive, check if Net Income/Total Capital is greater than 0.05
            nodes[2] = X["NI/TC"] > 0.05
            if nodes[2]:
                prediction = 1  # Solvent
            else:
                prediction = 0  # Insolvent
        else:
            prediction = 0  # Insolvent

    return prediction, nodes
```

### Explanation of the nodes:
1. **Node 1**: The first decision checks if the company's **Equity/Total Liabilities** is greater than 1.0, which indicates whether the company has more equity than liabilities (a good sign for solvency).
   
2. **Node 2**: 
   - If the company has more equity than liabilities, we next check if **Sales/Total Assets** is greater than 0.3. This checks if the company is generating enough sales relative to its assets.
   - If the company has more liabilities than equity, we check if **Working Capital/Total Assets** is greater than 0.05, which indicates whether the company has a positive working capital (important for short-term solvency).

3. **Node 3**:
   - After the Sales/Total Assets check, we check **EBIT/Sales** to determine profitability. If EBIT/Sales is greater than 0.1, it indicates the company is generating operating profit from sales.
   - After the Working Capital check, we check **Net Income/Total Capital** to see if the company is generating a positive return from its capital, which helps predict solvency.

### Example usage:

```python
X = {
    "EBIT/TA": 0.08,
    "NI/TC": 0.07,
    "Sales/TA": 0.35,
    "EBIT/Sales": 0.12,
    "NI/Sales": 0.05,
    "WC/TA": 0.09,
    "Equity/TL": 1.2,
    "Equity/TA": 0.6
}

prediction, nodes = predict(X)
print(f"Prediction: {prediction}, Nodes: {nodes}")
```

This function will return a prediction (1 for solvent, 0 for insolvent) and a list of boolean values representing whether each node's condition was satisfied.