Based on the Features and target variable, I will construct a decision tree with a depth of 5, using the most important features from the provided list. The decision tree will result in a Python function that returns a prediction (whether a company is solvent or insolvent) and a list of truth values representing the decisions made at each node in the tree.

Here is the resulting decision tree function:

```python
def predict(X: dict):
    nodes = 5 * [None]  # Initialize list to store truth values of nodes

    # Define the conditions for the decision tree nodes
    nodes[0] = X["EBIT/TA"] > 0.1
    nodes[1] = X["NI/TC"] > 0.05
    nodes[2] = X["Sales/TA"] > 1.0
    nodes[3] = X["Equity/TL"] > 0.5
    nodes[4] = X["WC/TA"] > 0.2

    # Decision tree logic
    if nodes[0]:
        if nodes[1]:
            if nodes[2]:
                if nodes[3]:
                    if nodes[4]:
                        prediction = 1  # Solvent
                    else:
                        prediction = 0  # Insolvent
                else:
                    prediction = 0  # Insolvent
            else:
                if nodes[4]:
                    prediction = 1  # Solvent
                else:
                    prediction = 0  # Insolvent
        else:
            if nodes[3]:
                prediction = 1  # Solvent
            else:
                prediction = 0  # Insolvent
    else:
        if nodes[2]:
            if nodes[4]:
                prediction = 1  # Solvent
            else:
                prediction = 0  # Insolvent
        else:
            prediction = 0  # Insolvent

    return prediction, nodes
```

### Explanation of the decision tree:

1. **Node 0:** If `EBIT/TA` is greater than 0.1, the company is more likely to be solvent.
2. **Node 1:** If `NI/TC` is greater than 0.05, the company is more likely to be solvent.
3. **Node 2:** If `Sales/TA` is greater than 1.0, the company is performing well in terms of sales relative to its assets, increasing solvency likelihood.
4. **Node 3:** If `Equity/TL` is greater than 0.5, the company has strong equity relative to liabilities, indicating solvency.
5. **Node 4:** If `WC/TA` is greater than 0.2, the company has healthy working capital relative to its assets, again indicating solvency.

### Example usage:

```python
# Example input data
X = {
    "EBIT/TA": 0.15,
    "NI/TC": 0.08,
    "Sales/TA": 1.2,
    "EBIT/Sales": 0.1,
    "NI/Sales": 0.05,
    "WC/TA": 0.25,
    "Equity/TL": 0.6,
    "Equity/TA": 0.7
}

# Get prediction and truth values of nodes
prediction, nodes = predict(X)
print(f"Prediction: {'Solvent' if prediction == 1 else 'Insolvent'}")
print(f"Node decisions: {nodes}")
```

This function will provide a prediction of whether the company is solvent based on the input features, and it will also return a list of truth values representing which conditions in the decision tree were satisfied.
