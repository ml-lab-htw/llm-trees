


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # Inner Node 1: Check the ratio of Equity/Total Liabilities
    nodes[0] = X["Equity/TL"] <= 1.50
    
    if nodes[0]:
        # Inner Node 2: If Equity/Total Liabilities is low, check EBIT/Total Assets
        nodes[1] = X["EBIT/TA"] <= 0.05
        
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent
    else:
        prediction = 1  # Solvent
    
    return prediction, nodes
```

### Explanation:
- **Nodes list**: The `nodes` list tracks the truth values of the internal decision nodes:
  - `nodes[0]`: Checks if "Equity/Total Liabilities" is less than or equal to 1.50.
  - `nodes[1]`: If `nodes[0]` is `True`, checks whether "EBIT/Total Assets" is less than or equal to 0.05.

- **Prediction**: 
  - If both conditions (nodes[0] and nodes[1]) are satisfied, the company is predicted to be insolvent (`0`).
  - If only the first condition is satisfied but the second is not, the company is predicted to be solvent (`1`).
  - If the first condition is not satisfied (i.e., Equity/Total Liabilities is greater than 1.50), the company is predicted to be solvent (`1`).

This function takes a dictionary `X` representing the feature values and returns both the prediction and a list of the truth values for each decision node.