Here is a decision tree with a maximum depth of 2 based on the Features and the target:

```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First decision node: EBIT/TA <= 0.2
    nodes[0] = X["EBIT/TA"] <= 0.2
    
    # Second decision node: Equity/TA <= 0.3
    nodes[1] = X["Equity/TA"] <= 0.3
    
    if nodes[0]:  # If EBIT/TA <= 0.2
        if nodes[1]:  # If Equity/TA <= 0.3
            prediction = 0  # Insolvent
        else:  # If Equity/TA > 0.3
            prediction = 1  # Solvent
    else:  # If EBIT/TA > 0.2
        prediction = 1  # Solvent

    return prediction, nodes
```

### Explanation:
This decision tree evaluates two features to predict whether a company is solvent or insolvent:
1. **EBIT/TA**: If the company's EBIT/TA is less than or equal to 0.2, it checks the second condition.
2. **Equity/TA**: If **Equity/TA** is less than or equal to 0.3, the company is predicted to be **insolvent** (0). Otherwise, it is considered **solvent** (1).

If EBIT/TA is greater than 0.2, the company is predicted to be solvent (1) directly.
