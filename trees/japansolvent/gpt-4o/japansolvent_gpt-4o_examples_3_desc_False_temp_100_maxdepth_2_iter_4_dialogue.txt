


Here's the Python function that takes a dictionary of financial features and predicts whether a company is solvent (1) or insolvent (0). The function also returns a list representing the truth values of the inner nodes.

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X["EBIT/TA"] <= 0.05
    nodes[1] = X["Equity/TL"] <= 1.0
    
    if nodes[0]:
        prediction = 0
    else:
        if nodes[1]:
            prediction = 0
        else:
            prediction = 1
    
    return prediction, nodes

# Example usage:
# X = {'EBIT/TA': 0.04, 'NI/TC': 0.10, 'Sales/TA': 1.20, 'EBIT/Sales': 0.20, 'NI/Sales': 0.15, 'WC/TA': 0.50, 'Equity/TL': 1.50, 'Equity/TA': 0.50}
# print(predict(X))  # Output should be (0, [True, False])
```

### Explanation
1. **Nodes List**:
    - `nodes[0]`: Checks if `EBIT/TA` is less than or equal to 0.05.
    - `nodes[1]`: Checks if `Equity/TL` is less than or equal to 1.0.
    
2. **Decision Tree Logic**:
    - If `nodes[0]` is True (EBIT/TA <= 0.05), the company is classified as insolvent (0).
    - If `nodes[0]` is False (EBIT/TA > 0.05), then check `nodes[1]`.
        - If `nodes[1]` is True (Equity/TL <= 1.0), the company is also classified as insolvent (0).
        - If `nodes[1]` is False (Equity/TL > 1.0), the company is classified as solvent (1).

Make sure to adjust the threshold values if you have different criteria or more data indicating better thresholds.