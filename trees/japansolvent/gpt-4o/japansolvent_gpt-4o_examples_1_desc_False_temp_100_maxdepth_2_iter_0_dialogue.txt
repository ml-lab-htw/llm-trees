


Certainly! Below is the Python function for the decision tree that classifies whether a company is solvent (1) or insolvent (0), based on the financial ratios you provided.

```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First condition based on Equity/Total Liabilities
    nodes[0] = X["Equity/TL"] <= 0.50
    
    if nodes[0]:
        # Second condition if the first one is true, based on EBIT/Total Assets
        nodes[1] = X["EBIT/TA"] <= 0.03
        
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent
    else:
        # Second condition if the first one is false, based on Net Income/Total Capital
        nodes[1] = X["NI/TC"] <= 0.05
        
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent

    return prediction, nodes
```

### Explanation:
1. **Nodes List**: The `nodes` list contains the truth values for the inner nodes of the decision tree:
   - `nodes[0]`: Whether `Equity/TL <= 0.50`
   - `nodes[1]`: Either `EBIT/TA <= 0.03` (if `nodes[0]` is `True`) or `NI/TC <= 0.05` (if `nodes[0]` is `False`).
   
2. **Prediction**: Based on the conditions of the decision tree:
   - If the company has **low equity relative to total liabilities** (i.e., `Equity/TL <= 0.50`) and **low EBIT relative to total assets** (i.e., `EBIT/TA <= 0.03`), then the company is classified as **insolvent** (prediction = 0).
   - If the company has **low equity relative to total liabilities**, but has **higher EBIT relative to total assets** (i.e., `EBIT/TA > 0.03`), it is classified as **solvent** (prediction = 1).
   - If the company has **high equity relative to total liabilities** (i.e., `Equity/TL > 0.50`), but **low net income relative to total capital** (i.e., `NI/TC <= 0.05`), it is classified as **insolvent** (prediction = 0).
   - If the company has **high equity relative to total liabilities** and **higher net income relative to total capital** (i.e., `NI/TC > 0.05`), it is classified as **solvent** (prediction = 1).

This function returns both the prediction and the list of node conditions.