Here's a decision tree for predicting whether a company is solvent (1 = solvent, 0 = insolvent) based on the Features provided:

```python
def predict(X: dict):
    nodes = 5 * [None]
    # Node 0: EBIT/TA <= 0.1
    nodes[0] = X["EBIT/TA"] <= 0.1
    # Node 1: NI/TC <= 0.05
    nodes[1] = X["NI/TC"] <= 0.05
    # Node 2: WC/TA <= 0.15
    nodes[2] = X["WC/TA"] <= 0.15
    # Node 3: Equity/TL > 0.5
    nodes[3] = X["Equity/TL"] > 0.5
    # Node 4: Sales/TA > 0.3
    nodes[4] = X["Sales/TA"] > 0.3

    if nodes[0]:
        if nodes[1]:
            if nodes[2]:
                if nodes[3]:
                    if nodes[4]:
                        prediction = 1  # Solvent
                    else:
                        prediction = 0  # Insolvent
                else:
                    prediction = 0  # Insolvent
            else:
                prediction = 1  # Solvent
        else:
            prediction = 1  # Solvent
    else:
        if nodes[2]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent

    return prediction, nodes
```

### Explanation:
1. **Node 0**: Checks if `EBIT/TA <= 0.1`. If true, the company might be at risk.
2. **Node 1**: Checks if `NI/TC <= 0.05`. If true, the company's net income relative to total capital is low, indicating potential risk.
3. **Node 2**: Checks if `WC/TA <= 0.15`. If true, the company's working capital relative to total assets is low, which may affect liquidity.
4. **Node 3**: Checks if `Equity/TL > 0.5`. If true, the company has more equity than liabilities, which is a good sign.
5. **Node 4**: Checks if `Sales/TA > 0.3`. If true, the company generates decent sales relative to its assets, which is positive.

The decision tree evaluates these conditions step by step to predict whether the company is solvent (1) or insolvent (0).
