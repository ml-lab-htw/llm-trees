Based on the Features and target variable provided (company is solvent), I will create a decision tree with a maximum depth of 2 (i.e., between 2 to 3 inner nodes). In this case, I will select the two most important financial ratios that are likely to have a significant impact on company solvency based on general financial principles:

- **EBIT/TA (Earnings Before Interest and Taxes / Total Assets)**: This ratio measures how efficiently a company is generating earnings from its assets. Companies with lower EBIT/TA ratios may be less solvent.
- **Equity/TL (Equity / Total Liabilities)**: This ratio measures the financial leverage of a company. A higher ratio indicates a stronger equity position relative to liabilities, suggesting greater solvency.

### Decision Tree Explanation:
1. The primary decision node will check if **EBIT/TA** is above a certain threshold, as this is a key indicator of profitability relative to assets.
2. The secondary decision node will check **Equity/TL**, which helps to determine the company's financial stability and solvency.

Now, let's define the decision tree in Python:

### Python Function:
```python
def predict(X: dict):
    nodes = 2 * [None]
    # First decision node: EBIT/TA <= 0.08
    nodes[0] = X["EBIT/TA"] <= 0.08
    
    # Second decision node: Equity/TL <= 0.5
    nodes[1] = X["Equity/TL"] <= 0.5
    
    # Decision tree logic
    if nodes[0]:
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent
    else:
        prediction = 1  # Solvent

    return prediction, nodes
```

### Explanation of Logic:
- **Node 1**: If **EBIT/TA** is less than or equal to 0.08, this indicates that the company may not be generating sufficient earnings relative to its assets, which is an indicator of potential insolvency. We then move to the next node.
- **Node 2**: If **Equity/TL** is less than or equal to 0.5, this suggests that the company's equity position is weak relative to its liabilities, leading to a prediction of insolvency (0). Otherwise, the company is predicted to be solvent (1).
- If **EBIT/TA** is greater than 0.08, the company is likely solvent (1), based on strong profitability relative to assets.

### Example Usage:
```python
# Example input for prediction
features = {
    "EBIT/TA": 0.05,
    "NI/TC": 0.12,
    "Sales/TA": 0.8,
    "EBIT/Sales": 0.15,
    "NI/Sales": 0.1,
    "WC/TA": 0.3,
    "Equity/TL": 0.4,
    "Equity/TA": 0.6
}

# Call the predict function with the input features
prediction, nodes = predict(features)
print(f"Prediction: {prediction}, Nodes: {nodes}")
```

This function will return a prediction of whether the company is solvent (`1`) or insolvent (`0`), along with the truth values for the inner nodes (`nodes` list).
