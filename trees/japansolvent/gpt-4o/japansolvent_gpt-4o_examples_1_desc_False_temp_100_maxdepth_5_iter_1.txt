Here's a decision tree for predicting if a company is solvent based on the provided features. The decision tree has a maximum depth of 5 and uses some of the most important features. 

```python
def predict(X: dict):
    nodes = 5 * [None]
    
    # Node 0: Check the ratio of Equity to Total Liabilities (Equity/TL)
    nodes[0] = X["Equity/TL"] > 0.5
    
    # If Equity/TL is greater than 0.5
    if nodes[0]:
        # Node 1: Check the Net Income to Sales ratio (NI/Sales)
        nodes[1] = X["NI/Sales"] > 0.1
        
        if nodes[1]:
            # Node 2: Check the Working Capital to Total Assets ratio (WC/TA)
            nodes[2] = X["WC/TA"] > 0.2
            
            if nodes[2]:
                # Node 3: Check the Earnings Before Interest and Taxes to Sales ratio (EBIT/Sales)
                nodes[3] = X["EBIT/Sales"] > 0.15
                
                if nodes[3]:
                    prediction = 1  # Solvent
                else:
                    prediction = 0  # Insolvent
            else:
                # Node 4: Check the ratio of Net Income to Total Capital (NI/TC)
                nodes[4] = X["NI/TC"] > 0.05
                
                if nodes[4]:
                    prediction = 1  # Solvent
                else:
                    prediction = 0  # Insolvent
        else:
            prediction = 0  # Insolvent
    # If Equity/TL is less than or equal to 0.5
    else:
        # Node 1: Check the Earnings Before Interest and Taxes to Total Assets ratio (EBIT/TA)
        nodes[1] = X["EBIT/TA"] > 0.08
        
        if nodes[1]:
            # Node 2: Check the Sales to Total Assets ratio (Sales/TA)
            nodes[2] = X["Sales/TA"] > 0.4
            
            if nodes[2]:
                prediction = 1  # Solvent
            else:
                prediction = 0  # Insolvent
        else:
            prediction = 0  # Insolvent

    return prediction, nodes
```

### Explanation of the Decision Tree:
1. **Node 0** checks if the company's "Equity to Total Liabilities" (Equity/TL) is greater than 0.5. This is a strong indicator of solvency, as higher equity relative to liabilities is typically a sign of financial health.
   
2. If the company passes the first test (Equity/TL > 0.5), **Node 1** checks if the "Net Income to Sales" (NI/Sales) ratio is greater than 0.1, which indicates whether the company is profitable relative to its sales.

3. **Node 2** checks the "Working Capital to Total Assets" (WC/TA) ratio, which measures short-term liquidity. If this is greater than 0.2, it signifies strong liquidity.

4. **Node 3** checks the "EBIT to Sales" (EBIT/Sales) ratio. A value greater than 0.15 typically indicates the company is earning a reasonable amount of profit from its operations.

5. **Node 4** is a fallback check if the company doesn't meet the liquidity threshold in Node 2 but still has a healthy "Net Income to Total Capital" (NI/TC) ratio.

If the company fails the first test on Equity/TL, it evaluates the company's operational efficiency and profitability using EBIT/TA and Sales/TA.

### Example Usage:
```python
company_data = {
    "EBIT/TA": 0.12,
    "NI/TC": 0.07,
    "Sales/TA": 0.45,
    "EBIT/Sales": 0.18,
    "NI/Sales": 0.12,
    "WC/TA": 0.25,
    "Equity/TL": 0.6,
    "Equity/TA": 0.55
}

prediction, nodes = predict(company_data)
print(f"Prediction: {'Solvent' if prediction == 1 else 'Insolvent'}")
print(f"Node Truth Values: {nodes}")
```

This function will return whether the company is solvent or insolvent based on the decision tree rules outlined.