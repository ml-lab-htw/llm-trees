


```python
def predict(X: dict):
    # Initialize a list to store the truth values of the inner nodes
    nodes = 7 * [None]
    
    # Node 0: Check if Equity/TL <= 1.0 (leverage ratio)
    nodes[0] = X["Equity/TL"] <= 1.0
    
    if nodes[0]:  # If Equity/TL <= 1.0
        # Node 1: Check if WC/TA <= 0.05 (working capital/total assets)
        nodes[1] = X["WC/TA"] <= 0.05
        
        if nodes[1]:  # If WC/TA <= 0.05
            # Node 2: Check if NI/Sales <= 0.01 (net income/sales, very low profitability)
            nodes[2] = X["NI/Sales"] <= 0.01
            
            if nodes[2]:  # If NI/Sales <= 0.01, the company is not solvent
                prediction = 0
            else:  # If NI/Sales > 0.01, the company is solvent
                prediction = 1
        else:  # If WC/TA > 0.05
            # Node 3: Check if EBIT/TA <= 0.02 (operating profitability)
            nodes[3] = X["EBIT/TA"] <= 0.02
            
            if nodes[3]:  # If EBIT/TA <= 0.02, the company is not solvent
                prediction = 0
            else:  # If EBIT/TA > 0.02, the company is solvent
                prediction = 1
    else:  # If Equity/TL > 1.0
        # Node 4: Check if EBIT/Sales <= 0.10 (operating margin, low profitability)
        nodes[4] = X["EBIT/Sales"] <= 0.10
        
        if nodes[4]:  # If EBIT/Sales <= 0.10
            # Node 5: Check if Sales/TA <= 0.5 (asset utilization)
            nodes[5] = X["Sales/TA"] <= 0.5
            
            if nodes[5]:  # If Sales/TA <= 0.5, the company is not solvent
                prediction = 0
            else:  # If Sales/TA > 0.5, the company is solvent
                prediction = 1
        else:  # If EBIT/Sales > 0.10, the company is solvent
            prediction = 1
    
    # Return the prediction and the list of node truth values
    return prediction, nodes
```


### Explanation:

- **Nodes**: Each node contains a condition based on the provided financial ratios. The node list stores whether each condition is satisfied (True or False).
- **Conditions**:
  - **Node 0** checks the company's leverage ratio (**Equity/TL**). If it is less than or equal to 1.0, the company has a high level of debt relative to equity, which could be a red flag for solvency.
  - **Node 1** checks short-term liquidity via **WC/TA** (Working Capital/Total Assets). A very low value suggests liquidity issues.
  - **Node 2** checks **NI/Sales** (Net Income/Sales), which indicates how profitable the company is on the bottom line. A value less than or equal to 0.01 suggests very low profitability.
  - **Node 3** looks at **EBIT/TA** (Operating Profit/Total Assets), which measures operating profitability. Low values suggest poor operational performance.
  - **Node 4** checks **EBIT/Sales** (Operating Profit Margin). A low value here (<= 0.10) can indicate weak profitability from operations.
  - **Node 5** checks **Sales/TA** (Sales/Total Assets), which measures asset utilization. A value less than or equal to 0.5 suggests poor efficiency in utilizing assets to generate revenue.

The function returns two values:
- **Prediction**: `1` indicates the company is solvent, and `0` indicates the company is not solvent.
- **Nodes**: A list of boolean values representing whether each condition in the decision tree was satisfied or not.