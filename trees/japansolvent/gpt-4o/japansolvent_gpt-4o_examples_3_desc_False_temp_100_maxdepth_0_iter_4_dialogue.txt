


Here's the Python function based on your decision tree for determining whether a company is solvent or insolvent using the given financial ratios:

```python
def predict(X: dict):
    # Initializing the list to store truth values of the inner nodes
    nodes = [None] * 4
    
    # Decision tree conditions
    nodes[0] = X["EBIT/TA"] <= 0.15
    nodes[1] = X["WC/TA"] <= 0.05
    nodes[2] = X["NI/TC"] <= 0.10
    nodes[3] = X["Equity/TL"] <= 0.50

    # Initial prediction
    prediction = None

    # Following the decision tree path to determine the prediction
    if nodes[0]:
        if nodes[1]:
            prediction = 0  # insolvent
        else:
            prediction = 1  # solvent
    else:
        if nodes[2]:
            prediction = 0  # insolvent
        else:
            if nodes[3]:
                prediction = 0  # insolvent
            else:
                prediction = 1  # solvent
    
    return prediction, nodes

# Example usage
example_features = {
    'EBIT/TA': 0.12,
    'NI/TC': 0.08,
    'Sales/TA': 1.0,
    'EBIT/Sales': 0.20,
    'NI/Sales': 0.05,
    'WC/TA': 0.04,
    'Equity/TL': 0.55,
    'Equity/TA': 0.45
}

# Predict and get the list of node conditions
prediction, node_conditions = predict(example_features)
print("Prediction:", "Solvent" if prediction == 1 else "Insolvent")
print("Node conditions:", node_conditions)
```

Explanation of the function:
1. **nodes**: A list to keep track of whether each condition in the decision tree is satisfied.
2. **nodes[0]**: Checks if "EBIT/TA" is less than or equal to 0.15.
3. **nodes[1]**: Checks if "WC/TA" is less than or equal to 0.05.
4. **nodes[2]**: Checks if "NI/TC" is less than or equal to 0.10.
5. **nodes[3]**: Checks if "Equity/TL" is less than or equal to 0.50.

The function follows the decision tree logic:
- If the "EBIT/TA" condition is met, it further checks "WC/TA" to make the final decision.
- If "EBIT/TA" is not met, it checks "NI/TC" and further down the tree, "Equity/TL".

The function returns the prediction (1 for solvent, 0 for insolvent) and a list of boolean values indicating the truth values of the decision nodes.