


Sure! Based on your provided features and instructions, here's the decision tree formatted as a Python function:

```python
def predict(X: dict):
    nodes = [None] * 4
    nodes[0] = X['Equity/TL'] <= 1.0
    nodes[1] = X['WC/TA'] <= 0.1
    nodes[2] = X['EBIT/TA'] <= 0.05
    nodes[3] = X['Sales/TA'] <= 0.5

    if nodes[0]:  # Equity/TL <= 1.0
        if nodes[1]:  # WC/TA <= 0.1
            if nodes[2]:  # EBIT/TA <= 0.05
                if nodes[3]:  # Sales/TA <= 0.5
                    prediction = 0  # Not Solvent
                else:  # Sales/TA > 0.5
                    prediction = 1  # Solvent
            else:  # EBIT/TA > 0.05
                prediction = 1  # Solvent
        else:  # WC/TA > 0.1
            prediction = 1  # Solvent
    else:  # Equity/TL > 1.0
        prediction = 1  # Solvent

    return prediction, nodes
```

**Explanation:**

- **Node 0:** Checks if `Equity/TL` is less than or equal to 1.0.
- **Node 1:** If Node 0 is `True`, checks if `WC/TA` is less than or equal to 0.1.
- **Node 2:** If Node 1 is `True`, checks if `EBIT/TA` is less than or equal to 0.05.
- **Node 3:** If Node 2 is `True`, checks if `Sales/TA` is less than or equal to 0.5.

**Decision Rules:**

- If all conditions up to Node 3 are satisfied (`Equity/TL` ≤ 1.0, `WC/TA` ≤ 0.1, `EBIT/TA` ≤ 0.05, `Sales/TA` ≤ 0.5), the company is predicted to be **Insolvent** (`0`).
- In all other cases, the company is predicted to be **Solvent** (`1`).

**Usage Example:**

```python
# Example input data
X_example = {
    'EBIT/TA': 0.04,
    'NI/TC': 0.02,
    'Sales/TA': 0.4,
    'EBIT/Sales': 0.1,
    'NI/Sales': 0.05,
    'WC/TA': 0.08,
    'Equity/TL': 0.9,
    'Equity/TA': 0.5
}

prediction, nodes = predict(X_example)
print(f"Prediction: {'Solvent' if prediction == 1 else 'Insolvent'}")
print(f"Node values: {nodes}")
```

**Output:**

```
Prediction: Insolvent
Node values: [True, True, True, True]
```

**Note:** Ensure that the input dictionary `X` contains all the required features with keys spelled exactly as specified:
```python
['EBIT/TA', 'NI/TC', 'Sales/TA', 'EBIT/Sales', 'NI/Sales', 'WC/TA', 'Equity/TL', 'Equity/TA']
```

Feel free to adjust the threshold values if you have specific data insights or if more meaningful values are provided from your dataset.