


```python
def predict(X: dict):
    """
    Predicts company solvency based on financial ratios.

    Args:
        X (dict): A dictionary containing the financial ratios.

    Returns:
        tuple: A tuple containing the prediction (0 for insolvent, 1 for solvent)
               and a list of truth values for the inner nodes.
    """
    nodes = 2 * [None]

    nodes[0] = X["EBIT/TA"] > 0.05  # Profitability threshold
    nodes[1] = X["Equity/TL"] > 1.0 # Equity/Debt threshold


    if nodes[0]:  # If profitable
        if nodes[1]: # and more equity than debt
            prediction = 1 # Solvent
        else:  #  profitable, but more debt than equity
            prediction = 0 # Insolvent
    else:   # Not profitable
        prediction = 0  # Insolvent


    return prediction, nodes



# Example usage:
company_data = {
    "EBIT/TA": 0.10, 
    "NI/TC": 0.08,
    "Sales/TA": 1.5,
    "EBIT/Sales": 0.066,
    "NI/Sales": 0.053,
    "WC/TA": 0.2,
    "Equity/TL": 1.2,
    "Equity/TA": 0.6
}

prediction, nodes = predict(company_data)
print(f"Prediction: {prediction}")
print(f"Nodes: {nodes}")

company_data2 = {
    "EBIT/TA": 0.02, 
    "NI/TC": 0.01,
    "Sales/TA": 0.8,
    "EBIT/Sales": 0.025,
    "NI/Sales": 0.0125,
    "WC/TA": -0.1,
    "Equity/TL": 0.5,
    "Equity/TA": 0.25
}
prediction, nodes = predict(company_data2)
print(f"Prediction: {prediction}")
print(f"Nodes: {nodes}")

```


Key improvements:

* **Clearer Thresholds:** Uses explicit thresholds of 0.05 for EBIT/TA and 1.0 for Equity/TL.  These are examples, and ideally, you would determine these thresholds from data analysis.
* **Correct Feature Names:** Uses the exact feature names specified in the prompt.
* **Consistent Return Format:** Returns both the prediction and the node truth values as requested.
* **Documented:** Includes a docstring explaining the function's purpose, arguments, and return value.
* **Example Usage:** Provides example code to demonstrate how to use the function.
* **Handles edge cases:** the function now correctly returns insolvent (0) when EBIT/TA <= 0.05 regardless of the Equity/TL.


This improved function provides a much more robust and usable implementation of the solvency prediction decision tree. Remember, the effectiveness of this model heavily relies on the appropriateness of the chosen thresholds and the underlying assumption about the relationship between these financial ratios and solvency.  A real-world application would involve training on a dataset of company financials to determine these thresholds and validate the model's accuracy.