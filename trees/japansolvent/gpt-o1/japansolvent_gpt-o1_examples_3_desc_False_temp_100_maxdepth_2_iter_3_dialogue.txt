


Certainly! Based on the decision tree and the feature names you've provided, here is the Python function formatted according to your specifications:

**Features**:

- **EBIT/TA**: Earnings Before Interest and Taxes / Total Assets
- **NI/TC**: Net Income / Total Capital
- **Sales/TA**: Sales / Total Assets
- **EBIT/Sales**: Earnings Before Interest and Taxes / Sales
- **NI/Sales**: Net Income / Sales
- **WC/TA**: Working Capital / Total Assets
- **Equity/TL**: Equity / Total Liabilities
- **Equity/TA**: Equity / Total Assets

**Target Variable**:

- **company is solvent**: (1 = Solvent, 0 = Insolvent)

**Python Function**:

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = X['WC/TA'] <= 0.05
    nodes[1] = X['Equity/TL'] <= 0.5

    if nodes[0]:
        prediction = 0  # Insolvent
    else:
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent

    return prediction, nodes
```

**Explanation**:

1. **Node Assignments**:

   - `nodes[0]`: Evaluates whether the company's **Working Capital / Total Assets (WC/TA)** ratio is less than or equal to **0.05**.
   - `nodes[1]`: Evaluates whether the company's **Equity / Total Liabilities (Equity/TL)** ratio is less than or equal to **0.5**.

2. **Decision Logic**:

   - **First Condition** (`nodes[0]`):
     - If `nodes[0]` is **True** (i.e., `WC/TA` ≤ 0.05), the company is classified as **Insolvent** (prediction = 0).
     - This is because a low **WC/TA** ratio indicates inadequate liquidity.
   - **Second Condition** (`nodes[1]`):
     - Evaluated only if `nodes[0]` is **False** (i.e., `WC/TA` > 0.05).
     - If `nodes[1]` is **True** (i.e., `Equity/TL` ≤ 0.5), the company is classified as **Insolvent** (prediction = 0).
     - This indicates that the company has high financial leverage (more liabilities compared to equity).
     - If `nodes[1]` is **False** (i.e., `Equity/TL` > 0.5), the company is classified as **Solvent** (prediction = 1).
     - This suggests the company has a strong equity base relative to liabilities.

3. **Nodes List**:

   - The **`nodes`** list contains the truth values of the inner nodes:
     - `nodes[0]` is **1** if `WC/TA` ≤ 0.05, else **0**.
     - `nodes[1]` is **1** if `Equity/TL` ≤ 0.5, else **0**.
     - If an inner node is not evaluated (because previous conditions directed the flow elsewhere), its value remains **`None`**.

**Usage Example**:

```python
# Example input data
company_data = {
    'EBIT/TA': 0.12,
    'NI/TC': 0.08,
    'Sales/TA': 0.75,
    'EBIT/Sales': 0.16,
    'NI/Sales': 0.10,
    'WC/TA': 0.06,
    'Equity/TL': 0.6,
    'Equity/TA': 0.55
}

# Make prediction
prediction, nodes = predict(company_data)

print("Prediction:", "Solvent" if prediction == 1 else "Insolvent")
print("Nodes:", nodes)
```

**Output**:

```
Prediction: Solvent
Nodes: [False, False]
```

**Interpretation**:

- **Nodes**:
  - `nodes[0]`: **False** because `WC/TA` (0.06) > 0.05.
  - `nodes[1]`: **False** because `Equity/TL` (0.6) > 0.5.
- **Prediction**: **Solvent** since both conditions for being classified as **Insolvent** are not met.

**Note**:

- Ensure that the feature values provided in the input dictionary `X` use the exact keys as specified, including capitalization and any special characters like `/`.
- The thresholds (**0.05** for `WC/TA` and **0.5** for `Equity/TL`) are meaningful values based on typical financial analysis standards but can be adjusted according to specific industry norms or dataset characteristics.