


Here's the decision tree formatted as a Python function that returns a single prediction as well as a list representing the truth values of the inner nodes. The entries of the list are `1` if the condition of the corresponding inner node is satisfied, and `0` otherwise.

```python
def predict(X: dict):
    nodes = [None] * 1  # Initialize list for inner node truth values
    nodes[0] = X["Equity/TL"] <= 1.0  # Inner node condition

    if nodes[0]:
        prediction = 0  # Insolvent
    else:
        prediction = 1  # Solvent

    # Convert Boolean values to integers (1 for True, 0 for False)
    nodes = [int(node) for node in nodes]
    return prediction, nodes
```

**Explanation:**

- **Feature Used:** `"Equity/TL"` (Equity/Total Liabilities)
- **Threshold:** `1.0`
- **Decision Logic:**
  - If `Equity/TL` is **less than or equal to** `1.0`, the company is classified as **Insolvent** (`0`).
  - If `Equity/TL` is **greater than** `1.0`, the company is classified as **Solvent** (`1`).

**Usage Example:**

```python
# Example input data
X_example = {
    'EBIT/TA': 0.15,
    'NI/TC': 0.08,
    'Sales/TA': 1.2,
    'EBIT/Sales': 0.125,
    'NI/Sales': 0.066,
    'WC/TA': 0.22,
    'Equity/TL': 0.9,  # Equity is less than total liabilities
    'Equity/TA': 0.47
}

# Make prediction
prediction, nodes = predict(X_example)
print(f"Prediction: {prediction}")  # Output: Prediction: 0 (Insolvent)
print(f"Nodes: {nodes}")            # Output: Nodes: [1]
```

**Notes:**

- The function assumes that the input `X` is a dictionary containing all the required features with keys matching exactly: `['EBIT/TA', 'NI/TC', 'Sales/TA', 'EBIT/Sales', 'NI/Sales', 'WC/TA', 'Equity/TL', 'Equity/TA']`.
- The `nodes` list contains the truth value of the condition at the inner node:
  - `1` if the condition `X["Equity/TL"] <= 1.0` is **True**.
  - `0` if the condition is **False**.
- The prediction is `0` for **Insolvent** and `1` for **Solvent**, as per the target variable encoding.

**Feature Description:**

- **EBIT/TA:** Earnings Before Interest and Taxes divided by Total Assets.
- **NI/TC:** Net Income divided by Total Capital.
- **Sales/TA:** Sales divided by Total Assets.
- **EBIT/Sales:** Earnings Before Interest and Taxes divided by Sales.
- **NI/Sales:** Net Income divided by Sales.
- **WC/TA:** Working Capital divided by Total Assets.
- **Equity/TL:** Equity divided by Total Liabilities.
- **Equity/TA:** Equity divided by Total Assets.

**Target Variable:**

- **company is solvent:** Indicates whether the company is solvent.
  - `1` = Solvent
  - `0` = Insolvent