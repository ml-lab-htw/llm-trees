


Sure, here's the decision tree formatted as a Python function based on your specifications:

**Features and Their Exact Keys**:

- `'EBIT/TA'`: Earnings Before Interest and Taxes / Total Assets
- `'NI/TC'`: Net Income / Total Capital
- `'Sales/TA'`: Sales / Total Assets
- `'EBIT/Sales'`: Earnings Before Interest and Taxes / Sales
- `'NI/Sales'`: Net Income / Sales
- `'WC/TA'`: Working Capital / Total Assets
- `'Equity/TL'`: Equity / Total Liabilities
- `'Equity/TA'`: Equity / Total Assets

**Target Variable**:

- `company is solvent` (1 = solvent, 0 = insolvent)

**Python Function**:

```python
def predict(X: dict):
    nodes = 2 * [None]
    nodes[0] = 1 if X['WC/TA'] <= 0.20 else 0
    nodes[1] = 1 if X['Equity/TL'] <= 0.50 else 0

    if nodes[0]:
        prediction = 0  # Insolvent
    else:
        if nodes[1]:
            prediction = 0  # Insolvent
        else:
            prediction = 1  # Solvent

    return prediction, nodes
```

This function follows the structure of the decision tree with a maximum depth of 2. It uses the two most important features, `'WC/TA'` and `'Equity/TL'`, and thresholds of `0.20` and `0.50` respectively to classify whether a company is solvent.

- **`nodes[0]`** corresponds to the condition `X['WC/TA'] <= 0.20`.
  - If this condition is **True** (`1`), the company is predicted to be **Insolvent** (`0`).
- If `nodes[0]` is **False** (`0`), we proceed to check **`nodes[1]`**.
  - **`nodes[1]`** corresponds to the condition `X['Equity/TL'] <= 0.50`.
    - If this condition is **True** (`1`), the company is predicted to be **Insolvent** (`0`).
    - If **False** (`0`), the company is predicted to be **Solvent** (`1`).

**Note**:

- The `nodes` list contains the truth values of the inner nodes:
  - `1` if the condition is satisfied.
  - `0` otherwise.
- The function returns:
  - `prediction`: `1` if the company is solvent, `0` if insolvent.
  - `nodes`: List of truth values for the inner nodes.

**Usage Example**:

```python
# Example input data
X = {
    'EBIT/TA': 0.15,
    'NI/TC': 0.10,
    'Sales/TA': 0.70,
    'EBIT/Sales': 0.20,
    'NI/Sales': 0.15,
    'WC/TA': 0.25,
    'Equity/TL': 0.60,
    'Equity/TA': 0.35
}

prediction, nodes = predict(X)
print(f"Prediction: {'Solvent' if prediction == 1 else 'Insolvent'}")
print(f"Nodes: {nodes}")
```

**Output**:

```
Prediction: Solvent
Nodes: [0, 0]
```

This indicates that the company is predicted to be **Solvent**, with both conditions evaluated as **False** (`0`).