


Given the provided specifications, here is a Python function that implements a simplified decision tree based on the voting features. This function accepts a dictionary of features, predicts the party affiliation, and returns the prediction along with a list of truth values for the inner nodes.

### Python Function:

```python
def predict_voting(X: dict):
    nodes = 4 * [None]
    nodes[0] = X["physician fee freeze"] == 1
    nodes[1] = X["water project cost sharing"] == 2
    nodes[2] = X["education spending"] == 2
    nodes[3] = X["handicapped infants"] == 2

    if nodes[0]:  # "physician fee freeze" == no
        if nodes[1]:  # "water project cost sharing" == yes
            prediction = 1  # Republican
        else:  # "water project cost sharing" == no
            prediction = 0  # Democrat
    else:  # "physician fee freeze" == yes
        if nodes[2]:  # "education spending" == yes
            prediction = 0  # Democrat
        else:  # "education spending" == no
            if nodes[3]:  # "handicapped infants" == yes
                prediction = 0  # Democrat
            else:  # "handicapped infants" == no
                prediction = 1  # Republican

    return prediction, nodes

# Example usage:
features = {
    'handicapped infants': 2,
    'water project cost sharing': 1,
    'adoption of the budget resolution': 1,
    'physician fee freeze': 2,
    'el salvador aid': 1,
    'religious groups in schools': 1,
    'anti satellite test ban': 2,
    'aid to nicaraguan contras': 2,
    'mx missile': 1,
    'immigration': 2,
    'synfuels corporation cutback': 1,
    'education spending': 1,
    'superfund right to sue': 2,
    'crime': 1,
    'duty free exports': 1,
    'export administration act south africa': 2
}

prediction, nodes = predict_voting(features)
print(f"Prediction: {'Republican' if prediction == 1 else 'Democrat'}")
print(f"Nodes: {nodes}")
```

### Explanation:

1. **nodes[0]:** Checks if the "physician fee freeze" vote is 'no' (1). If yes, it leans towards Republican; otherwise, Democratic.
   
2. **nodes[1]:** Checks if the "water project cost sharing" vote is 'yes' (2). Further helps classify Republicans if this condition is true.
   
3. **nodes[2]:** Checks if the "education spending" vote is 'yes' (2). Democrats tend to favor more spending on education.

4. **nodes[3]:** Checks if the "handicapped infants" vote is 'yes' (2). Democrats usually support this issue.

The tree logic is split based on these nodes, mapping the features to the likely party affiliation. The predictions and the truth values of nodes help understand the decision pathway taken.

