


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First split: Vote on physician fee freeze (2 = yes, 1 = no)
    nodes[0] = X["physician fee freeze"] == 1
    
    # If the vote on physician fee freeze is "no" (1), predict Democrat (0)
    if nodes[0]:
        prediction = 0
    else:
        # Second split: Vote on aid to El Salvador (2 = yes, 1 = no)
        nodes[1] = X["el salvador aid"] == 2
        
        # If the vote on aid to El Salvador is "yes" (2), predict Republican (1)
        if nodes[1]:
            prediction = 1
        else:
            # If the vote on aid to El Salvador is "no" (1), predict Democrat (0)
            prediction = 0

    return prediction, nodes
```

### Explanation:
1. **nodes[0]**: This node checks whether the vote on the **physician fee freeze** is "no" (1). If it is, we predict the representative is a **Democrat** (`prediction = 0`).
2. If the vote on **physician fee freeze** is "yes" (2), we move to the next node.
3. **nodes[1]**: This node checks whether the vote on **aid to El Salvador** is "yes" (2). If it is, we predict the representative is a **Republican** (`prediction = 1`).
4. If the vote on **aid to El Salvador** is "no" (1), we predict the representative is a **Democrat** (`prediction = 0`).

The function returns both the predicted party affiliation and a list of truth values corresponding to the inner nodes' conditions.