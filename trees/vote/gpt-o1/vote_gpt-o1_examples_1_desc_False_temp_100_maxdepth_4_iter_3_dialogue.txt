


```python
def predict(X: dict):
    nodes = [None] * 3  # Since the tree has 3 decision nodes
    nodes[0] = 1 if X['physician fee freeze'] == 2 else 0  # Yes = 2, No = 1
    nodes[1] = 1 if X['superfund right to sue'] == 2 else 0  # Yes = 2, No = 1
    nodes[2] = 1 if X['adoption of the budget resolution'] == 2 else 0  # Yes = 2, No = 1

    if nodes[0]:  # If voted 'Yes' on physician fee freeze
        prediction = 1  # Republican
    else:
        if nodes[1]:  # If voted 'Yes' on superfund right to sue
            prediction = 0  # Democrat
        else:
            if nodes[2]:  # If voted 'Yes' on adoption of the budget resolution
                prediction = 1  # Republican
            else:
                prediction = 0  # Democrat
    return prediction, nodes
```

**Explanation:**

This function predicts the party affiliation based on the votes on specific issues. It also returns a list `nodes` representing the truth values of the inner nodes (1 if the condition is satisfied, 0 otherwise).

- **Features Used:**
  - `'physician fee freeze'`
  - `'superfund right to sue'`
  - `'adoption of the budget resolution'`

- **Encoding:**
  - Vote values are encoded as `2` for 'Yes' and `1` for 'No'.
  - Party affiliation is encoded as `1` for Republican and `0` for Democrat.

- **Decision Logic:**
  1. **Node 0:** Check if the vote on `'physician fee freeze'` is 'Yes'.
     - If **Yes** (`nodes[0] == 1`), predict **Republican** (`prediction = 1`).
     - If **No** (`nodes[0] == 0`), proceed to Node 1.
  2. **Node 1:** Check if the vote on `'superfund right to sue'` is 'Yes'.
     - If **Yes** (`nodes[1] == 1`), predict **Democrat** (`prediction = 0`).
     - If **No** (`nodes[1] == 0`), proceed to Node 2.
  3. **Node 2:** Check if the vote on `'adoption of the budget resolution'` is 'Yes'.
     - If **Yes** (`nodes[2] == 1`), predict **Republican** (`prediction = 1`).
     - If **No** (`nodes[2] == 0`), predict **Democrat** (`prediction = 0`).

**Example Usage:**

```python
# Example input vector
X_example = {
    'handicapped infants': 2,
    'water project cost sharing': 1,
    'adoption of the budget resolution': 2,
    'physician fee freeze': 1,
    'el salvador aid': 2,
    'religious groups in schools': 1,
    'anti satellite test ban': 1,
    'aid to nicaraguan contras': 2,
    'mx missile': 1,
    'immigration': 2,
    'synfuels corporation cutback': 1,
    'education spending': 2,
    'superfund right to sue': 1,
    'crime': 2,
    'duty free exports': 1,
    'export administration act south africa': 2
}

# Get prediction and node truth values
prediction, nodes = predict(X_example)

print(f"Prediction (Party Affiliation): {'Republican' if prediction == 1 else 'Democrat'}")
print(f"Node Truth Values: {nodes}")
```

**Output:**

```
Prediction (Party Affiliation): Republican
Node Truth Values: [0, 0, 1]
```

In this example, the individual voted 'No' on `'physician fee freeze'` (`nodes[0] = 0`) and 'No' on `'superfund right to sue'` (`nodes[1] = 0`), but 'Yes' on `'adoption of the budget resolution'` (`nodes[2] = 1`), leading to a prediction of **Republican**.