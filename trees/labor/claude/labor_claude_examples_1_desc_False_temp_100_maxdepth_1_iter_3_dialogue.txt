


Based on the labor negotiations features and target variable, I'll create a prediction function using the decision tree I proposed earlier with "wage increase first year" as the splitting feature.

```python
def predict(X: dict):
    nodes = 1 * [None]
    nodes[0] = X["wage increase first year"] <= 4.0
    
    if nodes[0]:
        prediction = 0  # bad outcome
    else:
        prediction = 1  # good outcome
        
    return prediction, nodes
```

This function:
1. Takes a dictionary X containing the feature values as input
2. Creates a list 'nodes' of length 1 (since the tree has depth 1)
3. Evaluates if the wage increase in the first year is <= 4.0 and stores this boolean result in nodes[0]
4. Returns:
   - prediction: 0 (bad) if wage increase <= 4.0, 1 (good) if wage increase > 4.0
   - nodes: list containing the truth value of the single decision node

The threshold of 4.0 is chosen because:
- The feature range is 2.0 to 7.0
- 4.0 represents a moderate wage increase
- Values below this suggest a less favorable agreement
- Values above this suggest a more favorable agreement