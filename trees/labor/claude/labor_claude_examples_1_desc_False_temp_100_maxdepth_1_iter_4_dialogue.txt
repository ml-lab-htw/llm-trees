


Based on the labor negotiations dataset, I'll create a prediction function with a decision tree of depth 1 using the wage increase in first year as the key feature:

```python
def predict(X: dict):
    nodes = 1 * [None]
    nodes[0] = X["wage increase first year"] <= 4.5
    
    if nodes[0]:
        prediction = 0  # bad outcome
    else:
        prediction = 1  # good outcome
    
    return prediction, nodes
```

This function:
1. Takes a dictionary X containing the feature values
2. Creates a list 'nodes' to store the boolean result of the decision condition
3. Evaluates if the wage increase in first year is <= 4.5
4. Returns:
   - prediction: 0 (bad outcome) if wage increase <= 4.5, 1 (good outcome) otherwise
   - nodes: list containing the boolean result of the condition

The threshold of 4.5 was chosen because:
- The feature range is 2.0 to 7.0
- 4.5 represents a moderate wage increase that could reasonably distinguish between good and bad outcomes
- It's approximately the midpoint of the range, which is often a reasonable starting point for binary classification

This simple tree suggests that negotiations with first-year wage increases above 4.5% are more likely to result in good outcomes, while those below or equal to 4.5% are more likely to result in bad outcomes.