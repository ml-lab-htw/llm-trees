


Based on the labor negotiations features and target variable, I'll create a prediction function with a decision tree of depth 1, using 'wage increase first year' as the key deciding feature:

```python
def predict(X: dict):
    nodes = 1 * [None]
    nodes[0] = X["wage increase first year"] <= 4.5
    
    if nodes[0]:
        prediction = 0  # bad outcome
    else:
        prediction = 1  # good outcome
        
    return prediction, nodes
```

This function:
1. Takes a dictionary X containing feature values
2. Creates a list 'nodes' with one element (since depth=1)
3. Checks if the wage increase in the first year is <= 4.5
4. Returns:
   - prediction: 0 (bad) if wage increase â‰¤ 4.5, 1 (good) if wage increase > 4.5
   - nodes: list containing the boolean result of the condition

The threshold of 4.5 was chosen because:
- The feature range is 2.0 to 7.0
- 4.5 represents a moderate wage increase that could reasonably differentiate between satisfactory and unsatisfactory negotiations
- It's approximately the midpoint of the possible range