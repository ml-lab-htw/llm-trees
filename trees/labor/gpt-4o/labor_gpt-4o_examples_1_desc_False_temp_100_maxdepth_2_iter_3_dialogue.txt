


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First decision: Check wage increase in the first year of the contract
    nodes[0] = X["wage increase first year"] <= 4.0
    
    if nodes[0]:
        # Second decision: Check employer's contribution to the health plan
        nodes[1] = X["contribution to health plan"] == 0
        
        if nodes[1]:
            prediction = 0  # Bad outcome
        else:
            prediction = 1  # Good outcome
    else:
        prediction = 1  # Good outcome

    return prediction, nodes
```

### Explanation:
1. **First decision**: The root node checks whether the **wage increase in the first year of the contract** is less than or equal to 4.0. If true, we proceed to the next condition. If false, we directly classify the outcome as *good* (`1`), assuming a larger wage increase is a strong indicator of a favorable outcome.

2. **Second decision**: If the wage increase is less than or equal to 4.0, we then check the **employer's contribution to the health plan**. If the contribution is "none", we classify the outcome as *bad* (`0`). Otherwise, if the employer contributes partially or fully, the outcome is classified as *good* (`1`).

This function returns both the final prediction (`0` for bad outcome, `1` for good outcome) and a list (`nodes`) that records the truth values for each decision node.
