


Based on the provided features and the example decision tree logic, below is a Python function to predict whether a labor negotiation outcome is "good" or "bad" while also returning a list of truth values that indicates whether each condition in the decision tree is satisfied.

```python
def predict(X: dict):
    nodes = 3 * [None]
    
    # Decision tree logic
    nodes[0] = X["wage increase first year"] <= 4
    nodes[1] = X["cost of living adjustment"] == "none"
    nodes[2] = X["statutory holidays"] <= 10

    if nodes[0]:
        prediction = 0  # bad
    else:
        if nodes[1]:
            prediction = 0  # bad
        else:
            if nodes[2]:
                prediction = 0  # bad
            else:
                prediction = 1  # good

    return prediction, nodes

# Example usage
features = {
    "duration": 5,
    "wage increase first year": 3.0,
    "wage increase second year": 5.0,
    "wage increase third year": 4.5,
    "cost of living adjustment": "none",
    "working hours": 38,
    "pension": "empl_contr",
    "standby pay": 10,
    "shift differential": 15,
    "education allowance": True,
    "statutory holidays": 12,
    "vacation": "avg",
    "longterm disability assistance": True,
    "contribution to dental plan": "half",
    "bereavement assistance": False,
    "contribution to health plan": "full"
}

prediction, nodes = predict(features)
print(f"Prediction: {'good' if prediction == 1 else 'bad'}")
print(f"Truth Values: {nodes}")
```

### Explanation:
1. **nodes[0]**: This node checks whether the wage increase in the first year is less than or equal to 4. If this condition is true, it suggests a less favorable contract.
2. **nodes[1]**: This node checks whether there is no cost of living adjustment. The absence of this adjustment is typically viewed as a negative aspect of a labor contract.
3. **nodes[2]**: This node checks whether the number of statutory holidays is less than or equal to 10. A lower number of holidays can be perceived as less favorable by employees.

### Example Usage:
The `features` dictionary contains example data. When you call the `predict` function with this data, it will return the predicted outcome and the list of satisfaction values for the internal nodes.

In the example, the prediction and the truth values based on the example input features are printed.