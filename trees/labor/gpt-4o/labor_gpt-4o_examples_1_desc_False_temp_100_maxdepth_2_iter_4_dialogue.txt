


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First split: Wage increase in first year of contract
    nodes[0] = X["wage increase first year"] <= 4.0
    
    # Second split: Employer's contribution towards the health plan
    if nodes[0]:
        nodes[1] = X["contribution to health plan"] == 0
        if nodes[1]:
            prediction = 0  # bad outcome
        else:
            prediction = 1  # good outcome
    else:
        prediction = 1  # good outcome
    
    return prediction, nodes
```

### Explanation:
- **nodes[0]** checks if the "wage increase in the first year" is less than or equal to 4.0. This is the first decision point.
- If the wage increase is <= 4.0, we proceed to **nodes[1]**, which checks if the "contribution to health plan" is "none". If so, the prediction is `bad` (0), otherwise it is `good` (1).
- If the wage increase is greater than 4.0, the outcome is directly classified as `good` (1).

This function returns both the prediction (whether the outcome is good or bad) and the list of truth values for the inner nodes (`nodes`).
