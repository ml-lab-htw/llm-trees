


Certainly! Below is a Python function that implements the specified decision tree. This function accepts a dictionary of input features and returns a single prediction along with a list representing the truth values of the inner nodes:

```python
def predict(X: dict):
    nodes = [None] * 3  # Corresponding to the decision tree nodes
  
    # Evaluate nodes based on conditions
    nodes[0] = X["wage increase first year"] <= 4.0
    nodes[1] = X["pension"] == "none"
    nodes[2] = X["vacation"] == "ba"  # ba stands for below average

    if nodes[0]:
        if nodes[1]:
            prediction = 0  # class: bad
        else:
            if X["pension"] == "ret_allw":
                prediction = 0  # class: bad
            else:  # pension is 'empl_contr'
                prediction = 1  # class: good
    else:
        if nodes[2]:
            prediction = 0  # class: bad
        else:
            if X["vacation"] == "avg":
                prediction = 0  # class: bad
            else:  # vacation is 'gnr'
                prediction = 1  # class: good
    
    return prediction, nodes

# Example usage
features = {
    'duration': 3,
    'wage increase first year': 2.5,
    'wage increase second year': 3.0,
    'wage increase third year': 3.5,
    'cost of living adjustment': 'none',
    'working hours': 40,
    'pension': 'none',
    'standby pay': 10,
    'shift differential': 5,
    'education allowance': False,
    'statutory holidays': 12,
    'vacation': 'ba',
    'longterm disability assistance': True,
    'contribution to dental plan': 'full',
    'bereavement assistance': False,
    'contribution to health plan': 'half'
}

print(predict(features))  # Should output (prediction, nodes) where prediction is 0 (bad) or 1 (good)
```

Explanation:
- The conditions in the decision tree are based on the logic provided in the initial example.
- Each `node` in the `nodes` list corresponds to a condition check within the decision tree.
- The decision tree uses thresholds on "wage increase first year" and categorical checks on "pension" and "vacation."
- Depending on whether the conditions are met, the function assigns a prediction of either 0 (bad) or 1 (good).
