


```python
def predict(X: dict):
    nodes = 4 * [None]
    nodes[0] = X["Round"] <= 4
    nodes[1] = X["Round"] <= 8
    nodes[2] = X["Official"] == 1  # 1 = Yes
    nodes[3] = X["Judge"] == 3     # 3 = HBO-Lederman

    if nodes[0]:
        prediction = 1  # de la Hoya
    else:
        if nodes[1]:
            prediction = 1  # de la Hoya
        else:
            if nodes[2]:
                prediction = 0  # Trinidad
            else:
                if nodes[3]:
                    prediction = 1  # de la Hoya
                else:
                    prediction = 0  # Trinidad
    return prediction, nodes
```

**Explanation:**

- **nodes[0]** checks if the **Round** is less than or equal to 4.
- **nodes[1]** checks if the **Round** is less than or equal to 8.
- **nodes[2]** checks if the **Official** judge flag is **Yes** (1).
- **nodes[3]** checks if the **Judge** is **HBO-Lederman** (coded as 3).

The function follows the decision tree:

1. If the round is in the first four (**nodes[0]** is `True`), the prediction is **de la Hoya** (`1`).
2. If not, but the round is between 5 and 8 (**nodes[1]** is `True`), the prediction is still **de la Hoya** (`1`).
3. If the round is after 8:
   - If it's an official judge (**nodes[2]** is `True`), they voted for **Trinidad** (`0`).
   - If it's not an official judge:
     - If the judge is **HBO-Lederman** (**nodes[3]** is `True`), he favored **de la Hoya** (`1`).
     - Otherwise, the unofficial judges favored **Trinidad** (`0`).

This function returns the prediction along with the list of node evaluations (`nodes`), where each element is `True` (`1`) if the condition is satisfied or `False` (`0`) otherwise.

**Usage Example:**

```python
# Example input data
X_sample = {
    "Judge": 3,      # HBO-Lederman
    "Official": 0,   # No
    "Round": 10
}

# Get the prediction and node evaluations
prediction, nodes = predict(X_sample)

print(f"Prediction: {'de la Hoya' if prediction == 1 else 'Trinidad'}")
print(f"Node evaluations: {nodes}")
```

**Output:**

```
Prediction: de la Hoya
Node evaluations: [False, False, False, True]
```

This indicates that for **Round 10**, a non-official judge (**HBO-Lederman**) favored **de la Hoya**.