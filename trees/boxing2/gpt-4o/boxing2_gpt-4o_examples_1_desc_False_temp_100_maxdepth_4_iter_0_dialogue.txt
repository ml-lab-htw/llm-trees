


```python
def predict(X: dict):
    nodes = 7 * [None]

    # Node 0: Is the judge an official judge?
    nodes[0] = X["Official"] == 1

    if nodes[0]:  # Official judge
        # Node 1: Which official judge is it?
        nodes[1] = X["Judge"] == 0  # G. Hamada
        
        if nodes[1]:  # Judge G. Hamada
            # Node 2: Is it an early round (rounds 1-6)?
            nodes[2] = X["Round"] <= 6
            
            if nodes[2]:
                prediction = 0  # Trinidad
            else:
                prediction = 1  # de la Hoya
        else:
            # Node 3: Is the judge B. Logist?
            nodes[3] = X["Judge"] == 1
            
            if nodes[3]:  # Judge B. Logist
                # Node 4: Is it an early round (rounds 1-8)?
                nodes[4] = X["Round"] <= 8
                
                if nodes[4]:
                    prediction = 0  # Trinidad
                else:
                    prediction = 1  # de la Hoya
            else:
                # Node 5: Is the judge J. Roth?
                nodes[5] = X["Judge"] == 2

                if nodes[5]:  # Judge J. Roth
                    # Node 6: Is it an early round (rounds 1-7)?
                    nodes[6] = X["Round"] <= 7

                    if nodes[6]:
                        prediction = 0  # Trinidad
                    else:
                        prediction = 1  # de la Hoya
                else:
                    # Other official judges, assume van de Wiele
                    if X["Judge"] == 10:  # Judge van de Wiele
                        if X["Round"] <= 9:
                            prediction = 0  # Trinidad
                        else:
                            prediction = 1  # de la Hoya
                    else:
                        prediction = 1  # Default to de la Hoya for other official judges
    else:  # Non-official judge
        # Node 1: Which non-official judge is it?
        if X["Judge"] == 3:  # HBO-Lederman
            prediction = 1  # de la Hoya
        elif X["Judge"] == 4:  # Sportsticker
            prediction = 1  # de la Hoya
        elif X["Judge"] == 5:  # Los Angeles Times-Kawakami
            prediction = 0  # Trinidad
        elif X["Judge"] == 6:  # USA Today
            prediction = 0  # Trinidad
        elif X["Judge"] == 7:  # Associated Press
            prediction = 1  # de la Hoya
        elif X["Judge"] == 8:  # Las Vegas Review-Journal
            prediction = 1  # de la Hoya
        elif X["Judge"] == 9:  # Los Angeles Times-Springer
            prediction = 0  # Trinidad
        else:
            prediction = 1  # Default to de la Hoya if judge is not defined

    return prediction, nodes
```

### Explanation:
- **Nodes List**: Each entry in the `nodes` list represents whether a condition in the decision tree is satisfied (`True` or `False`). If the condition is satisfied, the corresponding entry in the `nodes` list is set to `True` (1), otherwise, it is set to `False` (0).
  
- **Node 0** checks if the judge is an official judge (`Official == 1`). If true, the decision tree branches into different official judges (e.g., **G. Hamada**, **B. Logist**, **J. Roth**, **van de Wiele**) and uses the round number to further refine the prediction.

- If **Node 0** is false, the decision tree considers non-official judges such as **HBO-Lederman**, **Sportsticker**, and others, which often have more consistent preferences for one fighter or the other.

- The tree uses the `Judge` and `Round` features to classify the winner (0 = Trinidad, 1 = de la Hoya) of each round.

### Example Usage:

```python
# Example input: Judge = HBO-Lederman (3), Non-official (0), Round 5
X = {"Judge": 3, "Official": 0, "Round": 5}
prediction, nodes = predict(X)
print(f"Prediction: {prediction}, Nodes: {nodes}")
# Output: Prediction: 1, Nodes: [False, None, None, None, None, None, None]
```

