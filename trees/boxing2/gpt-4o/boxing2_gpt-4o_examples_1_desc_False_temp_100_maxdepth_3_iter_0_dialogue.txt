


Here is the Python function based on the provided decision tree for predicting which fighter (0 = Trinidad, 1 = de la Hoya) won each round:

```python
def predict(X: dict):
    nodes = 4 * [None]
    
    # Node 0: Official judge check
    nodes[0] = X["Official"] == 1
    
    if nodes[0]:
        # Node 1: Round <= 6 check
        nodes[1] = X["Round"] <= 6
        
        if nodes[1]:
            # Node 2: Specific judge check in early rounds
            nodes[2] = X["Judge"] in [0, 1, 2, 8]  # G. Hamada, B. Logist, J. Roth, Las Vegas Review-Journal
            
            if nodes[2]:
                prediction = 1  # de la Hoya
            else:
                prediction = 0  # Trinidad
        else:
            prediction = 0  # Trinidad in later rounds
    else:
        # Node 3: HBO-Lederman check for unofficial judges
        nodes[3] = X["Judge"] == 3  # HBO-Lederman
        
        if nodes[3]:
            prediction = 1  # de la Hoya
        else:
            prediction = 0  # Trinidad

    return prediction, nodes
```

### Explanation of the Function:
- **Input** (`X`): A dictionary where the keys are feature names (`'Judge'`, `'Official'`, and `'Round'`) and the values are the corresponding feature values.
  
- **Nodes**: A list of booleans representing the truth values of the inner nodes.
  - `nodes[0]`: Checks if the judge is an official judge (`X["Official"] == 1`).
  - `nodes[1]`: If the judge is official, checks if the round number is less than or equal to 6 (`X["Round"] <= 6`).
  - `nodes[2]`: If in early rounds (1-6), checks if the judge is one of G. Hamada (0), B. Logist (1), J. Roth (2), or Las Vegas Review-Journal (8), which favor de la Hoya.
  - `nodes[3]`: If the judge is unofficial, checks if the judge is HBO-Lederman (3), who favors de la Hoya.

- **Prediction**: The function returns a prediction of the fighter who won the round (`0 = Trinidad`, `1 = de la Hoya`) based on the provided features, as well as the list of boolean values (`nodes`) representing the decisions made at each internal node.

### Example Usage:

```python
# Example input
X = {
    "Judge": 0,       # G. Hamada
    "Official": 1,    # Yes, official judge
    "Round": 5        # Round 5
}

# Get prediction and truth values of inner nodes
prediction, nodes = predict(X)
print("Prediction:", prediction)  # Output: 1 (de la Hoya)
print("Node values:", nodes)      # Output: [True, True, True, None]
```

In this example, G. Hamada, an official judge, is scoring round 5, which falls in the early rounds, and he tends to favor de la Hoya. Therefore, the prediction is `1` (de la Hoya). The node values indicate that the conditions at the first three nodes were satisfied.