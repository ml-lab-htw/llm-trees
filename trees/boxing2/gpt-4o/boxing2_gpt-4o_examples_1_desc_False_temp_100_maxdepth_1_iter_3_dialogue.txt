


```python
def predict(X: dict):
    nodes = 1 * [None]  # We only have one decision node in this tree (depth = 1)
    
    # Inner Node: Judge is in a specific set of judges (0 = G. Hamada, 2 = J. Roth, 5 = Los Angeles Times-Kawakami, 9 = Los Angeles Times-Springer, 10 = van de Wiele)
    nodes[0] = X["Judge"] in [0, 2, 5, 9, 10]
    
    # Decision based on the inner node
    if nodes[0]:
        prediction = 0  # Trinidad
    else:
        prediction = 1  # de la Hoya

    return prediction, nodes
```

### Explanation:
- The function `predict` takes a dictionary `X` where the keys are the feature names (`Judge`, `Official`, `Round`), and the values are the corresponding feature values.
- We have only one decision node (`nodes[0]`), which checks if the judge is in the set of judges who tend to favor **Trinidad** (judges: G. Hamada, J. Roth, Los Angeles Times-Kawakami, Los Angeles Times-Springer, van de Wiele).
- If the condition is satisfied (`nodes[0] == True`), the prediction is `0` (Trinidad).
- If the condition is not satisfied (`nodes[0] == False`), the prediction is `1` (de la Hoya).
- The function returns both the prediction and a list `nodes`, which contains the truth value of the inner node.

