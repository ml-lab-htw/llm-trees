


Based on the provided feature descriptions and target encoding, I'll create a decision tree prediction function that returns both the prediction (0 = certificate not taken, 1 = certificate taken) and the truth values of the inner nodes.

```python
def predict(X: dict):
    nodes = 3 * [None]
    
    # First split on Educational level (using 7 as threshold as it separates primary terminal leavers)
    nodes[0] = X["Educational_level"] <= 7
    
    # Second split on DVRT score (using 85 as a reasonable threshold)
    nodes[1] = X["DVRT"] <= 85
    
    # Third split on Type of school
    nodes[2] = X["Type_school"] == 2  # 2 = vocational
    
    if nodes[0]:
        # If educational level is low (primary terminal leaver or below)
        prediction = 0
    else:
        # For higher educational levels
        if nodes[1]:
            # Lower DVRT scores
            if nodes[2]:
                # Vocational school
                prediction = 0
            else:
                # Secondary school
                prediction = 1
        else:
            # Higher DVRT scores
            prediction = 1
            
    return prediction, nodes
```

This decision tree implements the following logic:
1. First checks if the educational level is less than or equal to 7 (primary terminal leaver)
2. For higher educational levels, checks if the DVRT score is less than or equal to 85
3. For lower DVRT scores, checks if the student is in a vocational school

The prediction will be:
- 0 (certificate not taken) if:
  - Educational level is low (≤7) OR
  - Educational level is higher but DVRT score is low (≤85) AND in vocational school
- 1 (certificate taken) if:
  - Educational level is higher (>7) AND either:
    - DVRT score is high (>85) OR
    - In secondary school despite lower DVRT score