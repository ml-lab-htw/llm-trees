


Based on the decision tree we created earlier and the provided feature keys and encodings, here's the Python function that predicts whether a school leaving certificate is taken or not:

```python
def predict(X: dict):
    nodes = 6 * [None]
    nodes[0] = X["Educational_level"] <= 5
    nodes[1] = X["DVRT"] <= 70
    nodes[2] = X["Type_school"] == 1  # secondary_terminal_leaver
    nodes[3] = X["Prestige_score"] <= 15
    nodes[4] = X["Sex"] == 1  # male
    nodes[5] = X["Type_school"] == 2  # vocational

    if nodes[0]:
        prediction = 0  # No certificate
    else:
        if nodes[1]:
            if nodes[2]:
                prediction = 1  # Certificate
            elif nodes[5]:
                prediction = 0  # No certificate
            else:
                prediction = 0  # No certificate (primary_terminal_leaver)
        else:
            if nodes[3]:
                if nodes[4]:
                    prediction = 1  # Certificate
                else:
                    prediction = 0  # No certificate
            else:
                prediction = 1  # Certificate

    return prediction, nodes
```

This function takes a dictionary `X` with the feature values as input and returns a tuple containing the prediction (0 for "not taken" or 1 for "taken") and a list of boolean values representing the truth values of the inner nodes.

The decision tree uses the following features and thresholds:

1. Educational level (≤5 or >5)
2. Drumcondra Verbal Reasoning Test Score (≤70 or >70)
3. Type of school (secondary, vocational, or primary terminal leaver)
4. Prestige score for father's occupation (≤15 or >15)
5. Sex (male or female)

The function first evaluates each condition and stores the results in the `nodes` list. Then, it follows the decision tree structure to make a prediction based on these conditions.

Note that this implementation assumes that the input features are