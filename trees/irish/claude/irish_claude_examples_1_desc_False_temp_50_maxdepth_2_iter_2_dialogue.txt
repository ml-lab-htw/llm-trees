


I'll create a decision tree function based on the features you provided, using DVRT and Educational_level as the main predictors for whether a school leaving certificate is taken (1) or not (0).

```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # First decision node: DVRT score threshold
    nodes[0] = X["DVRT"] <= 85
    
    # Second decision node: Educational level threshold
    nodes[1] = X["Educational_level"] <= 8
    
    if nodes[0]:  # If DVRT score is <= 85
        if nodes[1]:  # If Educational_level is <= 8
            prediction = 0  # No certificate
        else:  # If Educational_level is > 8
            prediction = 1  # Certificate taken
    else:  # If DVRT score is > 85
        prediction = 1  # Certificate taken
    
    return prediction, nodes
```

This implementation:
1. Uses DVRT (Drumcondra Verbal Reasoning Test score) as the primary split with a threshold of 85
2. For students with lower DVRT scores, uses Educational_level as the secondary split with a threshold of 8 (corresponding to Senior_cycle_incomplete-secondary_school)
3. Returns both the prediction (0 = certificate not taken, 1 = certificate taken) and a list of boolean values representing the conditions at each node
4. The thresholds are chosen based on educational meaningful values:
   - DVRT score of 85 represents a moderate academic ability level
   - Educational_level of 8 represents the transition point between junior and senior cycle

The function follows the same structure as your example and maintains the correct feature names and encodings as specified in your feature description.