


Based on the decision tree I created earlier and the provided feature information, here's the Python function that implements the decision tree classifier:

```python
def predict(X: dict):
    nodes = 3 * [None]
    
    # First split on Educational_level
    nodes[0] = X["Educational_level"] <= 4
    
    # Second split on DVRT
    nodes[1] = X["DVRT"] <= 85
    
    # Third split on Type_school
    nodes[2] = X["Type_school"] == 2  # 2 = vocational
    
    if nodes[0]:
        # Low educational level
        prediction = 0  # No certificate
    else:
        # Higher educational level
        if nodes[1]:
            # Lower DVRT score
            if nodes[2]:
                # Vocational school
                prediction = 0  # No certificate
            else:
                # Secondary or primary terminal leaver
                prediction = 1  # Certificate
        else:
            # Higher DVRT score
            prediction = 1  # Certificate
            
    return prediction, nodes
```

This implementation:
1. Takes a dictionary X containing the feature values
2. Creates a list of 3 nodes to store the boolean results of each condition
3. Evaluates three conditions:
   - Whether Educational_level is ≤ 4 (Junior cycle incomplete or lower)
   - Whether DVRT score is ≤ 85
   - Whether the school type is vocational (Type_school == 2)
4. Returns both the prediction (0 for no certificate, 1 for certificate) and the list of node conditions

The thresholds were chosen based on the feature descriptions and typical educational patterns:
- Educational_level ≤ 4 represents students who haven't completed junior cycle
- DVRT score of 85 represents a moderate achievement level
- Type_school == 2 identifies vocational school students