


```python
def predict(X: dict):
    nodes = 2 * [None]
    
    # Decision Node 1: Educational level attained
    # Threshold: Educational level <= 4.5 (roughly separates low and higher educational attainment)
    nodes[0] = X["Educational_level"] <= 4.5
    
    if nodes[0]:  # If Educational level is low (<= 4.5)
        # Decision Node 2: Type of school 
        # Primary terminal leaver (Type_school == 0) is a strong indicator of no certificate
        nodes[1] = X["Type_school"] == 0
        
        if nodes[1]:  # If Type of school is primary terminal leaver
            prediction = 0  # No school leaving certificate
        else:  # Any other school type (secondary or vocational)
            prediction = 0  # Still likely no certificate at this level
    else:  # If Educational level is high (> 4.5)
        # Decision Node 2: Drumcondra Verbal Reasoning Test Score (DVRT)
        # Threshold: DVRT score > 30 (a higher score indicates higher likelihood of certification)
        nodes[1] = X["DVRT"] > 30
        
        if nodes[1]:  # If DVRT score is high
            prediction = 1  # School leaving certificate is taken
        else:  # If DVRT score is low
            prediction = 0  # No school leaving certificate
    
    return prediction, nodes
```

### Explanation:
1. **Node 0** checks the feature `Educational_level`. The threshold of `4.5` is chosen to split between lower and higher levels of education.
   - If `Educational_level <= 4.5`, this means the student likely left school early, so we proceed to check the **Type of school**.
   - If `Educational_level > 4.5`, the student has attained higher education, so we check their **DVRT** score.
   
2. **Node 1** (if `Educational_level <= 4.5`) checks the feature `Type_school`, where `primary_terminal_leaver (0)` is strongly associated with not having a certificate.

3. **Node 1** (if `Educational_level > 4.5`) checks the **DVRT** score, where a score of `> 30` suggests higher academic ability and a higher likelihood of obtaining the certificate.

