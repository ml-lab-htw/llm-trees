


With the provided details, hereâ€™s the Python function to predict whether the school leaving certificate is taken or not, and return the truth values of the conditions in the inner nodes:

```python
def predict(X: dict):
    # Initialize a list to store the truth values of the inner nodes
    nodes = 2 * [None]
    
    # Decision tree conditions
    nodes[0] = X["Educational_level"] <= 4  # Here, we assume that an Educational_level less than or equal to 4 means a lower educational level to differentiate between primary terminal leaver and higher levels.
    nodes[1] = X["Type_school"] == 0  # Type of school: 0 = primary_terminal_leaver, 1 = secondary_terminal_leaver, 2 = vocational
    
    # Decision tree logic based on the conditions
    if nodes[0]:
        if nodes[1]:
            prediction = 0  # "No" (school leaving certificate not taken)
        else:
            prediction = 1  # "Yes" (school leaving certificate taken)
    else:
        prediction = 1  # "Yes" (school leaving certificate taken)

    return prediction, nodes

# Example usage:
example_input = {
    'Sex': 1,
    'DVRT': 95,
    'Educational_level': 3,
    'Prestige_score': 20,
    'Type_school': 1
}

print(predict(example_input))
```

Explanation of the function:
1. **Initialize Nodes**: We create a list `nodes` to store the truth values of the inner nodes.
2. **Conditions**: The first condition (`nodes[0]`) checks if `Educational_level` is less than or equal to 4. The second condition (`nodes[1]`) checks if `Type_school` is equal to primary terminal leaver (i.e., 0).
3. **Decision Logic**: Depending on the truth values of the conditions, the function assigns a prediction:
    - If `Educational_level` is 4 or lower:
        - If the type of school is primary terminal leaver (`nodes[1]` is True), the prediction is `0` (certificate not taken).
        - Otherwise, the prediction is `1` (certificate taken).
    - If `Educational_level` is higher than 4, the prediction is `1` (certificate taken).

Remember to provide the specific input with the exact spelling and casing of feature keys when using the `predict` function.