


Below is the Python function implementing the decision tree with a maximum depth of 3 using the specified feature names. The function returns the prediction for whether the school leaving certificate is taken (0 = not taken, 1 = taken) and also a list representing the truth values of the inner nodes.

```python
def predict(X: dict):
    """
    Predict whether the school leaving certificate is taken or not.

    Args:
    X (dict): A dictionary containing the following features:
        - "Sex" (int): 0 = female, 1 = male
        - "DVRT" (float): Drumcondra Verbal Reasoning Test score
        - "Educational_level" (int): Encoded educational level (see description)
        - "Prestige_score" (int): Father's occupational prestige score (0 - 28)
        - "Type_school" (int): Encoded type of school (0 = primary, 1 = secondary, 2 = vocational)

    Returns:
    tuple: A tuple containing:
        - prediction (int): 0 = not taken, 1 = taken
        - nodes (list of int): Truth values of inner nodes (1 if condition is satisfied, 0 otherwise)
    """
    nodes = [0] * 3

    # First condition: Educational_level <= 6
    nodes[0] = X["Educational_level"] <= 6
    if nodes[0]:
        # Second condition: DVRT <= 50
        nodes[1] = X["DVRT"] <= 50
        if nodes[1]:
            prediction = 0  # Not taken
        else:
            prediction = 1  # Taken
    else:  # Educational_level > 6
        # Third condition: Type_school == 1 (secondary_terminal_leaver)
        nodes[2] = X["Type_school"] == 1
        if nodes[2]:
            prediction = 1  # Taken
        else:
            prediction = 0  # Not taken

    return prediction, nodes
```

### Explanation:
1. **Node 1:** The first condition checks if the `Educational_level` is less than or equal to 6. This roughly corresponds to people who have not gone far in secondary or vocational education.  
   - If yes (`nodes[0]` == 1), move to Node 2.  
   - If no (`nodes[0]` == 0), move to Node 3.

2. **Node 2:** For those with `Educational_level <= 6`, it checks if their `Drumcondra Verbal Reasoning Test Score (DVRT)` is less than or equal to 50.  
   - A low score on the test (â‰¤ 50) indicates not taking the school leaving certificate (prediction = `0`).  
   - A high score (> 50) indicates taking the school leaving certificate (prediction = `1`).

3. **Node 3:** For those with `Educational_level > 6`, it checks if the `Type_school` is `1` (secondary). This represents students in secondary schools more likely to take the certificate.  
   - If attending a secondary school (`nodes[2]` == 1), the prediction is `1` (taken).  
   - Otherwise (`nodes[2]` == 0), the prediction is `0` (not taken).

### Example Usage:
```python
sample_1 = {
    "Sex": 0,  # female
    "DVRT": 55,  # high score
    "Educational_level": 4,  # Junior_cycle_incomplete-secondary_school
    "Prestige_score": 15,  # medium prestige
    "Type_school": 1  # secondary
}

sample_2 = {
    "Sex": 1,  # male
    "DVRT": 40,  # low score
    "Educational_level": 7,  # Primary_terminal_leaver
    "Prestige_score": 10,  # low prestige
    "Type_school": 0  # primary_terminal_leaver
}

print(predict(sample_1))  # Output: (1, [1, 0, 0]) => School leaving cert is taken
print(predict(sample_2))  # Output: (0, [0, 0, 0]) => School leaving cert is not taken
```