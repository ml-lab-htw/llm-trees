


Certainly! Below is the Python function `predict` that represents the decision tree you provided. The function takes a dictionary `X` of features (with exact keys as specified) and returns a prediction (0 or 1) along with a list of truth values indicating whether each condition in the decision tree was satisfied (1 for True, 0 for False).

```python
def predict(X: dict):
    nodes = [None] * 3  # Initialize a list to store truth values of the inner nodes

    # Node 0: Check if Type_school == 0 ('primary_terminal_leaver')
    nodes[0] = 1 if X['Type_school'] == 0 else 0
    if nodes[0]:  # If Type_school is 'primary_terminal_leaver'
        prediction = 0  # 'No school leaving certificate'
    else:
        # Node 1: Check if DVRT <= 30
        nodes[1] = 1 if X['DVRT'] <= 30 else 0
        if nodes[1]:
            # Node 2: Check if Prestige_score <= 15
            nodes[2] = 1 if X['Prestige_score'] <= 15 else 0
            if nodes[2]:
                prediction = 0  # 'No school leaving certificate'
            else:
                prediction = 1  # 'School leaving certificate taken'
        else:
            prediction = 1  # 'School leaving certificate taken'
    return prediction, nodes
```

**Explanation:**

- **Node 0:** Checks if the `Type_school` is `0`, which corresponds to `'primary_terminal_leaver'`. If this condition is true, it immediately predicts `0` (school leaving certificate not taken).
- **Node 1:** If the first condition is not met, it checks if `DVRT` (Drumcondra Verbal Reasoning Test Score) is less than or equal to `30`.
- **Node 2:** If `DVRT <= 30`, it then checks if the `Prestige_score` is less than or equal to `15`.
- The `nodes` list records `1` if the condition at that node is satisfied and `0` otherwise.
- The function finally returns the prediction and the list of node truth values.

**Usage Example:**

Here's how you can use the `predict` function with an example input:

```python
# Example input
X_example = {
    'Sex': 1,                # Male
    'DVRT': 28,              # Drumcondra Verbal Reasoning Test Score
    'Educational_level': 5,
    'Prestige_score': 14,    # Prestige score for father's occupation
    'Type_school': 1         # 'secondary_terminal_leaver'
}

# Get prediction and node truth values
prediction, nodes = predict(X_example)

print("Prediction:", prediction)  # Output: Prediction: 0 (No school leaving certificate)
print("Nodes:", nodes)           # Output: Nodes: [0, 1, 1]
```

**Note on Feature Encodings:**

- **Sex:** `0` = female, `1` = male
- **Type_school:** `0` = 'primary_terminal_leaver', `1` = 'secondary_terminal_leaver', `2` = 'vocational'

**Thresholds Used:**

- `DVRT` threshold set at `30`
- `Prestige_score` threshold set at `15`

These thresholds are meaningful values based on the decision points in the tree you've provided.