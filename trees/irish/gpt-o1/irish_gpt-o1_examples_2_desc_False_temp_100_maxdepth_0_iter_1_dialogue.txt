


Sure! Here's the decision tree formatted as a Python function:

```python
def predict(X: dict):
    nodes = [0] * 4  # Initialize a list of 4 nodes

    # Node 0: Educational_level <= 5.5
    nodes[0] = int(X["Educational_level"] <= 5.5)

    if nodes[0]:  # If Educational_level <= 5.5
        # Node 1: Type_school == 0 (primary_terminal_leaver)
        nodes[1] = int(X["Type_school"] == 0)
        if nodes[1]:  # If Type_school is primary_terminal_leaver
            prediction = 0  # School Leaving Certificate Not Taken
            nodes[2] = 0  # Unused
            nodes[3] = 0  # Unused
        else:
            # Node 2: Prestige_score <= 12.5
            nodes[2] = int(X["Prestige_score"] <= 12.5)
            if nodes[2]:  # If Prestige_score <= 12.5
                prediction = 0  # School Leaving Certificate Not Taken
            else:
                prediction = 1  # School Leaving Certificate Taken
            nodes[3] = 0  # Unused
    else:  # If Educational_level > 5.5
        nodes[1] = 0  # Unused
        nodes[2] = 0  # Unused
        # Node 3: DVRT <= 60
        nodes[3] = int(X["DVRT"] <= 60)
        if nodes[3]:  # If DVRT <= 60
            prediction = 0  # School Leaving Certificate Not Taken
        else:
            prediction = 1  # School Leaving Certificate Taken

    return prediction, nodes
```

**Explanation of the Function:**

- **Nodes List:**
  - `nodes[0]`: Represents the condition `Educational_level <= 5.5`.
  - `nodes[1]`: Represents the condition `Type_school == 0` (primary_terminal_leaver).
  - `nodes[2]`: Represents the condition `Prestige_score <= 12.5`.
  - `nodes[3]`: Represents the condition `DVRT <= 60`.

- **Prediction Logic:**
  - If the **Educational_level** is low (`<= 5.5`):
    - If the **Type_school** is **primary_terminal_leaver** (`Type_school == 0`):
      - Predict **0** (School Leaving Certificate Not Taken).
    - Else:
      - If the **Prestige_score** is low (`<= 12.5`):
        - Predict **0**.
      - Else:
        - Predict **1** (School Leaving Certificate Taken).
  - Else:
    - If the **DVRT** score is low (`<= 60`):
      - Predict **0**.
    - Else:
      - Predict **1**.

**Note on Feature Encoding:**

- **Type_school** encoding:
  - `0`: primary_terminal_leaver
  - `1`: secondary_terminal_leaver
  - `2`: vocational

- **Target Variable Encoding:**
  - `0`: School Leaving Certificate Not Taken
  - `1`: School Leaving Certificate Taken

**Example Usage:**

```python
# Example input
X_example = {
    'Sex': 1,  # Male
    'DVRT': 55,
    'Educational_level': 4,
    'Prestige_score': 10,
    'Type_school': 0  # primary_terminal_leaver
}

prediction, nodes = predict(X_example)
print("Prediction:", prediction)
print("Nodes:", nodes)
```

**Output:**

```
Prediction: 0
Nodes: [1, 1, 0, 0]
```

This indicates that:

- `nodes[0]` is `1` because `Educational_level` is `4`, which is `<= 5.5`.
- `nodes[1]` is `1` because `Type_school` is `0`.
- The subsequent nodes are `0` because they're not evaluated in this path.
- The prediction is `0`, meaning the School Leaving Certificate is **Not Taken**.